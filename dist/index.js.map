{"version":3,"file":"index.js","sources":["../src/assets/const/event.js","../src/assets/const/name.js","../src/utils/index.js","../src/module/TableOperationMenu.js","../src/format/ContainerFormat.js","../src/format/TableCellInnerFormat.js","../src/format/TableRowFormat.js","../src/format/TableBodyFormat.js","../src/format/TableCellFormat.js","../src/format/TableColFormat.js","../src/format/TableFormat.js","../src/format/TableColgroupFormat.js","../src/assets/const/vars.js","../src/format/TableWrapperFormat.js","../src/format/rewrite/List.js","../src/module/TableSelection.js","../src/module/TableToolTip.js","../src/index.js"],"sourcesContent":["export const CREATE_TABLE = 'createTable';\r\n","export const blotName = {\r\n  contain: 'contain',\r\n  tableWrapper: 'tableWrapper',\r\n  table: 'table',\r\n  tableColGroup: 'colgroup',\r\n  tableCol: 'col',\r\n  tableBody: 'tbody',\r\n  tableRow: 'tr',\r\n  tableCell: 'td',\r\n  tableCellInner: 'tableCellInner',\r\n};\r\nexport const moduleName = {\r\n  table: 'table',\r\n};\r\nexport const toolName = {\r\n  table: 'table',\r\n};\r\n","/* eslint-disable unused-imports/no-unused-vars */\r\nimport { CREATE_TABLE } from '../assets/const';\r\n\r\nexport const randomId = () => Math.random().toString(36).slice(2);\r\n\r\nlet zindex = 8000;\r\nexport const dialog = ({ child, target = document.body, beforeClose = () => {} } = {}) => {\r\n  const appendTo = target;\r\n  const dialog = document.createElement('div');\r\n  dialog.classList.add('dialog');\r\n  dialog.style.zIndex = zindex;\r\n  const overlay = document.createElement('div');\r\n  overlay.classList.add('dialog_overlay');\r\n  dialog.appendChild(overlay);\r\n  if (child) {\r\n    const content = document.createElement('div');\r\n    content.classList.add('dialog_content');\r\n    content.appendChild(child);\r\n    overlay.appendChild(content);\r\n    content.addEventListener('click', (e) => {\r\n      e.stopPropagation();\r\n    });\r\n  }\r\n\r\n  const originOverflow = getComputedStyle(appendTo).overflow;\r\n  appendTo.style.overflow = 'hidden';\r\n\r\n  appendTo.appendChild(dialog);\r\n  const close = () => {\r\n    beforeClose();\r\n    dialog.remove();\r\n    appendTo.style.overflow = originOverflow;\r\n  };\r\n  dialog.addEventListener('click', close);\r\n  zindex += 1;\r\n\r\n  return { dialog, close };\r\n};\r\n\r\n/**\r\n * 创建一个带 label 的输入框\r\n *\r\n * @param {string} label - The label for the input item.\r\n * @param {object} options - The options for the input item.\r\n * @param {string} options.type - The type of the input.\r\n * @param {string} options.value - The initial value of the input.\r\n * @param {number} options.max - The maximum value allowed for the input.\r\n * @param {number} options.min - The minimum value allowed for the input.\r\n * @return {object} An object containing the input item, the input element, and an error tip function.\r\n */\r\nexport const createInputItem = (label, options) => {\r\n  options.type || (options.type = 'text');\r\n  options.value || (options.value = '');\r\n\r\n  const inputItem = document.createElement('div');\r\n  inputItem.classList.add('input_item');\r\n\r\n  if (label) {\r\n    const inputLabel = document.createElement('span');\r\n    inputLabel.classList.add('input_label');\r\n    inputLabel.textContent = label;\r\n    inputItem.appendChild(inputLabel);\r\n  }\r\n\r\n  const inputInput = document.createElement('div');\r\n  inputInput.classList.add('input_input');\r\n  const input = document.createElement('input');\r\n  for (const key in options) {\r\n    input.setAttribute(key, options[key]);\r\n  }\r\n  if (options.max || options.min) {\r\n    input.addEventListener('blur', () => {\r\n      if (options.max && options.max <= input.value) {\r\n        input.value = options.max;\r\n      }\r\n      if (options.min && options.min >= input.value) {\r\n        input.value = options.min;\r\n      }\r\n    });\r\n  }\r\n\r\n  inputInput.appendChild(input);\r\n  inputItem.appendChild(inputInput);\r\n\r\n  input.addEventListener('focus', () => {\r\n    inputInput.classList.add('focus');\r\n  });\r\n  input.addEventListener('blur', () => {\r\n    inputInput.classList.remove('focus');\r\n  });\r\n\r\n  const errorTip = (msg) => {\r\n    if (inputInput.classList.contains('error')) {\r\n      inputInput.querySelector('.error_tip').textContent = msg;\r\n    }\r\n    else {\r\n      const errorTip = document.createElement('span');\r\n      errorTip.classList.add('error_tip');\r\n      errorTip.textContent = msg;\r\n      inputInput.appendChild(errorTip);\r\n    }\r\n\r\n    inputInput.classList.add('error');\r\n\r\n    const removeError = () => {\r\n      inputInput.classList.remove('error');\r\n      errorTip.remove();\r\n    };\r\n    return { removeError };\r\n  };\r\n\r\n  return { item: inputItem, input, errorTip };\r\n};\r\n\r\n/**\r\n * 创建具有指定行数和列数的表格\r\n *\r\n * @param {number} row - The number of rows for the table (optional, default: 3)\r\n * @param {number} col - The number of columns for the table (optional, default: 3)\r\n * @return {Promise} A promise that resolves with an object containing the row and column values when the table creation is confirmed, or rejects if the dialog is closed without confirmation.\r\n */\r\nexport const showTableCreator = async (row = 3, col = 3) => {\r\n  const box = document.createElement('div');\r\n  box.classList.add('create_box');\r\n  const inputContent = document.createElement('div');\r\n  inputContent.classList.add('create_input_content');\r\n\r\n  const {\r\n    item: rowItem,\r\n    input: rowInput,\r\n    errorTip: rowErrorTip,\r\n  } = createInputItem('row', { type: 'number', value: row, max: 99 });\r\n  const {\r\n    item: colItem,\r\n    input: colInput,\r\n    errorTip: colErrorTip,\r\n  } = createInputItem('col', { type: 'number', value: col, max: 99 });\r\n\r\n  inputContent.appendChild(rowItem);\r\n  inputContent.appendChild(colItem);\r\n  box.appendChild(inputContent);\r\n\r\n  const control = document.createElement('div');\r\n  control.classList.add('create_control');\r\n\r\n  const confirmBtn = document.createElement('button');\r\n  confirmBtn.classList.add('create_control_btn', 'confirm');\r\n  confirmBtn.textContent = 'Confirm';\r\n\r\n  const cancelBtn = document.createElement('button');\r\n  cancelBtn.classList.add('create_control_btn', 'cancel');\r\n  cancelBtn.textContent = 'Cancel';\r\n\r\n  control.appendChild(confirmBtn);\r\n  control.appendChild(cancelBtn);\r\n  box.appendChild(control);\r\n\r\n  return new Promise((resolve, reject) => {\r\n    const { close } = dialog({ child: box, beforeClose: reject });\r\n\r\n    confirmBtn.addEventListener('click', async () => {\r\n      const row = Number(rowInput.value);\r\n      const col = Number(colInput.value);\r\n\r\n      if (Number.isNaN(row) || row <= 0) {\r\n        return rowErrorTip('Invalid number');\r\n      }\r\n      if (Number.isNaN(col) || col <= 0) {\r\n        return colErrorTip('Invalid number');\r\n      }\r\n      resolve({ row, col });\r\n      close();\r\n    });\r\n    cancelBtn.addEventListener('click', () => {\r\n      close();\r\n    });\r\n  });\r\n};\r\n\r\n/**\r\n * 显示表格选择器\r\n */\r\nexport const showTableSelector = (customButton) => {\r\n  const selectDom = document.createElement('div');\r\n  selectDom.classList.add('create_select');\r\n\r\n  const selectBlock = document.createElement('div');\r\n  selectBlock.classList.add('create_select_block');\r\n\r\n  for (let r = 0; r < 8; r++) {\r\n    for (let c = 0; c < 8; c++) {\r\n      const selectItem = document.createElement('div');\r\n      selectItem.classList.add('create_select_block_item');\r\n      selectItem.dataset.row = r + 1;\r\n      selectItem.dataset.col = c + 1;\r\n      selectBlock.appendChild(selectItem);\r\n    }\r\n  }\r\n\r\n  const selectCustom = document.createElement('div');\r\n  selectCustom.classList.add('create_select_custom');\r\n  selectCustom.textContent = customButton || '自定义行列数';\r\n\r\n  selectDom.appendChild(selectBlock);\r\n  selectDom.appendChild(selectCustom);\r\n\r\n  const sendTableData = ({ row, col }) => {\r\n    selectDom.dispatchEvent(new CustomEvent(CREATE_TABLE, { detail: { row: Number(row), col: Number(col) } }));\r\n  };\r\n  const updateSelectBlockItems = () => {\r\n    const { row, col } = selectDom.dataset;\r\n    Array.prototype.forEach.call(selectBlock.querySelectorAll('.active'), (item) => {\r\n      item.classList.remove('active');\r\n    });\r\n    if (!row || !col) return;\r\n    const childs = Array.from(selectBlock.children);\r\n    for (let i = 0; i < childs.length; i++) {\r\n      if (childs[i].dataset.row > row && childs[i].dataset.col > col) {\r\n        return;\r\n      }\r\n      if (childs[i].dataset.row <= row && childs[i].dataset.col <= col) {\r\n        childs[i].classList.add('active');\r\n      }\r\n      else {\r\n        childs[i].classList.remove('active');\r\n      }\r\n    }\r\n  };\r\n  selectBlock.addEventListener('mousemove', (e) => {\r\n    const { row, col } = e.target.dataset;\r\n    if (!row || !col) return;\r\n    selectDom.dataset.row = row;\r\n    selectDom.dataset.col = col;\r\n    updateSelectBlockItems();\r\n  });\r\n  selectBlock.addEventListener('mouseleave', (e) => {\r\n    delete selectDom.dataset.row;\r\n    delete selectDom.dataset.col;\r\n    updateSelectBlockItems();\r\n  });\r\n  selectBlock.addEventListener('click', () => {\r\n    const { row, col } = selectDom.dataset;\r\n    if (!row || !col) return;\r\n    sendTableData({ row, col });\r\n  });\r\n\r\n  selectCustom.addEventListener('click', () => {\r\n    showTableCreator().then(({ row, col }) => {\r\n      sendTableData({ row, col });\r\n    });\r\n  });\r\n\r\n  return selectDom;\r\n};\r\n\r\nexport function css(domNode, rules) {\r\n  if (typeof rules === 'object') {\r\n    for (const prop in rules) {\r\n      domNode.style[prop] = rules[prop];\r\n    }\r\n  }\r\n}\r\nexport function isRectanglesIntersect(a, b, tolerance = 4) {\r\n  const { x: minAx, y: minAy, x1: maxAx, y1: maxAy } = a;\r\n  const { x: minBx, y: minBy, x1: maxBx, y1: maxBy } = b;\r\n  const notOverlapX = maxAx <= minBx + tolerance || minAx + tolerance >= maxBx;\r\n  const notOverlapY = maxAy <= minBy + tolerance || minAy + tolerance >= maxBy;\r\n  return !(notOverlapX || notOverlapY);\r\n}\r\n\r\nexport function getRelativeRect(targetRect, container) {\r\n  const containerRect = container.getBoundingClientRect();\r\n\r\n  return {\r\n    x: targetRect.x - containerRect.x - container.scrollLeft,\r\n    y: targetRect.y - containerRect.y - container.scrollTop,\r\n    x1: targetRect.x - containerRect.x - container.scrollLeft + targetRect.width,\r\n    y1: targetRect.y - containerRect.y - container.scrollTop + targetRect.height,\r\n    width: targetRect.width,\r\n    height: targetRect.height,\r\n  };\r\n}\r\n\r\n// Deprecated\r\nexport function computeBoundaryFromRects(startRect, endRect) {\r\n  const x = Math.min(startRect.x, endRect.x, startRect.x + startRect.width - 1, endRect.x + endRect.width - 1);\r\n  const x1 = Math.max(startRect.x, endRect.x, startRect.x + startRect.width - 1, endRect.x + endRect.width - 1);\r\n  const y = Math.min(startRect.y, endRect.y, startRect.y + startRect.height - 1, endRect.y + endRect.height - 1);\r\n  const y1 = Math.max(startRect.y, endRect.y, startRect.y + startRect.height - 1, endRect.y + endRect.height - 1);\r\n\r\n  const width = x1 - x;\r\n  const height = y1 - y;\r\n\r\n  return { x, x1, y, y1, width, height };\r\n}\r\n\r\nexport function findParentBlot(blot, targetBlotName) {\r\n  let target = blot.parent;\r\n  while (target && target.statics.blotName !== targetBlotName && target !== blot.scroll) {\r\n    target = target.parent;\r\n  }\r\n  if (target === blot.scroll) {\r\n    throw new Error(`${blot.statics.blotName} must be a child of ${targetBlotName}`);\r\n  }\r\n  return target;\r\n}\r\n\r\nexport function isString(val) {\r\n  return typeof val === 'string';\r\n}\r\nexport function isFunction(val) {\r\n  return typeof val === 'function';\r\n}\r\nexport function isUndefined(val) {\r\n  return val === undefined;\r\n}\r\nexport function isArray(val) {\r\n  return Array.isArray(val);\r\n}\r\n\r\nexport function debounce(func, wait) {\r\n  let timeout;\r\n  return function (...args) {\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(() => func.apply(this, args), wait);\r\n  };\r\n}\r\n","import { css, isArray, isFunction, isString } from '../utils';\r\nimport { moduleName } from '../assets/const';\r\n\r\nconst MENU_ITEMS_DEFAULT = {\r\n  insertColumnLeft: {\r\n    text: '在左侧插入一列',\r\n    handler() {\r\n      const tableModule = this.quill.getModule(moduleName.table);\r\n      tableModule.appendCol();\r\n      tableModule.hideTableTools();\r\n    },\r\n  },\r\n  insertColumnRight: {\r\n    text: '在右侧插入一列',\r\n    handler() {\r\n      const tableModule = this.quill.getModule(moduleName.table);\r\n      tableModule.appendCol(true);\r\n      tableModule.hideTableTools();\r\n    },\r\n  },\r\n  insertRowTop: {\r\n    text: '在上方插入一行',\r\n    handler() {\r\n      const tableModule = this.quill.getModule(moduleName.table);\r\n      tableModule.appendRow();\r\n      tableModule.hideTableTools();\r\n    },\r\n  },\r\n  insertRowBottom: {\r\n    text: '在下方插入一行',\r\n    groupEnd: true,\r\n    handler() {\r\n      const tableModule = this.quill.getModule(moduleName.table);\r\n      tableModule.appendRow(true);\r\n      tableModule.hideTableTools();\r\n    },\r\n  },\r\n  removeCol: {\r\n    text: '删除所在列',\r\n    handler() {\r\n      const tableModule = this.quill.getModule(moduleName.table);\r\n      tableModule.removeCol();\r\n      tableModule.hideTableTools();\r\n    },\r\n  },\r\n  removeRow: {\r\n    text: '删除所在行',\r\n    handler() {\r\n      const tableModule = this.quill.getModule(moduleName.table);\r\n      tableModule.removeRow();\r\n      tableModule.hideTableTools();\r\n    },\r\n  },\r\n  removeTable: {\r\n    text: '删除表格',\r\n    groupEnd: true,\r\n    handler() {\r\n      const tableModule = this.quill.getModule(moduleName.table);\r\n      tableModule.removeTable();\r\n      tableModule.hideTableTools();\r\n    },\r\n  },\r\n  mergeCell: {\r\n    text: '合并单元格',\r\n    handler() {\r\n      const tableModule = this.quill.getModule(moduleName.table);\r\n      tableModule.mergeCells();\r\n      tableModule.hideTableTools();\r\n    },\r\n  },\r\n  splitCell: {\r\n    text: '拆分单元格',\r\n    groupEnd: true,\r\n    handler() {\r\n      const tableModule = this.quill.getModule(moduleName.table);\r\n      tableModule.splitCell();\r\n      tableModule.hideTableTools();\r\n    },\r\n  },\r\n  setBackgroundColor: {\r\n    text: '设置背景颜色',\r\n    isColorChoose: true,\r\n    handler(color) {\r\n      const tableModule = this.quill.getModule(moduleName.table);\r\n      tableModule.setStyle({ backgroundColor: color }, this.selectedTds);\r\n    },\r\n  },\r\n  clearBackgroundColor: {\r\n    text: '清除背景颜色',\r\n    handler() {\r\n      const tableModule = this.quill.getModule(moduleName.table);\r\n      tableModule.setStyle({ backgroundColor: null }, this.selectedTds);\r\n    },\r\n  },\r\n  setBorderColor: {\r\n    text: '设置边框颜色',\r\n    isColorChoose: true,\r\n    handler(color) {\r\n      const tableModule = this.quill.getModule(moduleName.table);\r\n      tableModule.setStyle({ borderColor: color }, this.selectedTds);\r\n    },\r\n  },\r\n  clearBorderColor: {\r\n    text: '清除边框颜色',\r\n    handler() {\r\n      const tableModule = this.quill.getModule(moduleName.table);\r\n      tableModule.setStyle({ borderColor: null }, this.selectedTds);\r\n    },\r\n  },\r\n};\r\nconst MENU_MIN_HEIHGT = 150;\r\n\r\n/*\r\n  options = {\r\n    items: {\r\n      functionName: {\r\n        text: '显示文字',\r\n        handle() {},    // 触发事件\r\n        iconSrc: string,    // icon url\r\n        groupEnd: boolean, // 是否显示分隔线\r\n        subTitle: '显示子标题',\r\n      }\r\n    }\r\n  }\r\n*/\r\nexport class TableOperationMenu {\r\n  constructor(params, quill, options = {}) {\r\n    this.table = params.table;\r\n    this.quill = quill;\r\n    this.options = options;\r\n    const tableModule = this.quill.getModule(moduleName.table);\r\n    this.tableSelection = tableModule.tableSelection;\r\n    this.menuItems = {};\r\n    this.mergeMenuItems();\r\n\r\n    this.boundary = this.tableSelection.boundary;\r\n    this.selectedTds = this.tableSelection.selectedTds;\r\n\r\n    this.destroyHandler = this.destroy.bind(this);\r\n    this.menuInitial(params);\r\n\r\n    document.addEventListener('click', this.destroyHandler, false);\r\n  }\r\n\r\n  mergeMenuItems() {\r\n    if (this.options?.replaceItems) {\r\n      this.menuItems = this.options?.items ?? {};\r\n    }\r\n    else if (this.options?.modifyItems) {\r\n      this.menuItems = this.modifyMenuItems(this.options?.items ?? {});\r\n    }\r\n    else {\r\n      this.menuItems = MENU_ITEMS_DEFAULT;\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Override the attributes of the context menu items\r\n     */\r\n  modifyMenuItems() {\r\n    if (!this.options?.modifyItems) return MENU_ITEMS_DEFAULT;\r\n    const newOptionsItems = { ...MENU_ITEMS_DEFAULT };\r\n    for (const [item, itemNewOptions] of Object.entries(this.options?.items)) {\r\n      newOptionsItems[item] = Object.assign({ ...newOptionsItems[item] }, itemNewOptions);\r\n    }\r\n    return newOptionsItems;\r\n  }\r\n\r\n  setMenuPosition({ left, top }) {\r\n    const containerRect = this.quill.container.getBoundingClientRect();\r\n    const menuRect = this.domNode.getBoundingClientRect();\r\n    let resLeft = left - containerRect.left;\r\n    let resTop = top - containerRect.top;\r\n    if (resLeft + menuRect.width > containerRect.width) {\r\n      resLeft = containerRect.width - menuRect.width;\r\n    }\r\n    if (resTop + menuRect.height > containerRect.height) {\r\n      resTop = containerRect.height - menuRect.height;\r\n    }\r\n    Object.assign(this.domNode.style, {\r\n      left: `${resLeft}px`,\r\n      top: `${resTop}px`,\r\n    });\r\n  }\r\n\r\n  menuInitial({ _table, _row, _cell, left, top }) {\r\n    this.domNode = document.createElement('div');\r\n    this.domNode.classList.add('ql-table-operation-menu');\r\n\r\n    css(this.domNode, {\r\n      'position': 'absolute',\r\n      'min-height': `${MENU_MIN_HEIHGT}px`,\r\n    });\r\n\r\n    for (const [name, item] of Object.entries(this.menuItems)) {\r\n      if (item.subTitle) {\r\n        this.domNode.appendChild(subTitleCreator(item.subTitle));\r\n      }\r\n\r\n      this.domNode.appendChild(this.menuItemCreator(Object.assign({}, MENU_ITEMS_DEFAULT[name], item)));\r\n\r\n      if (item.groupEnd) {\r\n        this.domNode.appendChild(dividingCreator());\r\n      }\r\n    }\r\n\r\n    this.quill.container.appendChild(this.domNode);\r\n    this.setMenuPosition({ left, top });\r\n    // create dividing line\r\n    function dividingCreator() {\r\n      const dividing = document.createElement('div');\r\n      dividing.classList.add('ql-table-operation-menu-dividing');\r\n      return dividing;\r\n    }\r\n\r\n    // create subtitle for menu\r\n    function subTitleCreator(title) {\r\n      const subTitle = document.createElement('div');\r\n      subTitle.classList.add('ql-table-operation-menu-subtitle');\r\n      subTitle.textContent = title;\r\n      return subTitle;\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    this.domNode.remove();\r\n    document.removeEventListener('click', this.destroyHandler, false);\r\n    return null;\r\n  }\r\n\r\n  menuItemCreator({ text, iconSrc, handler, isColorChoose }) {\r\n    const node = document.createElement(isColorChoose ? 'label' : 'div');\r\n    node.classList.add('ql-table-operation-menu-item');\r\n\r\n    if (iconSrc) {\r\n      const iconSpan = document.createElement('span');\r\n      iconSpan.classList.add('ql-table-operation-menu-icon');\r\n      iconSpan.innerHTML = iconSrc;\r\n      node.appendChild(iconSpan);\r\n    }\r\n\r\n    if (isString(text)) {\r\n      const textSpan = document.createElement('span');\r\n      textSpan.classList.add('ql-table-operation-menu-text');\r\n      textSpan.textContent = text;\r\n      node.appendChild(textSpan);\r\n    }\r\n    else if (isFunction(text)) {\r\n      let nodes = text.call(this);\r\n      if (!isArray(nodes)) {\r\n        nodes = [nodes];\r\n      }\r\n      nodes.map(sub => node.appendChild(sub));\r\n    }\r\n\r\n    // color choose handler will trigger when the color input event\r\n    if (isColorChoose) {\r\n      const input = document.createElement('input');\r\n      input.type = 'color';\r\n      Object.assign(input.style, {\r\n        width: 0,\r\n        height: 0,\r\n        padding: 0,\r\n        border: 0,\r\n      });\r\n      if (isFunction(handler)) {\r\n        node.addEventListener('click', e => e.stopPropagation());\r\n        input.addEventListener(\r\n          'input',\r\n          () => {\r\n            handler.call(this, input.value);\r\n          },\r\n          false,\r\n        );\r\n      }\r\n      node.appendChild(input);\r\n    }\r\n    else {\r\n      isFunction(handler) && node.addEventListener('click', handler.bind(this), false);\r\n    }\r\n    return node;\r\n  }\r\n}\r\n","import Quill from 'quill';\r\nimport { blotName } from '../assets/const';\r\n\r\nconst Container = Quill.import('blots/container');\r\nconst Parchment = Quill.import('parchment');\r\n\r\nclass ContainerFormat extends Container {\r\n  static create() {\r\n    const node = super.create();\r\n    return node;\r\n  }\r\n\r\n  insertBefore(blot, ref) {\r\n    if (blot.statics.blotName === this.statics.blotName) {\r\n      super.insertBefore(blot.children.head, ref);\r\n    }\r\n    else {\r\n      super.insertBefore(blot, ref);\r\n    }\r\n  }\r\n\r\n  format(name, value) {\r\n    this.children.tail.format(name, value);\r\n  }\r\n\r\n  replace(target) {\r\n    if (target.statics.blotName !== this.statics.blotName) {\r\n      const item = Parchment.create(this.statics.defaultChild);\r\n      target.moveChildren(item);\r\n      this.appendChild(item);\r\n    }\r\n    if (target.parent == null) return;\r\n    super.replace(target);\r\n  }\r\n}\r\n\r\nContainerFormat.blotName = blotName.contain;\r\nContainerFormat.tagName = 'contain';\r\nContainerFormat.scope = Parchment.Scope.BLOCK_BLOT;\r\nContainerFormat.defaultChild = 'block';\r\n\r\nexport { ContainerFormat };\r\n","import Quill from 'quill';\r\nimport { blotName } from '../assets/const';\r\nimport { findParentBlot } from '../utils';\r\nimport { ContainerFormat } from './ContainerFormat';\r\n\r\nconst Parchment = Quill.import('parchment');\r\n\r\nclass TableCellInnerFormat extends ContainerFormat {\r\n  static create(value) {\r\n    const { tableId, rowId, colId, rowspan, colspan, style } = value;\r\n    const node = super.create();\r\n    node.dataset.tableId = tableId;\r\n    node.dataset.rowId = rowId;\r\n    node.dataset.colId = colId;\r\n    node.dataset.rowspan = rowspan || 1;\r\n    node.dataset.colspan = colspan || 1;\r\n    node._style = style;\r\n    return node;\r\n  }\r\n\r\n  // 仅 Block 存在 cache, 存在 cache 时不会获取最新 delta, cache 还会保存父级 format(bubbleFormats 函数), 需要清除以获取最新 delta\r\n  clearDeltaCache() {\r\n    // eslint-disable-next-line unicorn/no-array-for-each\r\n    this.children.forEach((child) => {\r\n      child.cache = {};\r\n    });\r\n  }\r\n\r\n  get rowId() {\r\n    return this.domNode.dataset.rowId;\r\n  }\r\n\r\n  set rowId(value) {\r\n    this.parent && (this.parent.rowId = value);\r\n    this.domNode.dataset.rowId = value;\r\n  }\r\n\r\n  get colId() {\r\n    return this.domNode.dataset.colId;\r\n  }\r\n\r\n  set colId(value) {\r\n    this.parent && (this.parent.colId = value);\r\n    this.domNode.dataset.colId = value;\r\n  }\r\n\r\n  get rowspan() {\r\n    return Number(this.domNode.dataset.rowspan);\r\n  }\r\n\r\n  set rowspan(value) {\r\n    this.parent && (this.parent.rowspan = value);\r\n    this.domNode.dataset.rowspan = value;\r\n    this.clearDeltaCache();\r\n  }\r\n\r\n  get colspan() {\r\n    return Number(this.domNode.dataset.colspan);\r\n  }\r\n\r\n  set colspan(value) {\r\n    this.parent && (this.parent.colspan = value);\r\n    this.domNode.dataset.colspan = value;\r\n    this.clearDeltaCache();\r\n  }\r\n\r\n  get style() {\r\n    return this.parent.style;\r\n  }\r\n\r\n  set style(value) {\r\n    this.parent.style = value;\r\n    this.domNode._style = this.parent.style;\r\n    this.clearDeltaCache();\r\n  }\r\n\r\n  getColumnIndex() {\r\n    const table = findParentBlot(this, blotName.table);\r\n    return table.getColIds().indexOf(this.colId);\r\n  }\r\n\r\n  replace(target) {\r\n    if (target.statics.blotName !== this.statics.blotName) {\r\n      const cloneTarget = target.clone();\r\n      target.moveChildren(cloneTarget);\r\n      this.appendChild(cloneTarget);\r\n      target.parent.insertBefore(this, target.next);\r\n      target.remove();\r\n    }\r\n    else {\r\n      super.replace(target);\r\n    }\r\n  }\r\n\r\n  format(name, value) {\r\n    super.format(name, value);\r\n    this.clearDeltaCache();\r\n  }\r\n\r\n  formats() {\r\n    const { tableId, rowId, colId, rowspan, colspan } = this.domNode.dataset;\r\n    return {\r\n      [this.statics.blotName]: {\r\n        tableId,\r\n        rowId,\r\n        colId,\r\n        rowspan,\r\n        colspan,\r\n        style: this.domNode._style,\r\n      },\r\n    };\r\n  }\r\n\r\n  optimize() {\r\n    super.optimize();\r\n\r\n    const parent = this.parent;\r\n    // 父级非表格，则将当前 blot 放入表格中\r\n    const { tableId, colId, rowId, rowspan, colspan } = this.domNode.dataset;\r\n    if (parent != null && parent.statics.blotName !== blotName.tableCell) {\r\n      const mark = Parchment.create('block');\r\n\r\n      this.parent.insertBefore(mark, this.next);\r\n      const tableWrapper = Parchment.create(blotName.tableWrapper, tableId);\r\n      const table = Parchment.create(blotName.table, tableId);\r\n      const tableBody = Parchment.create(blotName.tableBody);\r\n      const tr = Parchment.create(blotName.tableRow, rowId);\r\n      const td = Parchment.create(blotName.tableCell, {\r\n        tableId,\r\n        rowId,\r\n        colId,\r\n        rowspan,\r\n        colspan,\r\n        style: this.domNode._style,\r\n      });\r\n\r\n      td.appendChild(this);\r\n      tr.appendChild(td);\r\n      tableBody.appendChild(tr);\r\n      table.appendChild(tableBody);\r\n      tableWrapper.appendChild(table);\r\n\r\n      tableWrapper.replace(mark);\r\n    }\r\n\r\n    const next = this.next;\r\n    // cell 下有多个 cellInner 全部合并\r\n    if (next != null && next.prev === this && next.statics.blotName === this.statics.blotName) {\r\n      next.moveChildren(this);\r\n      next.remove();\r\n    }\r\n  }\r\n}\r\n\r\nTableCellInnerFormat.blotName = blotName.tableCellInner;\r\nTableCellInnerFormat.tagName = 'p';\r\nTableCellInnerFormat.className = 'ql-table-cell-inner';\r\n\r\nexport { TableCellInnerFormat };\r\n","import Quill from 'quill';\r\nimport { blotName } from '../assets/const';\r\nimport { findParentBlot } from '../utils';\r\nimport { TableCellInnerFormat } from './TableCellInnerFormat';\r\n\r\nconst Container = Quill.import('blots/container');\r\nconst Parchment = Quill.import('parchment');\r\n\r\nclass TableRowFormat extends Container {\r\n  static create(value) {\r\n    const node = super.create();\r\n    node.dataset.rowId = value;\r\n    return node;\r\n  }\r\n\r\n  optimize() {\r\n    super.optimize();\r\n    const next = this.next;\r\n    if (\r\n      next != null\r\n      && next.prev === this\r\n      && next.statics.blotName === this.statics.blotName\r\n      && next.domNode.dataset.rowId === this.domNode.dataset.rowId\r\n    ) {\r\n      next.moveChildren(this);\r\n      next.remove();\r\n    }\r\n  }\r\n\r\n  get rowId() {\r\n    return this.domNode.dataset.rowId;\r\n  }\r\n\r\n  // insert cell at index\r\n  // return the minus skip column number\r\n  // [2, 3]. means next line should skip 2 columns. next next line skip 3 columns\r\n  insertCell(targetIndex, value) {\r\n    const skip = [];\r\n    const next = this.children.iterator();\r\n    let index = 0;\r\n    let cur;\r\n    while ((cur = next())) {\r\n      index += cur.colspan;\r\n      if (index > targetIndex) break;\r\n      if (cur.rowspan !== 1) {\r\n        for (let i = 0; i < cur.rowspan - 1; i++) {\r\n          skip[i] = (skip[i] || 0) + cur.colspan;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (cur && index - cur.colspan < targetIndex) {\r\n      const tableCell = cur.getCellInner();\r\n      tableCell.colspan += 1;\r\n      if (cur.rowspan !== 1) {\r\n        skip.skipRowNum = cur.rowspan - 1;\r\n      }\r\n    }\r\n    else {\r\n      const tableCell = Parchment.create(blotName.tableCell, value);\r\n      const tableCellInner = Parchment.create(blotName.tableCellInner, value);\r\n      const block = Parchment.create('block');\r\n      block.appendChild(Parchment.create('break'));\r\n      tableCellInner.appendChild(block);\r\n      tableCell.appendChild(tableCellInner);\r\n      this.insertBefore(tableCell, cur);\r\n    }\r\n    return skip;\r\n  }\r\n\r\n  getCellByColumIndex(stopIndex) {\r\n    const skip = [];\r\n    let cur;\r\n    let cellEndIndex = 0;\r\n    if (stopIndex < 0) return [cur, cellEndIndex, skip];\r\n    const next = this.children.iterator();\r\n    while ((cur = next())) {\r\n      cellEndIndex += cur.colspan;\r\n      if (cur.rowspan !== 1) {\r\n        for (let i = 0; i < cur.rowspan - 1; i++) {\r\n          skip[i] = (skip[i] || 0) + cur.colspan;\r\n        }\r\n      }\r\n      if (cellEndIndex > stopIndex) break;\r\n    }\r\n    return [cur, cellEndIndex, skip];\r\n  }\r\n\r\n  removeCell(targetIndex) {\r\n    if (targetIndex < 0) return [];\r\n    const [cur, index, skip] = this.getCellByColumIndex(targetIndex);\r\n    if (!cur) return skip;\r\n    if (index - cur.colspan < targetIndex || cur.colspan > 1) {\r\n      const [tableCell] = cur.descendants(TableCellInnerFormat);\r\n\r\n      if (cur.colspan !== 1 && targetIndex === index - cur.colspan) {\r\n        // if delete index is cell start index. update cell colId to next colId\r\n        const tableBlot = findParentBlot(this, blotName.table);\r\n        const colIds = tableBlot.getColIds();\r\n        tableCell.colId = colIds[colIds.indexOf(tableCell.colId) + 1];\r\n      }\r\n      if (cur.rowspan !== 1) {\r\n        skip.skipRowNum = cur.rowspan - 1;\r\n      }\r\n\r\n      tableCell.colspan -= 1;\r\n    }\r\n    else {\r\n      cur.remove();\r\n    }\r\n    return skip;\r\n  }\r\n\r\n  foreachCellInner(func) {\r\n    const next = this.children.iterator();\r\n    let i = 0;\r\n    let cur;\r\n    while ((cur = next())) {\r\n      const [tableCell] = cur.descendants(TableCellInnerFormat);\r\n      if (func(tableCell, i++)) break;\r\n    }\r\n  }\r\n}\r\n\r\nTableRowFormat.blotName = blotName.tableRow;\r\nTableRowFormat.tagName = 'tr';\r\nTableRowFormat.className = 'ql-table-row';\r\nTableRowFormat.scope = Parchment.Scope.BLOCK_BLOT;\r\n\r\nexport { TableRowFormat };\r\n","import Quill from 'quill';\r\nimport { blotName } from '../assets/const';\r\nimport { findParentBlot, randomId } from '../utils';\r\nimport { TableRowFormat } from './TableRowFormat';\r\n\r\nconst Container = Quill.import('blots/container');\r\nconst Parchment = Quill.import('parchment');\r\n\r\nclass TableBodyFormat extends Container {\r\n  optimize() {\r\n    super.optimize();\r\n    const next = this.next;\r\n    if (\r\n      next != null\r\n      && next.prev === this\r\n      && next.statics.blotName === this.statics.blotName\r\n      && next.domNode.tagName === this.domNode.tagName\r\n    ) {\r\n      next.moveChildren(this);\r\n      next.remove();\r\n    }\r\n  }\r\n\r\n  deleteAt(index, length) {\r\n    if (index === 0 && length === this.length()) {\r\n      return this.parent.remove();\r\n    }\r\n    this.children.forEachAt(index, length, (child, offset, length) => {\r\n      child.deleteAt(offset, length);\r\n    });\r\n  }\r\n\r\n  // insert row at index\r\n  insertRow(targetIndex) {\r\n    const tableBlot = findParentBlot(this, blotName.table);\r\n    if (!tableBlot) return;\r\n    // get all column id. exclude the columns of the target index row with rowspan\r\n    const colIds = tableBlot.getColIds();\r\n    const rows = this.descendants(TableRowFormat);\r\n    const insertColIds = new Set(colIds);\r\n    let index = 0;\r\n    for (const row of rows) {\r\n      if (index === targetIndex) break;\r\n      row.foreachCellInner((cell) => {\r\n        if (index + cell.rowspan > targetIndex) {\r\n          cell.rowspan += 1;\r\n          insertColIds.delete(cell.colId);\r\n          // colspan cell need remove all includes colId\r\n          if (cell.colspan !== 1) {\r\n            const colIndex = colIds.indexOf(cell.colId);\r\n            for (let i = 0; i < cell.colspan - 1; i++) {\r\n              insertColIds.delete(colIds[colIndex + i + 1]);\r\n            }\r\n          }\r\n        }\r\n      });\r\n      index += 1;\r\n    }\r\n    // append new row\r\n    const rowId = randomId();\r\n    const tr = Parchment.create(blotName.tableRow, rowId);\r\n    for (const colId of insertColIds) {\r\n      const td = Parchment.create(blotName.tableCell, {\r\n        rowId,\r\n        colId,\r\n        rowspan: 1,\r\n        colspan: 1,\r\n      });\r\n      const tdInner = Parchment.create(blotName.tableCellInner, {\r\n        tableId: tableBlot.tableId,\r\n        rowId,\r\n        colId,\r\n        rowspan: 1,\r\n        colspan: 1,\r\n      });\r\n      const block = Parchment.create('block');\r\n      block.appendChild(Parchment.create('break'));\r\n      tdInner.appendChild(block);\r\n      td.appendChild(tdInner);\r\n      tr.appendChild(td);\r\n    }\r\n    this.insertBefore(tr, rows[targetIndex] || null);\r\n  }\r\n}\r\nTableBodyFormat.blotName = blotName.tableBody;\r\nTableBodyFormat.tagName = 'tbody';\r\nTableBodyFormat.scope = Parchment.Scope.BLOCK_BLOT;\r\n\r\nexport { TableBodyFormat };\r\n","import Quill from 'quill';\r\nimport { blotName } from '../assets/const';\r\nimport { findParentBlot } from '../utils';\r\nimport { TableCellInnerFormat } from './TableCellInnerFormat';\r\n\r\nconst Parchment = Quill.import('parchment');\r\nconst Container = Quill.import('blots/container');\r\n\r\nclass TableCellFormat extends Container {\r\n  static create(value) {\r\n    const { rowId, colId, rowspan, colspan, style } = value;\r\n    const node = super.create();\r\n    node.dataset.rowId = rowId;\r\n    node.dataset.colId = colId;\r\n    node.setAttribute('rowspan', rowspan || 1);\r\n    node.setAttribute('colspan', colspan || 1);\r\n    node.style.cssText = style;\r\n    return node;\r\n  }\r\n\r\n  get rowId() {\r\n    return this.domNode.dataset.rowId;\r\n  }\r\n\r\n  set rowId(value) {\r\n    this.domNode.dataset.rowId = value;\r\n  }\r\n\r\n  get colId() {\r\n    return this.domNode.dataset.colId;\r\n  }\r\n\r\n  set colId(value) {\r\n    this.domNode.dataset.colId = value;\r\n  }\r\n\r\n  get rowspan() {\r\n    return Number(this.domNode.getAttribute('rowspan'));\r\n  }\r\n\r\n  set rowspan(value) {\r\n    this.domNode.setAttribute('rowspan', value);\r\n  }\r\n\r\n  get colspan() {\r\n    return Number(this.domNode.getAttribute('colspan'));\r\n  }\r\n\r\n  set colspan(value) {\r\n    this.domNode.setAttribute('colspan', value);\r\n  }\r\n\r\n  get style() {\r\n    return this.domNode.style.cssText;\r\n  }\r\n\r\n  set style(value) {\r\n    Object.assign(this.domNode.style, value);\r\n  }\r\n\r\n  getCellInner() {\r\n    return this.descendants(TableCellInnerFormat)[0];\r\n  }\r\n\r\n  optimize() {\r\n    super.optimize();\r\n    const { colId, rowId, colspan, rowspan } = this.domNode.dataset;\r\n\r\n    // td need only child tableCellInner. but for MutationObserver. tableCell need allow break\r\n    // make sure tableCellInner is only child\r\n    const tableBlot = findParentBlot(this, blotName.table);\r\n    const cellInner = this.getCellInner();\r\n    if (!cellInner) {\r\n      // eslint-disable-next-line unicorn/no-array-for-each\r\n      this.children.forEach((child) => {\r\n        child.remove();\r\n      });\r\n      const tableCellInner = Parchment.create(blotName.tableCellInner, {\r\n        tableId: tableBlot.tableId,\r\n        rowId,\r\n        colId,\r\n        colspan: colspan || 1,\r\n        rowspan: rowspan || 1,\r\n      });\r\n      const block = Parchment.create('block');\r\n      block.appendChild(Parchment.create('break'));\r\n      tableCellInner.appendChild(block);\r\n      this.appendChild(tableCellInner);\r\n    }\r\n\r\n    const next = this.next;\r\n    if (\r\n      next != null\r\n      && next.prev === this\r\n      && next.statics.blotName === this.statics.blotName\r\n      && next.domNode.dataset.rowId === rowId\r\n      && next.domNode.dataset.colId === colId\r\n    ) {\r\n      next.moveChildren(this);\r\n      next.remove();\r\n    }\r\n  }\r\n\r\n  deleteAt(index, length) {\r\n    if (index === 0 && length === this.length()) {\r\n      const cell = this.next || this.prev;\r\n      const cellInner = cell && cell.getCellInner();\r\n      if (cellInner) {\r\n        cellInner.colspan += this.colspan;\r\n      }\r\n      return this.remove();\r\n    }\r\n    this.children.forEachAt(index, length, (child, offset, length) => {\r\n      child.deleteAt(offset, length);\r\n    });\r\n  }\r\n}\r\n\r\nTableCellFormat.blotName = blotName.tableCell;\r\nTableCellFormat.tagName = 'td';\r\nTableCellFormat.className = 'ql-table-cell';\r\nTableCellFormat.scope = Parchment.Scope.BLOCK_BLOT;\r\n\r\nexport { TableCellFormat };\r\n","import Quill from 'quill';\r\nimport { blotName } from '../assets/const';\r\nimport { ContainerFormat } from './ContainerFormat';\r\n\r\nconst Parchment = Quill.import('parchment');\r\n\r\nclass TableColFormat extends ContainerFormat {\r\n  static create(value) {\r\n    const { width, tableId, colId, full } = value;\r\n    const node = super.create();\r\n    node.setAttribute('width', `${Number.parseFloat(width)}${full ? '%' : 'px'}`);\r\n    full && (node.dataset.full = full);\r\n    node.dataset.tableId = tableId;\r\n    node.dataset.colId = colId;\r\n    node.setAttribute('contenteditable', false);\r\n    return node;\r\n  }\r\n\r\n  get width() {\r\n    const width = this.domNode.getAttribute('width');\r\n    return Number.parseFloat(width);\r\n  }\r\n\r\n  set width(value) {\r\n    const width = Number.parseFloat(value);\r\n    return this.domNode.setAttribute('width', `${width}${this.full ? '%' : 'px'}`);\r\n  }\r\n\r\n  get colId() {\r\n    return this.domNode.dataset.colId;\r\n  }\r\n\r\n  get full() {\r\n    return Object.hasOwn(this.domNode.dataset, 'full');\r\n  }\r\n\r\n  formats() {\r\n    const { tableId, colId } = this.domNode.dataset;\r\n    return {\r\n      [this.statics.blotName]: {\r\n        tableId,\r\n        colId,\r\n        width: this.domNode.getAttribute('width'),\r\n        full: Object.hasOwn(this.domNode.dataset, 'full'),\r\n      },\r\n    };\r\n  }\r\n\r\n  optimize() {\r\n    super.optimize();\r\n\r\n    const parent = this.parent;\r\n    if (parent != null && parent.statics.blotName !== blotName.tableColGroup) {\r\n      const mark = Parchment.create('block');\r\n      this.parent.insertBefore(mark, this.next);\r\n\r\n      const tableWrapper = Parchment.create(blotName.tableWrapper, this.domNode.dataset.tableId);\r\n      const table = Parchment.create(blotName.table, this.domNode.dataset.tableId);\r\n\r\n      this.full && (table.full = true);\r\n\r\n      const tableColgroup = Parchment.create(blotName.tableColGroup);\r\n\r\n      tableColgroup.appendChild(this);\r\n      table.appendChild(tableColgroup);\r\n      tableWrapper.appendChild(table);\r\n\r\n      tableWrapper.replace(mark);\r\n    }\r\n    const next = this.next;\r\n    const { tableId: ttableId, colId: tcolId } = this.domNode.dataset;\r\n    if (\r\n      next != null\r\n      && next.statics.blotName === this.statics.blotName\r\n      && next.domNode.tagName === this.domNode.tagName\r\n      && next.domNode.dataset.tableId === ttableId\r\n      && next.domNode.dataset.colId === tcolId\r\n    ) {\r\n      next.moveChildren(this);\r\n      next.remove();\r\n    }\r\n  }\r\n}\r\nTableColFormat.blotName = blotName.tableCol;\r\nTableColFormat.tagName = 'col';\r\nTableColFormat.scope = Parchment.Scope.BLOCK_BLOT;\r\n\r\nexport { TableColFormat };\r\n","import Quill from 'quill';\r\nimport { blotName } from '../assets/const';\r\nimport { TableRowFormat } from './TableRowFormat';\r\nimport { TableColFormat } from './TableColFormat';\r\n\r\nconst Container = Quill.import('blots/container');\r\nconst Parchment = Quill.import('parchment');\r\n\r\nclass TableFormat extends Container {\r\n  constructor(domNode, value) {\r\n    super(domNode, value);\r\n\r\n    this.formatTableWidth();\r\n  }\r\n\r\n  static create(value) {\r\n    const node = super.create();\r\n\r\n    node.dataset.tableId = value;\r\n    node.classList.add('ql-table');\r\n    node.setAttribute('cellpadding', 0);\r\n    node.setAttribute('cellspacing', 0);\r\n\r\n    return node;\r\n  }\r\n\r\n  colWidthFillTable() {\r\n    if (this.full) return;\r\n    const cols = this.descendants(TableColFormat);\r\n    if (!cols) return;\r\n    const colsWidth = cols.reduce((sum, col) => col.width + sum, 0);\r\n    if (colsWidth === 0 || Number.isNaN(colsWidth) || this.full) return null;\r\n    this.domNode.style.width = `${colsWidth}px`;\r\n    return colsWidth;\r\n  }\r\n\r\n  formatTableWidth() {\r\n    setTimeout(() => {\r\n      this.colWidthFillTable();\r\n    }, 0);\r\n  }\r\n\r\n  get tableId() {\r\n    return this.domNode.dataset.tableId;\r\n  }\r\n\r\n  get full() {\r\n    return Object.hasOwn(this.domNode.dataset, 'full');\r\n  }\r\n\r\n  set full(value) {\r\n    this.domNode[value ? 'setAttribute' : 'removeAttribute']('data-full', '');\r\n  }\r\n\r\n  getRows() {\r\n    return this.descendants(TableRowFormat);\r\n  }\r\n\r\n  getRowIds() {\r\n    return this.getRows().map(d => d.rowId);\r\n  }\r\n\r\n  getCols() {\r\n    return this.descendants(TableColFormat);\r\n  }\r\n\r\n  getColIds() {\r\n    return this.getCols().map(d => d.colId);\r\n  }\r\n\r\n  optimize() {\r\n    super.optimize();\r\n    const next = this.next;\r\n    if (\r\n      next != null\r\n      && next.prev === this\r\n      && next.statics.blotName === this.statics.blotName\r\n      && next.domNode.tagName === this.domNode.tagName\r\n      && next.domNode.dataset.tableId === this.domNode.dataset.tableId\r\n    ) {\r\n      next.moveChildren(this);\r\n      next.remove();\r\n    }\r\n  }\r\n}\r\n\r\nTableFormat.blotName = blotName.table;\r\nTableFormat.tagName = 'table';\r\nTableFormat.scope = Parchment.Scope.BLOCK_BLOT;\r\n\r\nexport { TableFormat };\r\n","import Quill from 'quill';\r\nimport { CELL_MIN_PRE, blotName } from '../assets/const';\r\nimport { TableFormat } from './TableFormat';\r\n\r\nconst Container = Quill.import('blots/container');\r\nconst Parchment = Quill.import('parchment');\r\n\r\nclass TableColgroupFormat extends Container {\r\n  optimize() {\r\n    super.optimize();\r\n    const next = this.next;\r\n    if (\r\n      next != null\r\n      && next.prev === this\r\n      && next.statics.blotName === this.statics.blotName\r\n      && next.domNode.tagName === this.domNode.tagName\r\n    ) {\r\n      next.moveChildren(this);\r\n      next.remove();\r\n    }\r\n  }\r\n\r\n  deleteAt(index, length) {\r\n    if (index === 0 && length === this.length()) {\r\n      return this.parent.remove();\r\n    }\r\n    this.children.forEachAt(index, length, (child, offset, length) => {\r\n      child.deleteAt(offset, length);\r\n    });\r\n  }\r\n\r\n  findCol(index) {\r\n    const next = this.children.iterator();\r\n    let i = 0;\r\n    let cur;\r\n    while ((cur = next())) {\r\n      if (i === index) {\r\n        break;\r\n      }\r\n      i++;\r\n    }\r\n    return cur;\r\n  }\r\n\r\n  insertColByIndex(index, value) {\r\n    const table = this.parent;\r\n    if (!(table instanceof TableFormat)) {\r\n      throw new TypeError('TableColgroupFormat should be child of TableFormat');\r\n    }\r\n    const col = this.findCol(index);\r\n    const tableCellInner = Parchment.create(blotName.tableCol, value);\r\n    if (table.full) {\r\n    // TODO: first minus column should be near by\r\n      const next = this.children.iterator();\r\n      let cur;\r\n      while ((cur = next())) {\r\n        if (cur.width - tableCellInner.width >= CELL_MIN_PRE) {\r\n          cur.width -= tableCellInner.width;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    this.insertBefore(tableCellInner, col);\r\n  }\r\n\r\n  removeColByIndex(index) {\r\n    const table = this.parent;\r\n    if (!(table instanceof TableFormat)) {\r\n      throw new TypeError('TableColgroupFormat should be child of TableFormat');\r\n    }\r\n    const col = this.findCol(index);\r\n    if (col.next) {\r\n      col.next.width += col.width;\r\n    }\r\n    else if (col.prev) {\r\n      col.prev.width += col.width;\r\n    }\r\n    col.remove();\r\n  }\r\n}\r\nTableColgroupFormat.blotName = blotName.tableColGroup;\r\nTableColgroupFormat.tagName = 'colgroup';\r\nTableColgroupFormat.scope = Parchment.Scope.BLOCK_BLOT;\r\n\r\nexport { TableColgroupFormat };\r\n","// col 最小百分比宽度\r\nexport const CELL_MIN_PRE = 3;\r\n// col 最小 px 宽度\r\nexport const CELL_MIN_WIDTH = 26;\r\n","import Quill from 'quill';\r\nimport { blotName } from '../assets/const';\r\n\r\nconst Container = Quill.import('blots/container');\r\nconst Parchment = Quill.import('parchment');\r\n\r\nclass TableWrapperFormat extends Container {\r\n  static create(value) {\r\n    const node = super.create();\r\n\r\n    node.dataset.tableId = value;\r\n\r\n    node.addEventListener(\r\n      'dragstart',\r\n      (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n      },\r\n      true,\r\n    );\r\n    // 不允许拖拽进 table\r\n    node.addEventListener('drop', (e) => {\r\n      e.preventDefault();\r\n    });\r\n    // 修改拖拽进入时的鼠标样式\r\n    node.addEventListener('dragover', (e) => {\r\n      e.preventDefault();\r\n      e.dataTransfer.dropEffect = 'none';\r\n    });\r\n    return node;\r\n  }\r\n\r\n  get tableId() {\r\n    return this.domNode.dataset.tableId;\r\n  }\r\n\r\n  insertBefore(blot, ref) {\r\n    if (blot.statics.blotName === this.statics.blotName) {\r\n      // 合并\r\n      super.insertBefore(blot.children.head, ref);\r\n    }\r\n    else if (this.statics.allowedChildren.some(child => child.blotName === blot.statics.blotName)) {\r\n      // 允许子 blot\r\n      super.insertBefore(blot, ref);\r\n    }\r\n    else {\r\n      // 非允许子 blot, ref 为 null 是插入头, 否则插入尾\r\n      if (ref) {\r\n        this.prev ? this.prev.insertBefore(blot, null) : this.parent.insertBefore(blot, this);\r\n      }\r\n      else {\r\n        this.next ? this.next.insertBefore(blot, ref) : this.parent.appendChild(blot);\r\n      }\r\n    }\r\n  }\r\n\r\n  optimize() {\r\n    super.optimize();\r\n    const next = this.next;\r\n    if (\r\n      next != null\r\n      && next.prev === this\r\n      && next.statics.blotName === this.statics.blotName\r\n      && next.domNode.tagName === this.domNode.tagName\r\n      && next.domNode.dataset.tableId === this.domNode.dataset.tableId\r\n    ) {\r\n      next.moveChildren(this);\r\n      next.remove();\r\n    }\r\n  }\r\n\r\n  deleteAt(index, length) {\r\n    super.deleteAt(index, length);\r\n    // 删除 table 时隐藏当前 table 的 tooltip\r\n    document.querySelector(`.ql-table-tooltip[data-table-id=\"${this.tableId}\"]`)?.classList?.add('ql-hidden');\r\n  }\r\n}\r\nTableWrapperFormat.blotName = blotName.tableWrapper;\r\nTableWrapperFormat.tagName = 'p';\r\nTableWrapperFormat.className = 'ql-table-wrapper';\r\nTableWrapperFormat.scope = Parchment.Scope.BLOCK_BLOT;\r\n\r\nexport { TableWrapperFormat };\r\n","import Quill from 'quill';\r\nimport { blotName } from '../../assets/const';\r\n\r\nconst Parchment = Quill.import('parchment');\r\nconst ListItem = Quill.import('formats/list/item');\r\n\r\nclass ListItemRewrite extends ListItem {\r\n  replaceWith(name, value) {\r\n    this.parent.isolate(this.offset(this.parent), this.length());\r\n    if (name === this.parent.statics.blotName) {\r\n      this.parent.replaceWith(name, value);\r\n      return this;\r\n    }\r\n    else {\r\n      if (name === blotName.tableCellInner) {\r\n        const replacement = typeof name === 'string' ? Parchment.create(name, value) : name;\r\n        replacement.replace(this.parent);\r\n        this.attributes.copy(replacement);\r\n        return replacement;\r\n      }\r\n      return super.replaceWith(name, value);\r\n    }\r\n  }\r\n}\r\nexport { ListItemRewrite };\r\n","// 以 ql-better-table 的 table-selection.js 为修改基础\r\n\r\nimport Quill from 'quill';\r\nimport { TableCellFormat } from '../format';\r\nimport { css, getRelativeRect, isRectanglesIntersect } from '../utils';\r\n\r\nlet PRIMARY_COLOR = '#0589f3';\r\nconst ERROR_LIMIT = 2;\r\n\r\n/*\r\n  options = {\r\n    primaryColor: Hex color code\r\n  }\r\n*/\r\nexport class TableSelection {\r\n  constructor(table, quill, options = {}) {\r\n    this.table = table;\r\n    this.quill = quill;\r\n    this.options = options;\r\n    this.optionsMerge();\r\n    if (!table) return null;\r\n\r\n    this.startScrollX = 0;\r\n    this.boundary = {};\r\n    // 选中的 cell\r\n    this.selectedTds = [];\r\n    this.dragging = false;\r\n    this.selectingHandler = this.mouseDownHandler.bind(this);\r\n    this.cellSelect = null; // selection 显示边框\r\n    this.scrollHandler = [];\r\n    this.helpLinesInitial();\r\n\r\n    const resizeObserver = new ResizeObserver(() => {\r\n      this.hideSelection();\r\n    });\r\n    resizeObserver.observe(this.quill.root);\r\n\r\n    this.quill.root.addEventListener('mousedown', this.selectingHandler, false);\r\n    this.closeHandler = this.hideSelection.bind(this);\r\n    this.quill.on(Quill.events.TEXT_CHANGE, this.closeHandler);\r\n  }\r\n\r\n  optionsMerge() {\r\n    this.options?.primaryColor && (PRIMARY_COLOR = this.options.primaryColor);\r\n  }\r\n\r\n  addScrollEvent(dom, handle) {\r\n    dom.addEventListener('scroll', handle);\r\n    this.scrollHandler.push([dom, handle]);\r\n  }\r\n\r\n  clearScrollEvent() {\r\n    for (let i = 0; i < this.scrollHandler.length; i++) {\r\n      const [dom, handle] = this.scrollHandler[i];\r\n      dom.removeEventListener('scroll', handle);\r\n    }\r\n    this.scrollHandler = [];\r\n  }\r\n\r\n  // 初始化边框 dom\r\n  helpLinesInitial() {\r\n    this.cellSelect = this.quill.addContainer('ql-table-selection_line');\r\n    css(this.cellSelect, {\r\n      'border-color': PRIMARY_COLOR,\r\n    });\r\n  }\r\n\r\n  // TODO: preventDefault select\r\n  mouseDownHandler(mousedownEvent) {\r\n    const { button, target, clientX, clientY } = mousedownEvent;\r\n    const closestTable = target.closest('.ql-table');\r\n    if (button !== 0 || !closestTable) return;\r\n\r\n    const startTableId = closestTable.dataset.tableId;\r\n    const startPoint = { x: clientX, y: clientY };\r\n    this.startScrollX = this.table.parentNode.scrollLeft;\r\n    this.selectedTds = this.computeSelectedTds(startPoint, startPoint);\r\n    this.showSelection();\r\n\r\n    const mouseMoveHandler = (mousemoveEvent) => {\r\n      const { button, target, clientX, clientY } = mousemoveEvent;\r\n      if (this.selectedTds.length > 1) {\r\n        mousemoveEvent.preventDefault();\r\n      }\r\n      const closestTable = target.closest('.ql-table');\r\n      if (\r\n        button !== 0\r\n        || !closestTable\r\n        || closestTable.dataset.tableId !== startTableId\r\n      ) {\r\n        return;\r\n      }\r\n\r\n      this.dragging = true;\r\n      const movePoint = { x: clientX, y: clientY };\r\n      this.selectedTds = this.computeSelectedTds(startPoint, movePoint);\r\n      if (this.selectedTds.length > 1) {\r\n        this.quill.blur();\r\n      }\r\n      this.updateSelection();\r\n    };\r\n    const mouseUpHandler = () => {\r\n      document.body.removeEventListener('mousemove', mouseMoveHandler, false);\r\n      document.body.removeEventListener('mouseup', mouseUpHandler, false);\r\n      this.dragging = false;\r\n    };\r\n\r\n    document.body.addEventListener('mousemove', mouseMoveHandler, false);\r\n    document.body.addEventListener('mouseup', mouseUpHandler, false);\r\n  }\r\n\r\n  computeSelectedTds(startPoint, endPoint) {\r\n    // Use TableCell to calculation selected range, because TableCellInner is scrollable, the width will effect calculate\r\n    const tableContainer = Quill.find(this.table);\r\n    if (!tableContainer) return [];\r\n    const tableCells = new Set(tableContainer.descendants(TableCellFormat));\r\n\r\n    // set boundary to initially mouse move rectangle\r\n    let boundary = {\r\n      x: Math.min(endPoint.x, startPoint.x),\r\n      y: Math.min(endPoint.y, startPoint.y),\r\n      x1: Math.max(endPoint.x, startPoint.x),\r\n      y1: Math.max(endPoint.y, startPoint.y),\r\n    };\r\n    const selectedCells = new Set();\r\n    let findEnd = true;\r\n    // loop all cells to find correct boundary\r\n    while (findEnd) {\r\n      findEnd = false;\r\n      for (const cell of tableCells) {\r\n        if (!cell.__rect) {\r\n          cell.__rect = cell.domNode.getBoundingClientRect();\r\n        }\r\n        // Determine whether the cell intersects with the current boundary\r\n        const { x, y, right, bottom } = cell.__rect;\r\n        if (isRectanglesIntersect(boundary, { x, y, x1: right, y1: bottom }, ERROR_LIMIT)) {\r\n          // add cell to selected\r\n          selectedCells.add(cell);\r\n          tableCells.delete(cell);\r\n          // update boundary\r\n          boundary = {\r\n            x: Math.min(boundary.x, x),\r\n            y: Math.min(boundary.y, y),\r\n            x1: Math.max(boundary.x1, right),\r\n            y1: Math.max(boundary.y1, bottom),\r\n          };\r\n          // recalculate boundary last cells\r\n          findEnd = true;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    for (const cell of [...selectedCells, ...tableCells]) {\r\n      delete cell.__rect;\r\n    }\r\n    // save result boundary relative to the editor\r\n    this.boundary = getRelativeRect({\r\n      ...boundary,\r\n      width: boundary.x1 - boundary.x,\r\n      height: boundary.y1 - boundary.y,\r\n    }, this.quill.root.parentNode);\r\n    return Array.from(selectedCells).map(cell => cell.getCellInner());\r\n  }\r\n\r\n  updateSelection() {\r\n    if (this.selectedTds.length === 0) return;\r\n    const tableViewScrollLeft = this.table.parentNode.scrollLeft;\r\n    const scrollTop = this.quill.root.parentNode.scrollTop;\r\n\r\n    css(this.cellSelect, {\r\n      left: `${this.boundary.x + (this.startScrollX - tableViewScrollLeft) - 1}px`,\r\n      top: `${scrollTop * 2 + this.boundary.y}px`,\r\n      width: `${this.boundary.width + 1}px`,\r\n      height: `${this.boundary.height + 1}px`,\r\n    });\r\n  }\r\n\r\n  showSelection() {\r\n    this.clearScrollEvent();\r\n\r\n    css(this.cellSelect, { display: 'block' });\r\n    this.updateSelection();\r\n\r\n    this.addScrollEvent(this.table.parentNode, () => {\r\n      this.updateSelection();\r\n    });\r\n    const srcollHide = () => {\r\n      this.hideSelection();\r\n      this.quill.root.removeEventListener('scroll', srcollHide);\r\n    };\r\n    this.addScrollEvent(this.quill.root, srcollHide);\r\n  }\r\n\r\n  hideSelection() {\r\n    this.boundary = {};\r\n    this.selectedTds = [];\r\n\r\n    this.cellSelect && css(this.cellSelect, {\r\n      display: 'none',\r\n    });\r\n    this.clearScrollEvent();\r\n  }\r\n\r\n  destroy() {\r\n    this.hideSelection();\r\n    this.cellSelect.remove();\r\n    this.cellSelect = null;\r\n    this.clearScrollEvent();\r\n\r\n    this.quill.root.removeEventListener('mousedown', this.selectingHandler, false);\r\n    this.quill.off(Quill.events.TEXT_CHANGE, this.closeHandler);\r\n    return null;\r\n  }\r\n}\r\n","/* eslint-disable unused-imports/no-unused-vars */\r\nimport Quill from 'quill';\r\nimport { TableWrapperFormat } from '../format';\r\nimport { css } from '../utils';\r\nimport { CELL_MIN_PRE, CELL_MIN_WIDTH, blotName, toolName } from '../assets/const';\r\n\r\nlet TIP_HEIGHT = 12;\r\n/*\r\n  options = {\r\n    tipHeight: 12,  // tooltip height\r\n    disableToolNames: [],   // 表格内禁用项， toolbar 的 name\r\n  }\r\n*/\r\nexport class TableTooltip {\r\n  constructor(quill, options = {}) {\r\n    this.quill = quill;\r\n    this.options = options;\r\n    this.optionsMerge();\r\n\r\n    this.tableDisableToolHandlers = {};\r\n    this.tableWrapper = null;\r\n    this.table = null;\r\n    this.curTableId = '';\r\n    this.focusTableChange = false;\r\n    this.tableCols = [];\r\n    this.scrollHandler = [];\r\n\r\n    this.root = this.quill.addContainer('ql-table-tooltip');\r\n    this.root.style.height = `${TIP_HEIGHT}px`;\r\n\r\n    const resizeObserver = new ResizeObserver((entries) => {\r\n      this.hide();\r\n      this.focusTableChange = true;\r\n      this.curTableId = '';\r\n    });\r\n    resizeObserver.observe(this.quill.root);\r\n\r\n    this.isMobile = 'ontouchstart' in window;\r\n    this.handledEvents = this.isMobile\r\n      ? { down: 'touchstart', move: 'touchmove', up: 'touchend' }\r\n      : { down: 'mousedown', move: 'mousemove', up: 'mouseup' };\r\n\r\n    this.hide();\r\n    this.listen();\r\n  }\r\n\r\n  optionsMerge() {\r\n    this.options?.tipHeight && (TIP_HEIGHT = this.options.tipHeight);\r\n    TableTooltip.disableToolNames = Array.from(\r\n      new Set([...TableTooltip.disableToolNames, ...(this.options?.disableToolNames || [])]),\r\n    );\r\n  }\r\n\r\n  listen() {\r\n    this.quill.on(Quill.events.EDITOR_CHANGE, (eventName) => {\r\n      if (eventName === Quill.events.TEXT_CHANGE) {\r\n        return this.hide();\r\n      }\r\n      const range = this.quill.getSelection();\r\n\r\n      if (range == null) {\r\n        this.hide();\r\n        this.enableFromTable();\r\n        return;\r\n      }\r\n      const [tableWrapper] = this.quill.scroll.descendant(TableWrapperFormat, range.index);\r\n      if (tableWrapper !== null) {\r\n        // 此时在 table 内, 禁用部分功能\r\n        this.disableFromTable();\r\n\r\n        this.tableWrapper = tableWrapper;\r\n        this.table = tableWrapper.children.head;\r\n        // 找到 tbody\r\n        let tbody = tableWrapper.children.tail;\r\n        while (tbody && tbody.statics.blotName !== blotName.tableBody) {\r\n          tbody = tbody.children?.tail;\r\n        }\r\n\r\n        const tableCols = tableWrapper.children.head?.children?.head;\r\n        this.tableCols = tableCols.statics.blotName === blotName.tableColGroup && tableCols.children.length > 0 ? tableCols.children.map(col => col) : [];\r\n\r\n        const curTableId = tableWrapper.children.head.tableId;\r\n        if (this.curTableId !== curTableId) {\r\n          this.clearScrollEvent();\r\n          this.focusTableChange = true;\r\n          // 表格滚动同步事件\r\n          this.addScrollEvent(\r\n            this.tableWrapper.domNode,\r\n            this.scrollSync.bind(this, this.tableWrapper.domNode),\r\n          );\r\n        }\r\n        this.curTableId = curTableId;\r\n\r\n        this.show();\r\n        this.position();\r\n        return;\r\n      }\r\n      else {\r\n        this.enableFromTable();\r\n      }\r\n      this.hide();\r\n    });\r\n  }\r\n\r\n  disableFromTable() {\r\n    this.toggleDisableToolbarTools('add');\r\n\r\n    const toolbar = this.quill.getModule('toolbar');\r\n    // 防止重复触发覆盖保存事件\r\n    if (toolbar.disableByTable) return;\r\n    toolbar.disableByTable = true;\r\n    // 去除 toolbar 对应 module 的 handler 事件, 保存在 tableDisableToolHandlers\r\n    for (const toolName of TableTooltip.disableToolNames) {\r\n      this.tableDisableToolHandlers[toolName] = toolbar.handlers[toolName];\r\n      // 不要设置为 null\r\n      toolbar.handlers[toolName] = () => {};\r\n    }\r\n  }\r\n\r\n  enableFromTable() {\r\n    this.toggleDisableToolbarTools('remove');\r\n\r\n    const toolbar = this.quill.getModule('toolbar');\r\n    // 根据 tableDisableToolHandlers 恢复 handler\r\n    for (const toolName in this.tableDisableToolHandlers) {\r\n      toolbar.handlers[toolName] = this.tableDisableToolHandlers[toolName];\r\n    }\r\n    this.tableDisableToolHandlers = {};\r\n    toolbar.disableByTable = false;\r\n  }\r\n\r\n  /**\r\n     * Toggles the disable state of toolbar tools.\r\n     *\r\n     * @param {'add' | 'remove'} type - The type of toggle action to perform.\r\n     */\r\n  toggleDisableToolbarTools(type) {\r\n    const toolbar = this.quill.getModule('toolbar');\r\n    for (const [name, btn] of toolbar.controls) {\r\n      if (TableTooltip.disableToolNames.includes(name)) {\r\n        if (btn.tagName.toLowerCase() === 'select') {\r\n          toolbar.container\r\n            .querySelector(`.ql-picker.${btn.className}`)\r\n            ?.classList[type]('ql-disabled-table');\r\n        }\r\n        else {\r\n          btn.classList[type]('ql-disabled-table');\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  scrollSync(dom, e) {\r\n    this.root.scrollLeft = dom.scrollLeft;\r\n  }\r\n\r\n  addScrollEvent(dom, handle) {\r\n    dom.addEventListener('scroll', handle);\r\n    this.scrollHandler.push([dom, handle]);\r\n  }\r\n\r\n  clearScrollEvent() {\r\n    for (let i = 0; i < this.scrollHandler.length; i++) {\r\n      const [dom, handle] = this.scrollHandler[i];\r\n      dom.removeEventListener('scroll', handle);\r\n    }\r\n    this.scrollHandler = [];\r\n  }\r\n\r\n  position = () => {\r\n    const tableMainRect = this.table.domNode.getBoundingClientRect();\r\n    const rootRect = this.quill.root.getBoundingClientRect();\r\n\r\n    css(this.root, {\r\n      top: `${tableMainRect.y - rootRect.y - TIP_HEIGHT}px`,\r\n      left: `${tableMainRect.x - rootRect.x + this.tableWrapper.domNode.scrollLeft}px`,\r\n    });\r\n  };\r\n\r\n  show() {\r\n    // 若没有 colgroup col 元素，不显示\r\n    if (this.tableCols.length === 0) {\r\n      return;\r\n    }\r\n\r\n    if (this.focusTableChange) {\r\n      const tableWrapperRect = this.tableWrapper.domNode.getBoundingClientRect();\r\n      // 加 tableId 用于 table 删除时隐藏 tooltip\r\n      this.root.dataset.tableId = this.tableWrapper.tableId;\r\n      this.root.innerHTML = [...this.tableCols]\r\n        .map((col) => {\r\n          let width = col.width + (this.table.full ? '%' : 'px');\r\n          if (!col.width) {\r\n            width = `${col.domNode.getBoundingClientRect().width}px`;\r\n          }\r\n          return `<div class=\"ql-table-col-header\" style=\"width: ${width}\">\r\n            <div class=\"ql-table-col-separator\" style=\"height: ${tableWrapperRect.height + TIP_HEIGHT - 3}px\"></div>\r\n          </div>`; // -3 为 border-width: 2, top: 1\r\n        })\r\n        .join('');\r\n\r\n      this.focusTableChange = false;\r\n      Object.assign(this.root.style, {\r\n        width: `${tableWrapperRect.width}px`,\r\n      });\r\n\r\n      this.bindDrag();\r\n    }\r\n    setTimeout(() => {\r\n      this.scrollSync(this.tableWrapper.domNode);\r\n    }, 0);\r\n    this.root.classList.remove('ql-hidden');\r\n\r\n    const srcollHide = () => {\r\n      this.hide();\r\n      this.quill.root.removeEventListener('scroll', srcollHide);\r\n    };\r\n    this.quill.root.addEventListener('scroll', srcollHide);\r\n  }\r\n\r\n  hide() {\r\n    this.root.classList.add('ql-hidden');\r\n  }\r\n\r\n  bindDrag() {\r\n    let tipColBreak = null;\r\n    let curColIndex = -1;\r\n    const tableColHeads = Array.from(this.root.getElementsByClassName('ql-table-col-header'));\r\n    const tableColHeadSeparators = Array.from(this.root.getElementsByClassName('ql-table-col-separator'));\r\n    const appendTo = document.body;\r\n    // 设置每个 drag 下标对应 col 下标，最右会多一个 drag, 与 better-table 的类似\r\n    // 根据当前的 col left 配合 clientX 计算, 使保证最小宽度\r\n    const handleMousemove = (e) => {\r\n      // getBoundingClientRect 的 top/bottom/left/right, 这是根据视口距离\r\n      const rect = tableColHeads[curColIndex].getBoundingClientRect();\r\n      const tableWidth = this.table.domNode.getBoundingClientRect().width;\r\n      let resX = this.isMobile ? e.changedTouches[0].clientX : e.clientX;\r\n\r\n      if (this.table.full) {\r\n        // 拖拽的最大宽度是当前 col 宽度 + next col 宽度, 最后一个 col 最大宽度是当前宽度\r\n        const minWidth = (CELL_MIN_PRE / 100) * tableWidth;\r\n        const maxRange\r\n                    = resX > rect.right\r\n                      ? tableColHeads[curColIndex + 1]\r\n                        ? tableColHeads[curColIndex + 1].getBoundingClientRect().right - minWidth\r\n                        : rect.right - minWidth\r\n                      : Infinity;\r\n        const minRange = rect.x + minWidth;\r\n\r\n        resX = Math.min(Math.max(resX, minRange), maxRange);\r\n      }\r\n      else {\r\n        if (resX - rect.x < CELL_MIN_WIDTH) {\r\n          resX = rect.x + CELL_MIN_WIDTH;\r\n        }\r\n      }\r\n      tipColBreak.style.left = `${resX}px`;\r\n      tipColBreak.dataset.w = resX - rect.x;\r\n    };\r\n    const handleMouseup = (e) => {\r\n      const w = Number.parseInt(tipColBreak.dataset.w);\r\n      // table full 时处理不同\r\n      if (this.table.full) {\r\n        // 在调整一个后把所有 col 都变成百分比\r\n        let pre = (w / this.table.domNode.getBoundingClientRect().width) * 100;\r\n        const oldWidthPre = this.tableCols[curColIndex].width;\r\n        if (pre < oldWidthPre) {\r\n          // 缩小时若不是最后一个, 则把减少的量加在后面一个\r\n          // 若是最后一个则把减少的量加在前面一个\r\n          pre = Math.max(CELL_MIN_PRE, pre);\r\n          const last = oldWidthPre - pre;\r\n          if (this.tableCols[curColIndex + 1]) {\r\n            this.tableCols[curColIndex + 1].width = `${this.tableCols[curColIndex + 1].width + last}%`;\r\n          }\r\n          else if (this.tableCols[curColIndex - 1]) {\r\n            this.tableCols[curColIndex - 1].width = `${this.tableCols[curColIndex - 1].width + last}%`;\r\n          }\r\n          else {\r\n            pre = 100;\r\n          }\r\n          this.tableCols[curColIndex].width = `${pre}%`;\r\n        }\r\n        else {\r\n          // 增大时若不是最后一个, 则与后面一个的宽度合并, 最大不能超过合并的宽度, 增加的量来自后面一个的减少量\r\n          // 若是最后一个则不处理\r\n          if (this.tableCols[curColIndex + 1]) {\r\n            const totalWidthNextPre = oldWidthPre + this.tableCols[curColIndex + 1].width;\r\n            pre = Math.min(totalWidthNextPre - CELL_MIN_PRE, pre);\r\n            this.tableCols[curColIndex].width = `${pre}%`;\r\n            this.tableCols[curColIndex + 1].width = `${totalWidthNextPre - pre}%`;\r\n          }\r\n        }\r\n      }\r\n      else {\r\n        this.table.domNode.style.width = `${\r\n          Number.parseFloat(this.table.domNode.style.width)\r\n          - Number.parseFloat(tableColHeads[curColIndex].style.width)\r\n          + w\r\n        }px`;\r\n        tableColHeads[curColIndex].style.width = `${w}px`;\r\n        this.tableCols[curColIndex].width = `${w}px`;\r\n      }\r\n      this.table.formatTableWidth();\r\n\r\n      appendTo.removeChild(tipColBreak);\r\n      tipColBreak = null;\r\n      curColIndex = -1;\r\n      document.removeEventListener(this.handledEvents.up, handleMouseup);\r\n      document.removeEventListener(this.handledEvents.move, handleMousemove);\r\n\r\n      const tableModule = this.quill.getModule(toolName.table);\r\n      tableModule.hideTableTools();\r\n    };\r\n    const handleMousedown = (i, e) => {\r\n      document.addEventListener(this.handledEvents.up, handleMouseup);\r\n      document.addEventListener(this.handledEvents.move, handleMousemove);\r\n      curColIndex = i;\r\n\r\n      const divDom = document.createElement('div');\r\n      divDom.classList.add('ql-table-drag-line');\r\n\r\n      // set drag init width\r\n      const fullWidth = this.table.domNode.getBoundingClientRect().width;\r\n      const colWidthAttr = Number.parseFloat(tableColHeads[curColIndex].style.width);\r\n      const width = this.table.full ? colWidthAttr / 100 * fullWidth : colWidthAttr;\r\n      divDom.dataset.w = width;\r\n\r\n      const tableRect = this.tableWrapper.domNode.getBoundingClientRect();\r\n      css(divDom, {\r\n        top: `${tableRect.y - TIP_HEIGHT}px`,\r\n        left: `${this.isMobile ? e.changedTouches[0].clientX : e.clientX}px`,\r\n        height: `${tableRect.height + TIP_HEIGHT}px`,\r\n      });\r\n      appendTo.appendChild(divDom);\r\n\r\n      if (tipColBreak) appendTo.removeChild(tipColBreak);\r\n      tipColBreak = divDom;\r\n    };\r\n    for (const [i, el] of tableColHeadSeparators.entries()) {\r\n      el.addEventListener(this.handledEvents.down, handleMousedown.bind(this, i));\r\n      // 防止拖拽使触发 drag 导致可以使此元素被插入表格\r\n      el.addEventListener('dragstart', (e) => {\r\n        e.preventDefault();\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n// 在 table 内时禁用的 tool 的 name\r\nTableTooltip.disableToolNames = [toolName.table, 'code-block'];\r\n","import Quill from 'quill';\r\nimport { TableOperationMenu, TableSelection, TableTooltip } from './module';\r\nimport {\r\n  ContainerFormat,\r\n  ListItemRewrite,\r\n  TableBodyFormat,\r\n  TableCellFormat,\r\n  TableCellInnerFormat,\r\n  TableColFormat,\r\n  TableColgroupFormat,\r\n  TableFormat,\r\n  TableRowFormat,\r\n  TableWrapperFormat,\r\n} from './format';\r\nimport { debounce, findParentBlot, isFunction, isUndefined, randomId, showTableSelector } from './utils';\r\nimport { CELL_MIN_PRE, CELL_MIN_WIDTH, CREATE_TABLE, blotName, moduleName, toolName } from './assets/const';\r\nimport TableSvg from './assets/icons/table.svg';\r\n\r\nconst Parchment = Quill.import('parchment');\r\nconst Delta = Quill.import('delta');\r\nconst Break = Quill.import('blots/break');\r\nconst BlockEmbed = Quill.import('blots/block/embed');\r\nconst Block = Quill.import('blots/block');\r\nconst Container = Quill.import('blots/container');\r\nconst icons = Quill.import('ui/icons');\r\n\r\nContainerFormat.allowedChildren = [Block, BlockEmbed, Container];\r\n\r\nTableWrapperFormat.allowedChildren = [TableFormat];\r\n\r\nTableFormat.allowedChildren = [TableBodyFormat, TableColgroupFormat];\r\nTableFormat.requiredContainer = TableWrapperFormat;\r\n\r\nTableBodyFormat.allowedChildren = [TableRowFormat];\r\nTableBodyFormat.requiredContainer = TableFormat;\r\n\r\nTableColgroupFormat.allowedChildren = [TableColFormat];\r\nTableColgroupFormat.requiredContainer = TableFormat;\r\n\r\nTableRowFormat.allowedChildren = [TableCellFormat];\r\nTableRowFormat.requiredContainer = TableBodyFormat;\r\n\r\n// Break to handle user select mutiple line cell to delete. MutationObserver will have `a addNodes: [br]` for td\r\nTableCellFormat.allowedChildren = [TableCellInnerFormat, Break];\r\nTableCellFormat.requiredContainer = TableRowFormat;\r\n\r\nTableCellInnerFormat.requiredContainer = TableCellFormat;\r\nTableCellInnerFormat.defaultChild = 'block';\r\n\r\nexport { ListItemRewrite };\r\n\r\nQuill.register(\r\n  {\r\n    [`formats/${ContainerFormat.blotName}`]: ContainerFormat,\r\n\r\n    [`formats/${TableCellInnerFormat.blotName}`]: TableCellInnerFormat,\r\n    [`formats/${TableCellFormat.blotName}`]: TableCellFormat,\r\n    [`formats/${TableRowFormat.blotName}`]: TableRowFormat,\r\n    [`formats/${TableBodyFormat.blotName}`]: TableBodyFormat,\r\n    [`formats/${TableFormat.blotName}`]: TableFormat,\r\n    [`formats/${TableWrapperFormat.blotName}`]: TableWrapperFormat,\r\n\r\n    [`formats/${TableColgroupFormat.blotName}`]: TableColgroupFormat,\r\n    [`formats/${TableColFormat.blotName}`]: TableColFormat,\r\n  },\r\n  true,\r\n);\r\n\r\n// 不可插入至表格的 blot\r\nexport const tableCantInsert = [blotName.tableCell, 'code-block'];\r\nexport function isForbidInTableBlot(blot) {\r\n  return tableCantInsert.includes(blot.statics.blotName);\r\n};\r\n\r\nexport function isForbidInTable(current) {\r\n  return current && current.parent\r\n    ? isForbidInTableBlot(current.parent)\r\n      ? true\r\n      : isForbidInTable(current.parent)\r\n    : false;\r\n};\r\nfunction createCell({ tableId, rowId, colId }) {\r\n  const value = {\r\n    tableId,\r\n    rowId,\r\n    colId,\r\n    colspan: 1,\r\n    rowspan: 1,\r\n  };\r\n  const tableCell = Parchment.create(blotName.tableCell, value);\r\n  const tableCellInner = Parchment.create(blotName.tableCellInner, value);\r\n  const block = Parchment.create('block');\r\n  block.appendChild(Parchment.create('break'));\r\n  tableCellInner.appendChild(block);\r\n  tableCell.appendChild(tableCellInner);\r\n  return tableCell;\r\n};\r\n\r\nclass TableModule {\r\n  constructor(quill, options) {\r\n    this.quill = quill;\r\n    this.options = options;\r\n\r\n    this.controlItem = null;\r\n    this.tableInsertSelectCloseHandler = null;\r\n\r\n    const toolbar = this.quill.getModule('toolbar');\r\n    if (toolbar) {\r\n      const control = toolbar.controls.find(([name]) => name === TableModule.toolName);\r\n      if (control) {\r\n        this.controlItem = control[1].parentNode.querySelector('.ql-table.ql-picker');\r\n        // 使用 button 时会在点击后立刻聚焦输入, 若有横向滚动条会时视口锁定到 focus, 使用 select 就不会\r\n        if (this.controlItem) {\r\n          const label = this.controlItem.getElementsByClassName('ql-picker-label')?.[0];\r\n          label.innerHTML = TableSvg;\r\n        }\r\n        else {\r\n          this.controlItem = control[1];\r\n        }\r\n        this.buildCustomSelect(\r\n          this.options.customSelect,\r\n          control[1].tagName.toLowerCase(),\r\n          this.options.customButton,\r\n        );\r\n        toolbar.addHandler(TableModule.toolName, this.handleSelectDisplay.bind(this));\r\n      }\r\n    }\r\n\r\n    this.pasteTableHandler();\r\n    // 绑定 table 的选择事件\r\n    this.quill.root.addEventListener(\r\n      'click',\r\n      (evt) => {\r\n        const path = evt.path || (evt.composedPath && evt.composedPath());\r\n        if (!path || path.length <= 0) return;\r\n\r\n        const tableNode = path.find((node) => {\r\n          return (\r\n            node.tagName && node.tagName.toUpperCase() === 'TABLE' && node.classList.contains('ql-table')\r\n          );\r\n        });\r\n        // 结束位置位处于表格内不显示\r\n        if (tableNode) {\r\n          if (this.table === tableNode) return;\r\n          if (this.table) this.hideTableTools();\r\n          this.showTableTools(tableNode, quill, this.options.selection);\r\n        }\r\n        else if (this.table) {\r\n          this.hideTableTools();\r\n        }\r\n      },\r\n      false,\r\n    );\r\n    // 绑定 table 的右键插入、删除事件\r\n    this.quill.root.addEventListener('contextmenu', (evt) => {\r\n      if (!this.table) return true;\r\n      evt.preventDefault();\r\n\r\n      const path = evt.path || (evt.composedPath && evt.composedPath());\r\n      if (!path || path.length <= 0) return;\r\n\r\n      const tableNode = path.find(\r\n        node => node.tagName && node.tagName.toUpperCase() === 'TABLE' && node.classList.contains('ql-table'),\r\n      );\r\n      // 如果没有选中任何单元格，不显示右键菜单\r\n      if (tableNode && this.tableSelection?.selectedTds?.length) {\r\n        if (this.tableOperationMenu) this.tableOperationMenu = this.tableOperationMenu.destroy();\r\n\r\n        const rowNode = path.find(\r\n          node => node.tagName && node.tagName.toUpperCase() === 'TR' && node.dataset.rowId,\r\n        );\r\n\r\n        const cellNode = path.find(\r\n          node => node.tagName && node.tagName.toUpperCase() === 'TD' && node.dataset.rowId,\r\n        );\r\n\r\n        this.tableOperationMenu = new TableOperationMenu(\r\n          {\r\n            table: tableNode,\r\n            row: rowNode,\r\n            cell: cellNode,\r\n            left: evt.clientX,\r\n            top: evt.clientY,\r\n          },\r\n          quill,\r\n          this.options.operationMenu,\r\n        );\r\n      }\r\n    });\r\n    if (isUndefined(this.options.dragResize) || this.options.dragResize) {\r\n      this.quill.theme.TableTooltip = new TableTooltip(this.quill, this.options.tableToolTip);\r\n    }\r\n\r\n    this.listenBalanceCells();\r\n  }\r\n\r\n  showTableTools(table, quill, options) {\r\n    if (table) {\r\n      this.table = table;\r\n      this.tableSelection = new TableSelection(table, quill, options);\r\n    }\r\n  }\r\n\r\n  hideTableTools() {\r\n    this.tableSelection && this.tableSelection.destroy();\r\n    this.tableOperationMenu && this.tableOperationMenu.destroy();\r\n    if (this.quill.theme.TableTooltip) {\r\n      this.quill.theme.TableTooltip.curTableId = null;\r\n      this.quill.theme.TableTooltip.hide();\r\n    }\r\n    this.tableSelection = null;\r\n    this.tableOperationMenu = null;\r\n    this.table = null;\r\n  }\r\n\r\n  // 粘贴表格处理\r\n  // 需要带上 col 的 width, 处理 px 和 %\r\n  pasteTableHandler() {\r\n    let tableId = randomId();\r\n    let rowId = randomId();\r\n    let colIds = [];\r\n    let cellCount = 0;\r\n\r\n    // 重新生成 table 里的所有 id, cellFormat 和 colFormat 进行 table 的添加\r\n    // addMatcher 匹配的是标签字符串, 不是 blotName, 只是这些 blotName 设置的是标签字符串\r\n    this.quill.clipboard.addMatcher(blotName.table, (node, delta) => {\r\n      if (delta.ops.length === 0) return delta;\r\n      const hasCol = !!delta.ops[0].attributes?.col;\r\n      let colDelta;\r\n      // 粘贴表格若原本存在 col, 仅改变 id, 否则重新生成\r\n      const { width: originTableWidth } = node.getBoundingClientRect();\r\n      let isFull = this.options.fullWidth;\r\n      if (hasCol) isFull = !!delta.ops[0].insert?.col?.full;\r\n      const defaultColWidth = isFull\r\n        ? `${Math.max(100 / colIds.length, CELL_MIN_PRE)}%`\r\n        : `${Math.max(originTableWidth / colIds.length, CELL_MIN_WIDTH)}px`;\r\n\r\n      if (!hasCol) {\r\n        colDelta = colIds.reduce((colDelta, id) => {\r\n          colDelta.insert('\\n', {\r\n            [blotName.tableCol]: {\r\n              colId: id,\r\n              tableId,\r\n              width: defaultColWidth,\r\n              full: isFull,\r\n            },\r\n          });\r\n          return colDelta;\r\n        }, new Delta());\r\n      }\r\n      else {\r\n        for (let i = 0; i < delta.ops.length; i++) {\r\n          if (!delta.ops[i].attributes[blotName.tableCol]) {\r\n            break;\r\n          }\r\n          Object.assign(delta.ops[i].attributes[blotName.tableCol], {\r\n            tableId,\r\n            colId: colIds[i],\r\n            full: isFull,\r\n            width: !delta.ops[i].attributes[blotName.tableCol].width\r\n              ? defaultColWidth\r\n              : Number.parseFloat(delta.ops[i].attributes[blotName.tableCol].width) + (isFull ? '%' : 'px'),\r\n          });\r\n        }\r\n      }\r\n      tableId = randomId();\r\n      colIds = [];\r\n      cellCount = 0;\r\n      return colDelta ? colDelta.concat(delta) : delta;\r\n    });\r\n\r\n    this.quill.clipboard.addMatcher(blotName.tableRow, (node, delta) => {\r\n      rowId = randomId();\r\n      cellCount = 0;\r\n      return delta;\r\n    });\r\n\r\n    this.quill.clipboard.addMatcher(blotName.tableCell, (node, delta) => {\r\n      const rowspan = node.getAttribute('rowspan') || 1;\r\n      const colspan = node.getAttribute('colspan') || 1;\r\n      const colIndex = +cellCount + +colspan - 1;\r\n      if (!colIds[colIndex]) {\r\n        for (let i = colIndex; i >= 0; i--) {\r\n          if (!colIds[i]) colIds[i] = randomId();\r\n        }\r\n      }\r\n      const colId = colIds[colIndex];\r\n      cellCount += 1;\r\n\r\n      if (delta.slice(delta.length() - 1).ops[0]?.insert !== '\\n') {\r\n        delta.insert('\\n');\r\n      }\r\n\r\n      return delta.compose(\r\n        new Delta().retain(delta.length(), {\r\n          [blotName.tableCellInner]: {\r\n            tableId,\r\n            rowId,\r\n            colId,\r\n            rowspan,\r\n            colspan,\r\n            style: node.getAttribute('style'),\r\n          },\r\n        }),\r\n      );\r\n    });\r\n  }\r\n\r\n  async buildCustomSelect(customSelect, tagName, customButton) {\r\n    const dom = document.createElement('div');\r\n    dom.classList.add('ql-custom-select');\r\n    const selector = customSelect && isFunction(customSelect)\r\n      ? await customSelect()\r\n      : this.createSelect(customButton);\r\n    dom.appendChild(selector);\r\n\r\n    let appendTo = this.controlItem;\r\n    if (tagName === 'select') {\r\n      appendTo = this.controlItem.querySelector('.ql-picker-options');\r\n    }\r\n    if (!appendTo) return;\r\n    selector.addEventListener(CREATE_TABLE, (e) => {\r\n      const { row, col } = e.detail;\r\n      if (!row || !col) return;\r\n      this.insertTable(row, col);\r\n    });\r\n    appendTo.appendChild(dom);\r\n  }\r\n\r\n  async handleSelectDisplay() {\r\n    this.controlItem.classList.add('ql-expanded');\r\n    this.controlItem.dataset.active = true;\r\n    window.removeEventListener('click', this.tableInsertSelectCloseHandler);\r\n    this.tableInsertSelectCloseHandler = (e) => {\r\n      const path = (e.composedPath && e.composedPath()) || e.path;\r\n      const i = path.indexOf(this.controlItem);\r\n      if (i > 2 || i === -1) {\r\n        this.closeSelecte();\r\n      }\r\n    };\r\n    window.addEventListener('click', this.tableInsertSelectCloseHandler);\r\n  }\r\n\r\n  createSelect(customButton) {\r\n    return showTableSelector(customButton);\r\n  }\r\n\r\n  closeSelecte() {\r\n    if (this.controlItem) {\r\n      this.controlItem.classList.remove('ql-expanded');\r\n      this.controlItem.dataset.active = false;\r\n    }\r\n    window.removeEventListener('click', this.tableInsertSelectCloseHandler);\r\n  }\r\n\r\n  // 以上为 toolbar table 按钮的选择生成器相关\r\n  // 以下为 table module 生成表格相关功能函数\r\n\r\n  insertTable(rows, columns) {\r\n    if (rows >= 30 || columns >= 30) {\r\n      throw new Error('Both rows and columns must be less than 30.');\r\n    }\r\n\r\n    this.quill.focus();\r\n    this.range = this.quill.getSelection();\r\n    const range = this.range;\r\n    if (range == null) return;\r\n    const currentBlot = this.quill.getLeaf(range.index)[0];\r\n\r\n    if (isForbidInTable(currentBlot)) {\r\n      throw new Error(`Not supported nesting of ${currentBlot.type} type object within a table.`);\r\n    }\r\n\r\n    let delta = new Delta().retain(range.index);\r\n    delta.insert('\\n');\r\n    const tableId = randomId();\r\n    const colId = new Array(columns).fill(0).map(() => randomId());\r\n\r\n    let { width, paddingLeft, paddingRight } = getComputedStyle(this.quill.root);\r\n    width = Number.parseInt(width);\r\n    paddingLeft = Number.parseInt(paddingLeft);\r\n    paddingRight = Number.parseInt(paddingRight);\r\n    width = width - paddingLeft - paddingRight;\r\n\r\n    delta = new Array(columns).fill('\\n').reduce((memo, text, i) => {\r\n      memo.insert(text, {\r\n        [blotName.tableCol]: {\r\n          width: !this.options.fullWidth ? `${Math.floor(width / columns)}px` : `${(1 / columns) * 100}%`,\r\n          tableId,\r\n          colId: colId[i],\r\n          full: this.options.fullWidth,\r\n        },\r\n      });\r\n      return memo;\r\n    }, delta);\r\n\r\n    // 直接生成 delta 的数据格式并插入\r\n    delta = new Array(rows).fill(0).reduce((memo) => {\r\n      const rowId = randomId();\r\n      return new Array(columns).fill('\\n').reduce((memo, text, i) => {\r\n        memo.insert(text, {\r\n          [blotName.tableCellInner]: {\r\n            tableId,\r\n            rowId,\r\n            colId: colId[i],\r\n            rowspan: 1,\r\n            colspan: 1,\r\n          },\r\n        });\r\n        return memo;\r\n      }, memo);\r\n    }, delta);\r\n    // console.log(columns, rows);\r\n    this.quill.updateContents(delta, Quill.sources.USER);\r\n    this.quill.setSelection(range.index + columns + columns * rows + 1, Quill.sources.API);\r\n    this.quill.focus();\r\n\r\n    this.closeSelecte();\r\n  }\r\n\r\n  removeTable() {\r\n    const selectedTds = this.tableSelection.selectedTds;\r\n    if (selectedTds.length === 0) return;\r\n    const tableBlot = findParentBlot(selectedTds[0], blotName.table);\r\n    tableBlot && tableBlot.remove();\r\n  }\r\n\r\n  setStyle(styles, cells) {\r\n    if (cells.length === 0) return;\r\n    cells.map(cellInner => (cellInner.style = styles));\r\n  }\r\n\r\n  /**\r\n   * after insert or remove cell. handle cell colspan and rowspan merge\r\n   */\r\n  fixTableByRemove(tableBlot) {\r\n    // calculate all cells\r\n    // maybe will get empty tr\r\n    const trBlots = tableBlot.getRows();\r\n    const tableCols = tableBlot.getCols();\r\n    const colIdMap = tableCols.reduce((idMap, col) => {\r\n      idMap[col.colId] = 0;\r\n      return idMap;\r\n    }, {});\r\n    // merge rowspan\r\n    const reverseTrBlots = [...trBlots].reverse();\r\n    const removeTr = [];\r\n    for (const [index, tr] of reverseTrBlots.entries()) {\r\n      const i = trBlots.length - index - 1;\r\n      if (tr.children.length <= 0) {\r\n        removeTr.push(i);\r\n      }\r\n      else {\r\n        // if have td rowspan across empty tr. minus rowspan\r\n        tr.foreachCellInner((td) => {\r\n          const sum = removeTr.reduce((sum, val) => td.rowspan + i > val ? sum + 1 : sum, 0);\r\n          td.rowspan -= sum;\r\n          // count exist col\r\n          colIdMap[td.colId] += 1;\r\n        });\r\n      }\r\n    }\r\n    // merge colspan\r\n    let index = 0;\r\n    for (const count of Object.values(colIdMap)) {\r\n      if (count === 0) {\r\n        const spanCols = [];\r\n        let skipRowNum = 0;\r\n        for (const tr of Object.values(trBlots)) {\r\n          const spanCol = spanCols.shift() || 0;\r\n          let nextSpanCols = [];\r\n          if (skipRowNum > 0) {\r\n            nextSpanCols = tr.getCellByColumIndex(index - spanCol)[2];\r\n            skipRowNum -= 1;\r\n          }\r\n          else {\r\n            nextSpanCols = tr.removeCell(index - spanCol);\r\n            if (nextSpanCols.skipRowNum) {\r\n              skipRowNum += nextSpanCols.skipRowNum;\r\n            }\r\n          }\r\n          for (const [i, n] of nextSpanCols.entries()) {\r\n            spanCols[i] = (spanCols[i] || 0) + n;\r\n          }\r\n        }\r\n      }\r\n      else {\r\n        index += 1;\r\n      }\r\n    }\r\n    // remove col\r\n    for (const col of tableCols) {\r\n      if (colIdMap[col.colId] === 0) {\r\n        if (col.prev) {\r\n          col.prev.width += col.width;\r\n        }\r\n        else if (col.next) {\r\n          col.next.width += col.width;\r\n        }\r\n        col.remove();\r\n      }\r\n    }\r\n  }\r\n\r\n  appendRow(isDown) {\r\n    const selectedTds = this.tableSelection.selectedTds;\r\n    if (selectedTds.length <= 0) return;\r\n    // find baseTd and baseTr\r\n    const baseTd = selectedTds[isDown ? selectedTds.length - 1 : 0];\r\n    const tableBlot = findParentBlot(baseTd, blotName.table);\r\n    const [tableBodyBlot] = tableBlot.descendants(TableBodyFormat);\r\n    if (!tableBodyBlot) return;\r\n\r\n    const baseTdParentTr = findParentBlot(baseTd, blotName.tableRow);\r\n    const tableTrs = tableBlot.getRows();\r\n    const i = tableTrs.indexOf(baseTdParentTr);\r\n    const insertRowIndex = i + (isDown ? baseTd.rowspan : 0);\r\n\r\n    tableBodyBlot.insertRow(insertRowIndex);\r\n  }\r\n\r\n  removeRow() {\r\n    const selectedTds = this.tableSelection.selectedTds;\r\n    if (selectedTds.length <= 0) return;\r\n    const baseTd = selectedTds[0];\r\n    const tableBlot = findParentBlot(baseTd, blotName.table);\r\n    const trs = tableBlot.getRows();\r\n    let endTrIndex = trs.length;\r\n    let nextTrIndex = -1;\r\n    for (const td of selectedTds) {\r\n      const tr = findParentBlot(td, blotName.tableRow);\r\n      const index = trs.indexOf(tr);\r\n      if (index < endTrIndex) {\r\n        endTrIndex = index;\r\n      }\r\n      if (index + td.rowspan > nextTrIndex) {\r\n        nextTrIndex = index + td.rowspan;\r\n      }\r\n    }\r\n\r\n    const patchTds = {};\r\n    for (let i = endTrIndex; i < Math.min(trs.length, nextTrIndex); i++) {\r\n      const tr = trs[i];\r\n      tr.foreachCellInner((td) => {\r\n        // find cells in rowspan that exceed the deletion range\r\n        if (td.rowspan + i > nextTrIndex) {\r\n          patchTds[td.colId] = {\r\n            rowspan: td.rowspan + i - nextTrIndex,\r\n            colspan: td.colspan,\r\n            colIndex: td.getColumnIndex(),\r\n          };\r\n        }\r\n        // only remove td. empty tr to calculate colspan and rowspan\r\n        td.parent.remove();\r\n      });\r\n    }\r\n\r\n    if (trs[nextTrIndex]) {\r\n      const nextTr = trs[nextTrIndex];\r\n      const tableId = tableBlot.tableId;\r\n      // insert cell in nextTr to patch exceed cell\r\n      for (const [colId, { colIndex, colspan, rowspan }] of Object.entries(patchTds)) {\r\n        nextTr.insertCell(colIndex, {\r\n          tableId,\r\n          rowId: nextTr.rowId,\r\n          colId,\r\n          colspan,\r\n          rowspan,\r\n        });\r\n      }\r\n    }\r\n\r\n    this.fixTableByRemove(tableBlot);\r\n  }\r\n\r\n  appendCol(isRight) {\r\n    const selectedTds = this.tableSelection.selectedTds;\r\n    if (selectedTds.length <= 0) return;\r\n\r\n    // find insert column index in row\r\n    const [baseTd] = selectedTds.reduce((pre, cur) => {\r\n      const columnIndex = cur.getColumnIndex();\r\n      if (!isRight && columnIndex <= pre[1]) {\r\n        pre = [cur, columnIndex];\r\n      }\r\n      else if (isRight && columnIndex >= pre[1]) {\r\n        pre = [cur, columnIndex];\r\n      }\r\n      return pre;\r\n    }, [null, isRight ? 0 : Infinity]);\r\n    const columnIndex = baseTd.getColumnIndex() + (isRight ? baseTd.colspan : 0);\r\n\r\n    const tableBlot = findParentBlot(baseTd, blotName.table);\r\n    const tableId = tableBlot.tableId;\r\n    const newColId = randomId();\r\n\r\n    const [colgroup] = tableBlot.descendants(TableColgroupFormat);\r\n    if (colgroup) {\r\n      colgroup.insertColByIndex(columnIndex, {\r\n        tableId,\r\n        colId: newColId,\r\n        width: tableBlot.full ? '6%' : '160px',\r\n        full: tableBlot.full,\r\n      });\r\n    }\r\n\r\n    // loop tr and insert cell at index\r\n    // if index is inner cell, skip next `rowspan` line\r\n    // if there are cells both have column span and row span before index cell, minus `colspan` cell for next line\r\n    const trs = tableBlot.descendants(TableRowFormat);\r\n    const spanCols = [];\r\n    let skipRowNum = 0;\r\n    for (const tr of Object.values(trs)) {\r\n      const spanCol = spanCols.shift() || 0;\r\n      if (skipRowNum > 0) {\r\n        skipRowNum -= 1;\r\n        continue;\r\n      }\r\n      const nextSpanCols = tr.insertCell(columnIndex - spanCol, {\r\n        tableId,\r\n        rowId: tr.rowId,\r\n        colId: newColId,\r\n        rowspan: 1,\r\n        colspan: 1,\r\n      });\r\n      if (nextSpanCols.skipRowNum) {\r\n        skipRowNum += nextSpanCols.skipRowNum;\r\n      }\r\n      for (const [i, n] of nextSpanCols.entries()) {\r\n        spanCols[i] = (spanCols[i] || 0) + n;\r\n      }\r\n    }\r\n  }\r\n\r\n  removeCol() {\r\n    const selectedTds = this.tableSelection.selectedTds;\r\n    if (selectedTds.length <= 0) return;\r\n    const baseTd = selectedTds[0];\r\n    const tableBlot = findParentBlot(baseTd, blotName.table);\r\n    const colspanMap = {};\r\n    for (const td of selectedTds) {\r\n      if (!colspanMap[td.rowId]) colspanMap[td.rowId] = 0;\r\n      colspanMap[td.rowId] += td.colspan;\r\n    }\r\n    const colspanCount = Math.max(...Object.values(colspanMap));\r\n    const columnIndex = baseTd.getColumnIndex();\r\n\r\n    const trs = tableBlot.descendants(TableRowFormat);\r\n    for (let i = 0; i < colspanCount; i++) {\r\n      const spanCols = [];\r\n      let skipRowNum = 0;\r\n      for (const tr of Object.values(trs)) {\r\n        const spanCol = spanCols.shift() || 0;\r\n        if (skipRowNum > 0) {\r\n          skipRowNum -= 1;\r\n          continue;\r\n        }\r\n        const nextSpanCols = tr.removeCell(columnIndex - spanCol);\r\n        if (nextSpanCols.skipRowNum) {\r\n          skipRowNum += nextSpanCols.skipRowNum;\r\n        }\r\n        for (const [i, n] of nextSpanCols.entries()) {\r\n          spanCols[i] = (spanCols[i] || 0) + n;\r\n        }\r\n      }\r\n    }\r\n    // delete col need after remove cell. remove cell need all column id\r\n    // manual delete col. use fixTableByRemove to delete col will delete extra cells\r\n    const [colgroup] = tableBlot.descendants(TableColgroupFormat);\r\n    if (colgroup) {\r\n      for (let i = 0; i < colspanCount; i++) {\r\n        colgroup.removeColByIndex(columnIndex);\r\n      }\r\n    }\r\n\r\n    this.fixTableByRemove(tableBlot);\r\n  }\r\n\r\n  splitCell() {\r\n    const selectedTds = this.tableSelection.selectedTds;\r\n    if (selectedTds.length !== 1) return;\r\n    const baseTd = selectedTds[0];\r\n    if (baseTd.colspan === 1 && baseTd.rowspan === 1) return;\r\n    const baseTr = findParentBlot(baseTd, blotName.tableRow);\r\n    const tableBlot = findParentBlot(baseTd, blotName.table);\r\n    const tableId = tableBlot.tableId;\r\n    const colIndex = baseTd.getColumnIndex();\r\n    const colIds = tableBlot.getColIds().slice(colIndex, colIndex + baseTd.colspan).reverse();\r\n\r\n    let curTr = baseTr;\r\n    let rowspan = baseTd.rowspan;\r\n    // reset span first. insertCell need colspan to judge insert position\r\n    baseTd.colspan = 1;\r\n    baseTd.rowspan = 1;\r\n    while (curTr && rowspan > 0) {\r\n      for (const id of colIds) {\r\n        // keep baseTd. baseTr should insert at baseTd's column index + 1\r\n        if (curTr === baseTr && id === baseTd.colId) continue;\r\n        curTr.insertCell(colIndex + (curTr === baseTr ? 1 : 0), {\r\n          tableId,\r\n          rowId: curTr.rowId,\r\n          colId: id,\r\n          rowspan: 1,\r\n          colspan: 1,\r\n        });\r\n      }\r\n\r\n      rowspan -= 1;\r\n      curTr = curTr.next;\r\n    }\r\n  }\r\n\r\n  mergeCells() {\r\n    const selectedTds = this.tableSelection.selectedTds;\r\n    if (selectedTds.length <= 1) return;\r\n    const counts = selectedTds.reduce(\r\n      (pre, selectTd, index) => {\r\n        // count column span\r\n        const colId = selectTd.colId;\r\n        if (!pre[0][colId]) pre[0][colId] = 0;\r\n        pre[0][colId] += selectTd.rowspan;\r\n        // count row span\r\n        const rowId = selectTd.rowId;\r\n        if (!pre[1][rowId]) pre[1][rowId] = 0;\r\n        pre[1][rowId] += selectTd.colspan;\r\n        // merge select cell\r\n        if (index !== 0) {\r\n          selectTd.moveChildren(pre[2]);\r\n          selectTd.parent.remove();\r\n        }\r\n        return pre;\r\n      },\r\n      [{}, {}, selectedTds[0]],\r\n    );\r\n\r\n    const rowCount = Math.max(...Object.values(counts[0]));\r\n    const colCount = Math.max(...Object.values(counts[1]));\r\n    const baseTd = counts[2];\r\n    baseTd.colspan = colCount;\r\n    baseTd.rowspan = rowCount;\r\n\r\n    const tableBlot = findParentBlot(baseTd, blotName.table);\r\n    this.fixTableByRemove(tableBlot);\r\n  }\r\n\r\n  // handle unusual delete cell\r\n  fixUnusuaDeletelTable(tableBlot) {\r\n    // calculate all cells\r\n    const trBlots = tableBlot.getRows();\r\n    const tableColIds = tableBlot.getColIds();\r\n    if (trBlots.length === 0 || tableColIds.length === 0) {\r\n      return tableBlot.remove();\r\n    }\r\n    // append by col\r\n    const cellSpanMap = new Array(trBlots.length).fill(0).map(() => new Array(tableColIds.length).fill(false));\r\n    const tableId = tableBlot.tableId;\r\n    for (const [indexTr, tr] of trBlots.entries()) {\r\n      let indexTd = 0;\r\n      let indexCol = 0;\r\n      const curCellSpan = cellSpanMap[indexTr];\r\n      const tds = tr.descendants(TableCellFormat);\r\n      // loop every row and column\r\n      while (indexCol < tableColIds.length) {\r\n        // skip when rowspan or colspan\r\n        if (curCellSpan[indexCol]) {\r\n          indexCol += 1;\r\n          continue;\r\n        }\r\n        const curTd = tds[indexTd];\r\n        // if colId does not match. insert a new one\r\n        if (!curTd || curTd.colId !== tableColIds[indexCol]) {\r\n          tr.insertBefore(\r\n            createCell(\r\n              {\r\n                tableId,\r\n                colId: tableColIds[indexCol],\r\n                rowId: tr.rowId,\r\n              },\r\n            ),\r\n            curTd,\r\n          );\r\n        }\r\n        else {\r\n          if (indexTr + curTd.rowspan - 1 >= trBlots.length) {\r\n            curTd.getCellInner().rowspan = trBlots.length - indexTr;\r\n          }\r\n\r\n          const { colspan, rowspan } = curTd;\r\n          // skip next column cell\r\n          if (colspan > 1) {\r\n            for (let c = 1; c < colspan; c++) {\r\n              curCellSpan[indexCol + c] = true;\r\n            }\r\n          }\r\n          // skip next rowspan cell\r\n          if (rowspan > 1) {\r\n            for (let r = indexTr + 1; r < indexTr + rowspan; r++) {\r\n              for (let c = 0; c < colspan; c++) {\r\n                cellSpanMap[r][indexCol + c] = true;\r\n              }\r\n            }\r\n          }\r\n          indexTd += 1;\r\n        }\r\n        indexCol += 1;\r\n      }\r\n\r\n      // if td not match all exist td. Indicates that a cell has been inserted\r\n      if (indexTd < tds.length) {\r\n        for (let i = indexTd; i < tds.length; i++) {\r\n          tds[i].remove();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  balanceTables() {\r\n    for (const tableBlot of this.quill.scroll.descendants(TableFormat)) {\r\n      this.fixUnusuaDeletelTable(tableBlot);\r\n    }\r\n  }\r\n\r\n  listenBalanceCells() {\r\n    this.fixTableByLisenter = debounce(this.balanceTables, 100);\r\n    this.quill.on(\r\n      Quill.events.SCROLL_OPTIMIZE,\r\n      (mutations) => {\r\n        mutations.some((mutation) => {\r\n          if (\r\n            // TODO: if need add ['COL', 'COLGROUP']\r\n            ['TD', 'TR', 'TBODY', 'TABLE'].includes(mutation.target.tagName)\r\n          ) {\r\n            this.fixTableByLisenter();\r\n            return true;\r\n          }\r\n          return false;\r\n        });\r\n      },\r\n    );\r\n  }\r\n}\r\n\r\nTableModule.moduleName = moduleName.table;\r\nTableModule.toolName = toolName.table;\r\n\r\nTableModule.keyboradHandler = {\r\n  'forbid remove table by backspace': {\r\n    key: 'backspace',\r\n    collapsed: true,\r\n    offset: 0,\r\n    handler(range, context) {\r\n      const [blot] = this.quill.getLine(range.index);\r\n      if (blot.prev instanceof TableWrapperFormat) return false;\r\n\r\n      if (context.format[blotName.tableCellInner]) {\r\n        const offset = blot.offset(findParentBlot(blot, blotName.tableCellInner));\r\n        if (offset === 0) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    },\r\n  },\r\n  'forbid remove table by delete': {\r\n    key: 'delete',\r\n    collapsed: true,\r\n    handler(range, context) {\r\n      const [blot, offsetInline] = this.quill.getLine(range.index);\r\n      if (blot.next instanceof TableWrapperFormat && offsetInline === blot.length() - 1) return false;\r\n\r\n      if (context.format[blotName.tableCellInner]) {\r\n        const tableInnerBlot = findParentBlot(blot, blotName.tableCellInner);\r\n        const offsetInTableInner = blot.offset(tableInnerBlot);\r\n        if (offsetInTableInner + offsetInline === tableInnerBlot.length() - 1) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    },\r\n  },\r\n};\r\nTableModule.createEventName = CREATE_TABLE;\r\nicons[TableModule.toolName] = TableSvg;\r\n\r\nexport const rewirteFormats = () =>\r\n  Quill.register(\r\n    {\r\n      [`formats/list/item`]: ListItemRewrite,\r\n    },\r\n    true,\r\n  );\r\n\r\nexport default TableModule;\r\nexport {\r\n  TableOperationMenu,\r\n  TableSelection,\r\n  TableTooltip,\r\n};\r\n\r\n// TODO: redo and undo\r\n// TODO: maybe col need change to EmbedBlock\r\n// TODO: BlockEmbed can not setContents to insert table\r\n// TODO: don't allow index at col\r\n"],"names":["CREATE_TABLE","blotName","moduleName","toolName","randomId","Math","random","toString","slice","zindex","dialog","_ref","arguments","length","undefined","child","_ref$target","target","document","body","_ref$beforeClose","beforeClose","appendTo","createElement","classList","add","style","zIndex","overlay","appendChild","content","addEventListener","e","stopPropagation","originOverflow","getComputedStyle","overflow","close","remove","createInputItem","label","options","type","value","inputItem","inputLabel","textContent","inputInput","input","key","setAttribute","max","min","errorTip","msg","contains","querySelector","removeError","item","showTableCreator","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","row","col","box","inputContent","_createInputItem","rowItem","rowInput","rowErrorTip","_createInputItem2","colItem","colInput","colErrorTip","control","confirmBtn","cancelBtn","_args2","wrap","_context2","prev","next","abrupt","Promise","resolve","reject","_callee","_context","Number","isNaN","stop","apply","this","css","domNode","rules","prop","isRectanglesIntersect","a","b","tolerance","minAx","x","minAy","y","maxAx","x1","maxAy","y1","minBx","minBy","maxBx","maxBy","findParentBlot","blot","targetBlotName","parent","statics","scroll","Error","concat","isFunction","val","MENU_ITEMS_DEFAULT","insertColumnLeft","text","handler","tableModule","quill","getModule","appendCol","hideTableTools","insertColumnRight","insertRowTop","appendRow","insertRowBottom","groupEnd","removeCol","removeRow","removeTable","mergeCell","mergeCells","splitCell","setBackgroundColor","isColorChoose","color","setStyle","backgroundColor","selectedTds","clearBackgroundColor","setBorderColor","borderColor","clearBorderColor","TableOperationMenu","constructor","params","table","tableSelection","menuItems","mergeMenuItems","boundary","destroyHandler","destroy","bind","menuInitial","_this$options","_this$options3","_this$options$items","_this$options2","replaceItems","items","modifyItems","_this$options$items2","_this$options4","modifyMenuItems","_this$options5","newOptionsItems","_objectSpread","_i","_Object$entries","Object","entries","_this$options6","_Object$entries$_i","_slicedToArray","itemNewOptions","assign","setMenuPosition","_ref6","left","top","containerRect","container","getBoundingClientRect","menuRect","resLeft","resTop","width","height","_ref7","_table","_row","_cell","position","_i2","_Object$entries2","_Object$entries2$_i","name","subTitle","subTitleCreator","menuItemCreator","dividingCreator","dividing","title","removeEventListener","_ref8","iconSrc","node","iconSpan","innerHTML","textSpan","nodes","call","Array","isArray","map","sub","padding","border","Container","Quill","import","Parchment","ContainerFormat","create","super","insertBefore","ref","children","head","format","tail","replace","defaultChild","moveChildren","tagName","scope","Scope","BLOCK_BLOT","TableCellInnerFormat","tableId","rowId","colId","rowspan","colspan","dataset","_style","clearDeltaCache","forEach","cache","getColumnIndex","getColIds","indexOf","cloneTarget","clone","formats","_this$domNode$dataset","optimize","_this$domNode$dataset2","tableWrapper","tableBody","tr","td","className","TableRowFormat","insertCell","targetIndex","cur","skip","iterator","index","i","getCellInner","skipRowNum","tableCell","tableCellInner","block","getCellByColumIndex","stopIndex","cellEndIndex","removeCell","_this$getCellByColumI2","descendants","colIds","foreachCellInner","func","TableBodyFormat","deleteAt","forEachAt","offset","insertRow","tableBlot","_step","rows","insertColIds","Set","_iterator","_createForOfIteratorHelper","s","n","done","cell","delete","colIndex","err","f","_step2","_iterator2","tdInner","TableCellFormat","cssText","getAttribute","_this$domNode$dataset3","cellInner","TableColFormat","full","parseFloat","hasOwn","_this$domNode$dataset4","tableColgroup","_this$domNode$dataset5","ttableId","tcolId","TableFormat","formatTableWidth","colWidthFillTable","cols","colsWidth","reduce","sum","setTimeout","getRows","getRowIds","d","getCols","TableColgroupFormat","findCol","insertColByIndex","TypeError","removeColByIndex","TableWrapperFormat","preventDefault","dataTransfer","dropEffect","allowedChildren","some","_document$querySelect","ListItem","ListItemRewrite","replaceWith","isolate","replacement","attributes","copy","PRIMARY_COLOR","TableSelection","optionsMerge","startScrollX","dragging","selectingHandler","mouseDownHandler","cellSelect","scrollHandler","helpLinesInitial","ResizeObserver","hideSelection","observe","root","closeHandler","on","events","TEXT_CHANGE","_this$options7","primaryColor","addScrollEvent","dom","handle","push","clearScrollEvent","_this$scrollHandler$i","addContainer","mousedownEvent","button","clientX","clientY","closestTable","closest","startTableId","startPoint","parentNode","scrollLeft","computeSelectedTds","showSelection","mouseMoveHandler","mousemoveEvent","movePoint","blur","updateSelection","mouseUpHandler","endPoint","tableContainer","find","targetRect","tableCells","selectedCells","findEnd","_step3","_iterator3","__rect","_cell$__rect","right","bottom","_i3","_arr","scrollTop","from","tableViewScrollLeft","display","srcollHide","off","TIP_HEIGHT","TableTooltip","_defineProperty","tableMainRect","rootRect","tableDisableToolHandlers","curTableId","focusTableChange","tableCols","hide","isMobile","window","handledEvents","down","move","up","listen","_this$options8","_this$options9","tipHeight","disableToolNames","EDITOR_CHANGE","eventName","range","getSelection","enableFromTable","descendant","_tableWrapper$childre","disableFromTable","tbody","_tbody$children","scrollSync","show","toggleDisableToolbarTools","toolbar","disableByTable","_step4","_iterator4","handlers","_step5","_iterator5","controls","_toolbar$container$qu","_step5$value","btn","includes","toLowerCase","_this$scrollHandler$i2","tableWrapperRect","join","bindDrag","_step6","tipColBreak","curColIndex","tableColHeads","getElementsByClassName","tableColHeadSeparators","handleMousemove","rect","tableWidth","resX","changedTouches","minWidth","CELL_MIN_PRE","maxRange","Infinity","minRange","w","handleMouseup","parseInt","pre","oldWidthPre","last","totalWidthNextPre","removeChild","handleMousedown","divDom","fullWidth","colWidthAttr","tableRect","_iterator6","_step6$value","el","Delta","Break","BlockEmbed","Block","icons","requiredContainer","register","tableCantInsert","isForbidInTableBlot","isForbidInTable","current","TableModule","controlItem","tableInsertSelectCloseHandler","_ref10","_this$controlItem$get","TableSvg","buildCustomSelect","customSelect","customButton","addHandler","handleSelectDisplay","pasteTableHandler","evt","path","composedPath","tableNode","toUpperCase","showTableTools","selection","_this$tableSelection","tableOperationMenu","rowNode","cellNode","operationMenu","dragResize","theme","tableToolTip","listenBalanceCells","cellCount","clipboard","addMatcher","delta","_delta$ops$0$attribut","_delta$ops$0$insert","ops","colDelta","hasCol","originTableWidth","isFull","insert","defaultColWidth","id","blotName_tableCol","_delta$slice$ops$","compose","retain","blotName_tableCellInner","_this","_callee3","selector","_context3","t0","sent","createSelect","_e$detail","detail","insertTable","_this2","_callee4","_context4","active","closeSelecte","selectDom","selectBlock","r","c","selectItem","selectCustom","sendTableData","_ref4","dispatchEvent","CustomEvent","updateSelectBlockItems","_selectDom$dataset","prototype","querySelectorAll","childs","_e$target$dataset","_selectDom$dataset2","then","_ref5","showTableSelector","columns","focus","currentBlot","getLeaf","fill","_getComputedStyle","paddingLeft","paddingRight","memo","floor","updateContents","sources","USER","setSelection","API","styles","cells","fixTableByRemove","_step7","trBlots","colIdMap","idMap","reverseTrBlots","reverse","removeTr","_iterator7","_loop","_step7$value","_i4","_Object$values","values","spanCols","_i5","_Object$values2","spanCol","shift","nextSpanCols","_step8","_iterator8","_step8$value","_step9","_iterator9","isDown","baseTd","tableBodyBlot","baseTdParentTr","insertRowIndex","_step10","trs","endTrIndex","nextTrIndex","_iterator10","patchTds","_loop2","nextTr","_i6","_Object$entries3","_Object$entries3$_i","_Object$entries3$_i$","isRight","_selectedTds$reduce","columnIndex","newColId","colgroup","_i7","_Object$values3","_step11","_iterator11","_step11$value","_step12","colspanMap","_iterator12","colspanCount","_i8","_Object$values4","_step13","_iterator13","_step13$value","baseTr","curTr","_step14","_iterator14","counts","selectTd","rowCount","colCount","fixUnusuaDeletelTable","tableColIds","_step15","_ref9","cellSpanMap","_iterator15","_step15$value","indexTr","indexTd","indexCol","curCellSpan","tds","curTd","balanceTables","_step16","_iterator16","wait","timeout","fixTableByLisenter","_len","args","_key","clearTimeout","SCROLL_OPTIMIZE","mutations","mutation","keyboradHandler","collapsed","context","getLine","_this$quill$getLine4","offsetInline","tableInnerBlot","createEventName","rewirteFormats"],"mappings":"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"}