{"version":3,"file":"index.js","sources":["../src/assets/const/event.js","../src/assets/const/name.js","../src/utils/index.js","../src/module/TableOperationMenu.js","../src/format/ContainerFormat.js","../src/format/TableCellInnerFormat.js","../src/format/TableRowFormat.js","../src/format/TableBodyFormat.js","../src/format/TableCellFormat.js","../src/format/TableColFormat.js","../src/format/TableFormat.js","../src/format/TableColgroupFormat.js","../src/assets/const/vars.js","../src/format/TableWrapperFormat.js","../src/format/rewrite/List.js","../src/module/TableSelection.js","../src/module/TableToolTip.js","../src/index.js"],"sourcesContent":["export const CREATE_TABLE = 'createTable';\r\n","export const blotName = {\r\n  contain: 'contain',\r\n  tableWrapper: 'tableWrapper',\r\n  table: 'table',\r\n  tableColGroup: 'colgroup',\r\n  tableCol: 'col',\r\n  tableBody: 'tbody',\r\n  tableRow: 'tr',\r\n  tableCell: 'td',\r\n  tableCellInner: 'tableCellInner',\r\n};\r\nexport const moduleName = {\r\n  table: 'table',\r\n};\r\nexport const toolName = {\r\n  table: 'table',\r\n};\r\n","/* eslint-disable unused-imports/no-unused-vars */\r\nimport { CREATE_TABLE } from '../assets/const';\r\n\r\nexport const randomId = () => Math.random().toString(36).slice(2);\r\n\r\nlet zindex = 8000;\r\nexport const dialog = ({ child, target = document.body, beforeClose = () => { } } = {}) => {\r\n  const appendTo = target;\r\n  const dialog = document.createElement('div');\r\n  dialog.classList.add('dialog');\r\n  dialog.style.zIndex = zindex;\r\n  const overlay = document.createElement('div');\r\n  overlay.classList.add('dialog_overlay');\r\n  dialog.appendChild(overlay);\r\n  if (child) {\r\n    const content = document.createElement('div');\r\n    content.classList.add('dialog_content');\r\n    content.appendChild(child);\r\n    overlay.appendChild(content);\r\n    content.addEventListener('click', (e) => {\r\n      e.stopPropagation();\r\n    });\r\n  }\r\n\r\n  const originOverflow = getComputedStyle(appendTo).overflow;\r\n  appendTo.style.overflow = 'hidden';\r\n\r\n  appendTo.appendChild(dialog);\r\n  const close = () => {\r\n    try {\r\n      beforeClose();\r\n    } catch (error) {\r\n      console.error('Error in beforeClose:', error.message);\r\n    }\r\n    dialog.remove();\r\n    appendTo.style.overflow = originOverflow;\r\n  };\r\n  dialog.addEventListener('click', close);\r\n  zindex += 1;\r\n\r\n  return { dialog, close };\r\n};\r\n\r\n/**\r\n * 创建一个带 label 的输入框\r\n *\r\n * @param {string} label - The label for the input item.\r\n * @param {object} options - The options for the input item.\r\n * @param {string} options.type - The type of the input.\r\n * @param {string} options.value - The initial value of the input.\r\n * @param {number} options.max - The maximum value allowed for the input.\r\n * @param {number} options.min - The minimum value allowed for the input.\r\n * @return {object} An object containing the input item, the input element, and an error tip function.\r\n */\r\nexport const createInputItem = (label, options) => {\r\n  options.type || (options.type = 'text');\r\n  options.value || (options.value = '');\r\n\r\n  const inputItem = document.createElement('div');\r\n  inputItem.classList.add('input_item');\r\n\r\n  if (label) {\r\n    const inputLabel = document.createElement('span');\r\n    inputLabel.classList.add('input_label');\r\n    inputLabel.textContent = label;\r\n    inputItem.appendChild(inputLabel);\r\n  }\r\n\r\n  const inputInput = document.createElement('div');\r\n  inputInput.classList.add('input_input');\r\n  const input = document.createElement('input');\r\n  for (const key in options) {\r\n    input.setAttribute(key, options[key]);\r\n  }\r\n  if (options.max || options.min) {\r\n    input.addEventListener('blur', () => {\r\n      if (options.max && options.max <= input.value) {\r\n        input.value = options.max;\r\n      }\r\n      if (options.min && options.min >= input.value) {\r\n        input.value = options.min;\r\n      }\r\n    });\r\n  }\r\n\r\n  inputInput.appendChild(input);\r\n  inputItem.appendChild(inputInput);\r\n\r\n  input.addEventListener('focus', () => {\r\n    inputInput.classList.add('focus');\r\n  });\r\n  input.addEventListener('blur', () => {\r\n    inputInput.classList.remove('focus');\r\n  });\r\n\r\n  const errorTip = (msg) => {\r\n    if (inputInput.classList.contains('error')) {\r\n      inputInput.querySelector('.error_tip').textContent = msg;\r\n    }\r\n    else {\r\n      const errorTip = document.createElement('span');\r\n      errorTip.classList.add('error_tip');\r\n      errorTip.textContent = msg;\r\n      inputInput.appendChild(errorTip);\r\n    }\r\n\r\n    inputInput.classList.add('error');\r\n\r\n    const removeError = () => {\r\n      inputInput.classList.remove('error');\r\n      errorTip.remove();\r\n    };\r\n    return { removeError };\r\n  };\r\n\r\n  return { item: inputItem, input, errorTip };\r\n};\r\n\r\n/**\r\n * 创建具有指定行数和列数的表格\r\n *\r\n * @param {number} row - The number of rows for the table (optional, default: 3)\r\n * @param {number} col - The number of columns for the table (optional, default: 3)\r\n * @return {Promise} A promise that resolves with an object containing the row and column values when the table creation is confirmed, or rejects if the dialog is closed without confirmation.\r\n */\r\nexport const showTableCreator = async (row = 3, col = 3) => {\r\n  const box = document.createElement('div');\r\n  box.classList.add('create_box');\r\n  const inputContent = document.createElement('div');\r\n  inputContent.classList.add('create_input_content');\r\n\r\n  const {\r\n    item: rowItem,\r\n    input: rowInput,\r\n    errorTip: rowErrorTip,\r\n  } = createInputItem('row', { type: 'number', value: row, max: 99 });\r\n  const {\r\n    item: colItem,\r\n    input: colInput,\r\n    errorTip: colErrorTip,\r\n  } = createInputItem('col', { type: 'number', value: col, max: 99 });\r\n\r\n  inputContent.appendChild(rowItem);\r\n  inputContent.appendChild(colItem);\r\n  box.appendChild(inputContent);\r\n\r\n  const control = document.createElement('div');\r\n  control.classList.add('create_control');\r\n\r\n  const confirmBtn = document.createElement('button');\r\n  confirmBtn.classList.add('create_control_btn', 'confirm');\r\n  confirmBtn.textContent = 'Confirm';\r\n\r\n  const cancelBtn = document.createElement('button');\r\n  cancelBtn.classList.add('create_control_btn', 'cancel');\r\n  cancelBtn.textContent = 'Cancel';\r\n\r\n  control.appendChild(confirmBtn);\r\n  control.appendChild(cancelBtn);\r\n  box.appendChild(control);\r\n\r\n  return new Promise((resolve, reject) => {\r\n    const { close } = dialog({\r\n      child: box,\r\n      beforeClose: () => reject(new Error('Table creation was cancelled by the user'))\r\n    });\r\n\r\n    confirmBtn.addEventListener('click', async () => {\r\n      const row = Number(rowInput.value);\r\n      const col = Number(colInput.value);\r\n\r\n      if (Number.isNaN(row) || row <= 0) {\r\n        rowErrorTip('Invalid number');\r\n        return;\r\n      }\r\n      if (Number.isNaN(col) || col <= 0) {\r\n        colErrorTip('Invalid number');\r\n        return;\r\n      }\r\n      resolve({ row, col });\r\n      close();\r\n    });\r\n\r\n    cancelBtn.addEventListener('click', () => {\r\n      close(); // Bu, beforeClose'u tetikleyecek ve Promise'i reddedecek\r\n    });\r\n  });\r\n};\r\n\r\n/**\r\n * 显示表格选择器\r\n */\r\nexport const showTableSelector = (customButton) => {\r\n  const selectDom = document.createElement('div');\r\n  selectDom.classList.add('create_select');\r\n\r\n  const selectBlock = document.createElement('div');\r\n  selectBlock.classList.add('create_select_block');\r\n\r\n  for (let r = 0; r < 8; r++) {\r\n    for (let c = 0; c < 8; c++) {\r\n      const selectItem = document.createElement('div');\r\n      selectItem.classList.add('create_select_block_item');\r\n      selectItem.dataset.row = r + 1;\r\n      selectItem.dataset.col = c + 1;\r\n      selectBlock.appendChild(selectItem);\r\n    }\r\n  }\r\n\r\n  const selectCustom = document.createElement('div');\r\n  selectCustom.classList.add('create_select_custom');\r\n  selectCustom.textContent = customButton || '自定义行列数';\r\n\r\n  selectDom.appendChild(selectBlock);\r\n  selectDom.appendChild(selectCustom);\r\n\r\n  const sendTableData = ({ row, col }) => {\r\n    selectDom.dispatchEvent(new CustomEvent(CREATE_TABLE, { detail: { row: Number(row), col: Number(col) } }));\r\n  };\r\n  const updateSelectBlockItems = () => {\r\n    const { row, col } = selectDom.dataset;\r\n    Array.prototype.forEach.call(selectBlock.querySelectorAll('.active'), (item) => {\r\n      item.classList.remove('active');\r\n    });\r\n    if (!row || !col) return;\r\n    const childs = Array.from(selectBlock.children);\r\n    for (let i = 0; i < childs.length; i++) {\r\n      if (childs[i].dataset.row > row && childs[i].dataset.col > col) {\r\n        return;\r\n      }\r\n      if (childs[i].dataset.row <= row && childs[i].dataset.col <= col) {\r\n        childs[i].classList.add('active');\r\n      }\r\n      else {\r\n        childs[i].classList.remove('active');\r\n      }\r\n    }\r\n  };\r\n  selectBlock.addEventListener('mousemove', (e) => {\r\n    const { row, col } = e.target.dataset;\r\n    if (!row || !col) return;\r\n    selectDom.dataset.row = row;\r\n    selectDom.dataset.col = col;\r\n    updateSelectBlockItems();\r\n  });\r\n  selectBlock.addEventListener('mouseleave', (e) => {\r\n    delete selectDom.dataset.row;\r\n    delete selectDom.dataset.col;\r\n    updateSelectBlockItems();\r\n  });\r\n  selectBlock.addEventListener('click', () => {\r\n    const { row, col } = selectDom.dataset;\r\n    if (!row || !col) return;\r\n    sendTableData({ row, col });\r\n  });\r\n\r\n  selectCustom.addEventListener('click', () => {\r\n    showTableCreator()\r\n      .then(({ row, col }) => {\r\n        sendTableData({ row, col });\r\n      })\r\n      .catch(error => {\r\n        console.log('Table creation cancelled or failed:', error);\r\n        // Burada uygun bir hata işleme mekanizması ekleyebilirsiniz\r\n      });\r\n  });\r\n\r\n  return selectDom;\r\n};\r\n\r\nexport function css(domNode, rules) {\r\n  if (typeof rules === 'object') {\r\n    for (const prop in rules) {\r\n      domNode.style[prop] = rules[prop];\r\n    }\r\n  }\r\n}\r\nexport function isRectanglesIntersect(a, b, tolerance = 4) {\r\n  const { x: minAx, y: minAy, x1: maxAx, y1: maxAy } = a;\r\n  const { x: minBx, y: minBy, x1: maxBx, y1: maxBy } = b;\r\n  const notOverlapX = maxAx <= minBx + tolerance || minAx + tolerance >= maxBx;\r\n  const notOverlapY = maxAy <= minBy + tolerance || minAy + tolerance >= maxBy;\r\n  return !(notOverlapX || notOverlapY);\r\n}\r\n\r\nexport function getRelativeRect(targetRect, container) {\r\n  const containerRect = container.getBoundingClientRect();\r\n\r\n  return {\r\n    x: targetRect.x - containerRect.x - container.scrollLeft,\r\n    y: targetRect.y - containerRect.y - container.scrollTop,\r\n    x1: targetRect.x - containerRect.x - container.scrollLeft + targetRect.width,\r\n    y1: targetRect.y - containerRect.y - container.scrollTop + targetRect.height,\r\n    width: targetRect.width,\r\n    height: targetRect.height,\r\n  };\r\n}\r\n\r\n// Deprecated\r\nexport function computeBoundaryFromRects(startRect, endRect) {\r\n  const x = Math.min(startRect.x, endRect.x, startRect.x + startRect.width - 1, endRect.x + endRect.width - 1);\r\n  const x1 = Math.max(startRect.x, endRect.x, startRect.x + startRect.width - 1, endRect.x + endRect.width - 1);\r\n  const y = Math.min(startRect.y, endRect.y, startRect.y + startRect.height - 1, endRect.y + endRect.height - 1);\r\n  const y1 = Math.max(startRect.y, endRect.y, startRect.y + startRect.height - 1, endRect.y + endRect.height - 1);\r\n\r\n  const width = x1 - x;\r\n  const height = y1 - y;\r\n\r\n  return { x, x1, y, y1, width, height };\r\n}\r\n\r\nexport function findParentBlot(blot, targetBlotName) {\r\n  let target = blot.parent;\r\n  while (target && target.statics.blotName !== targetBlotName && target !== blot.scroll) {\r\n    target = target.parent;\r\n  }\r\n  if (target === blot.scroll) {\r\n    throw new Error(`${blot.statics.blotName} must be a child of ${targetBlotName}`);\r\n  }\r\n  return target;\r\n}\r\n\r\nexport function isString(val) {\r\n  return typeof val === 'string';\r\n}\r\nexport function isFunction(val) {\r\n  return typeof val === 'function';\r\n}\r\nexport function isUndefined(val) {\r\n  return val === undefined;\r\n}\r\nexport function isArray(val) {\r\n  return Array.isArray(val);\r\n}\r\n\r\nexport function debounce(func, wait) {\r\n  let timeout;\r\n  return function (...args) {\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(() => func.apply(this, args), wait);\r\n  };\r\n}\r\n\r\n\r\n","import { css, isArray, isFunction, isString } from '../utils';\r\nimport { moduleName } from '../assets/const';\r\n\r\nconst MENU_ITEMS_DEFAULT = {\r\n  insertColumnLeft: {\r\n    text: 'Sola sütun ekle',\r\n    handler() {\r\n      const tableModule = this.quill.getModule(moduleName.table);\r\n      tableModule.appendCol();\r\n      tableModule.hideTableTools();\r\n    },\r\n  },\r\n  insertColumnRight: {\r\n    text: 'Sağa sütun ekle',\r\n    handler() {\r\n      const tableModule = this.quill.getModule(moduleName.table);\r\n      tableModule.appendCol(true);\r\n      tableModule.hideTableTools();\r\n    },\r\n  },\r\n  insertRowTop: {\r\n    text: 'Üste satır ekle',\r\n    handler() {\r\n      const tableModule = this.quill.getModule(moduleName.table);\r\n      tableModule.appendRow();\r\n      tableModule.hideTableTools();\r\n    },\r\n  },\r\n  insertRowBottom: {\r\n    text: 'Alta satır ekle',\r\n    groupEnd: true,\r\n    handler() {\r\n      const tableModule = this.quill.getModule(moduleName.table);\r\n      tableModule.appendRow(true);\r\n      tableModule.hideTableTools();\r\n    },\r\n  },\r\n  removeCol: {\r\n    text: 'Sütunu sil',\r\n    handler() {\r\n      const tableModule = this.quill.getModule(moduleName.table);\r\n      tableModule.removeCol();\r\n      tableModule.hideTableTools();\r\n    },\r\n  },\r\n  removeRow: {\r\n    text: 'Satırı sil',\r\n    handler() {\r\n      const tableModule = this.quill.getModule(moduleName.table);\r\n      tableModule.removeRow();\r\n      tableModule.hideTableTools();\r\n    },\r\n  },\r\n  removeTable: {\r\n    text: 'Tabloyu sil',\r\n    groupEnd: true,\r\n    handler() {\r\n      const tableModule = this.quill.getModule(moduleName.table);\r\n      tableModule.removeTable();\r\n      tableModule.hideTableTools();\r\n    },\r\n  },\r\n  mergeCell: {\r\n    text: 'Hücreleri birleştir',\r\n    handler() {\r\n      const tableModule = this.quill.getModule(moduleName.table);\r\n      tableModule.mergeCells();\r\n      tableModule.hideTableTools();\r\n    },\r\n  },\r\n  splitCell: {\r\n    text: 'Hücreyi böl',\r\n    groupEnd: true,\r\n    handler() {\r\n      const tableModule = this.quill.getModule(moduleName.table);\r\n      tableModule.splitCell();\r\n      tableModule.hideTableTools();\r\n    },\r\n  },\r\n  setBackgroundColor: {\r\n    text: 'Arka plan rengini ayarla',\r\n    isColorChoose: true,\r\n    handler(color) {\r\n      const tableModule = this.quill.getModule(moduleName.table);\r\n      tableModule.setStyle({ backgroundColor: color }, this.selectedTds);\r\n    },\r\n  },\r\n  clearBackgroundColor: {\r\n    text: 'Arka plan rengini temizle',\r\n    handler() {\r\n      const tableModule = this.quill.getModule(moduleName.table);\r\n      tableModule.setStyle({ backgroundColor: null }, this.selectedTds);\r\n    },\r\n  },\r\n  setBorderColor: {\r\n    text: 'Kenarlık rengini ayarla',\r\n    isColorChoose: true,\r\n    handler(color) {\r\n      const tableModule = this.quill.getModule(moduleName.table);\r\n      tableModule.setStyle({ borderColor: color }, this.selectedTds);\r\n    },\r\n  },\r\n  clearBorderColor: {\r\n    text: 'Kenarlık rengini temizle',\r\n    handler() {\r\n      const tableModule = this.quill.getModule(moduleName.table);\r\n      tableModule.setStyle({ borderColor: null }, this.selectedTds);\r\n    },\r\n  },\r\n};\r\nconst MENU_MIN_HEIHGT = 150;\r\n\r\n/*\r\n  options = {\r\n    items: {\r\n      functionName: {\r\n        text: 'Görüntülenen metin',\r\n        handle() {},    // tetikleme olayı\r\n        iconSrc: string,    // ikon url'si\r\n        groupEnd: boolean, // ayırıcı çizgi göster\r\n        subTitle: 'Alt başlık göster',\r\n      }\r\n    }\r\n  }\r\n*/\r\nexport class TableOperationMenu {\r\n  constructor(params, quill, options = {}) {\r\n    this.table = params.table;\r\n    this.quill = quill;\r\n    this.options = options;\r\n    const tableModule = this.quill.getModule(moduleName.table);\r\n    this.tableSelection = tableModule.tableSelection;\r\n    this.menuItems = {};\r\n    this.mergeMenuItems();\r\n\r\n    this.boundary = this.tableSelection.boundary;\r\n    this.selectedTds = this.tableSelection.selectedTds;\r\n\r\n    this.destroyHandler = this.destroy.bind(this);\r\n    this.menuInitial(params);\r\n\r\n    document.addEventListener('click', this.destroyHandler, false);\r\n  }\r\n\r\n  mergeMenuItems() {\r\n    if (this.options?.replaceItems) {\r\n      this.menuItems = this.options?.items ?? {};\r\n    }\r\n    else if (this.options?.modifyItems) {\r\n      this.menuItems = this.modifyMenuItems(this.options?.items ?? {});\r\n    }\r\n    else {\r\n      this.menuItems = MENU_ITEMS_DEFAULT;\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Override the attributes of the context menu items\r\n     */\r\n  modifyMenuItems() {\r\n    if (!this.options?.modifyItems) return MENU_ITEMS_DEFAULT;\r\n    const newOptionsItems = { ...MENU_ITEMS_DEFAULT };\r\n    for (const [item, itemNewOptions] of Object.entries(this.options?.items)) {\r\n      newOptionsItems[item] = Object.assign({ ...newOptionsItems[item] }, itemNewOptions);\r\n    }\r\n    return newOptionsItems;\r\n  }\r\n\r\n  setMenuPosition({ left, top }) {\r\n    const containerRect = this.quill.container.getBoundingClientRect();\r\n    const menuRect = this.domNode.getBoundingClientRect();\r\n    let resLeft = left - containerRect.left;\r\n    let resTop = top - containerRect.top;\r\n    if (resLeft + menuRect.width > containerRect.width) {\r\n      resLeft = containerRect.width - menuRect.width;\r\n    }\r\n    if (resTop + menuRect.height > containerRect.height) {\r\n      resTop = containerRect.height - menuRect.height;\r\n    }\r\n    Object.assign(this.domNode.style, {\r\n      left: `${resLeft}px`,\r\n      top: `${resTop}px`,\r\n    });\r\n  }\r\n\r\n  menuInitial({ _table, _row, _cell, left, top }) {\r\n    this.domNode = document.createElement('div');\r\n    this.domNode.classList.add('ql-table-operation-menu');\r\n\r\n    css(this.domNode, {\r\n      'position': 'absolute',\r\n      'min-height': `${MENU_MIN_HEIHGT}px`,\r\n    });\r\n\r\n    for (const [name, item] of Object.entries(this.menuItems)) {\r\n      if (item.subTitle) {\r\n        this.domNode.appendChild(subTitleCreator(item.subTitle));\r\n      }\r\n\r\n      this.domNode.appendChild(this.menuItemCreator(Object.assign({}, MENU_ITEMS_DEFAULT[name], item)));\r\n\r\n      if (item.groupEnd) {\r\n        this.domNode.appendChild(dividingCreator());\r\n      }\r\n    }\r\n\r\n    this.quill.container.appendChild(this.domNode);\r\n    this.setMenuPosition({ left, top });\r\n    // create dividing line\r\n    function dividingCreator() {\r\n      const dividing = document.createElement('div');\r\n      dividing.classList.add('ql-table-operation-menu-dividing');\r\n      return dividing;\r\n    }\r\n\r\n    // create subtitle for menu\r\n    function subTitleCreator(title) {\r\n      const subTitle = document.createElement('div');\r\n      subTitle.classList.add('ql-table-operation-menu-subtitle');\r\n      subTitle.textContent = title;\r\n      return subTitle;\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    this.domNode.remove();\r\n    document.removeEventListener('click', this.destroyHandler, false);\r\n    return null;\r\n  }\r\n\r\n  menuItemCreator({ text, iconSrc, handler, isColorChoose }) {\r\n    const node = document.createElement(isColorChoose ? 'label' : 'div');\r\n    node.classList.add('ql-table-operation-menu-item');\r\n\r\n    if (iconSrc) {\r\n      const iconSpan = document.createElement('span');\r\n      iconSpan.classList.add('ql-table-operation-menu-icon');\r\n      iconSpan.innerHTML = iconSrc;\r\n      node.appendChild(iconSpan);\r\n    }\r\n\r\n    if (isString(text)) {\r\n      const textSpan = document.createElement('span');\r\n      textSpan.classList.add('ql-table-operation-menu-text');\r\n      textSpan.textContent = text;\r\n      node.appendChild(textSpan);\r\n    }\r\n    else if (isFunction(text)) {\r\n      let nodes = text.call(this);\r\n      if (!isArray(nodes)) {\r\n        nodes = [nodes];\r\n      }\r\n      nodes.map(sub => node.appendChild(sub));\r\n    }\r\n\r\n    // color choose handler will trigger when the color input event\r\n    if (isColorChoose) {\r\n      const input = document.createElement('input');\r\n      input.type = 'color';\r\n      Object.assign(input.style, {\r\n        width: 0,\r\n        height: 0,\r\n        padding: 0,\r\n        border: 0,\r\n      });\r\n      if (isFunction(handler)) {\r\n        node.addEventListener('click', e => e.stopPropagation());\r\n        input.addEventListener(\r\n          'input',\r\n          () => {\r\n            handler.call(this, input.value);\r\n          },\r\n          false,\r\n        );\r\n      }\r\n      node.appendChild(input);\r\n    }\r\n    else {\r\n      isFunction(handler) && node.addEventListener('click', handler.bind(this), false);\r\n    }\r\n    return node;\r\n  }\r\n}\r\n","import Quill from 'quill';\r\nimport { blotName } from '../assets/const';\r\n\r\nconst Container = Quill.import('blots/container');\r\nconst Parchment = Quill.import('parchment');\r\n\r\nclass ContainerFormat extends Container {\r\n  static create() {\r\n    const node = super.create();\r\n    return node;\r\n  }\r\n\r\n  insertBefore(blot, ref) {\r\n    if (blot.statics.blotName === this.statics.blotName) {\r\n      super.insertBefore(blot.children.head, ref);\r\n    }\r\n    else {\r\n      super.insertBefore(blot, ref);\r\n    }\r\n  }\r\n\r\n  format(name, value) {\r\n    this.children.tail.format(name, value);\r\n  }\r\n\r\n  replace(target) {\r\n    if (target.statics.blotName !== this.statics.blotName) {\r\n      const item = Parchment.create(this.statics.defaultChild);\r\n      target.moveChildren(item);\r\n      this.appendChild(item);\r\n    }\r\n    if (target.parent == null) return;\r\n    super.replace(target);\r\n  }\r\n}\r\n\r\nContainerFormat.blotName = blotName.contain;\r\nContainerFormat.tagName = 'contain';\r\nContainerFormat.scope = Parchment.Scope.BLOCK_BLOT;\r\nContainerFormat.defaultChild = 'block';\r\n\r\nexport { ContainerFormat };\r\n","import Quill from 'quill';\r\nimport { blotName } from '../assets/const';\r\nimport { findParentBlot } from '../utils';\r\nimport { ContainerFormat } from './ContainerFormat';\r\n\r\nconst Parchment = Quill.import('parchment');\r\n\r\nclass TableCellInnerFormat extends ContainerFormat {\r\n  static create(value) {\r\n    const { tableId, rowId, colId, rowspan, colspan, style } = value;\r\n    const node = super.create();\r\n    node.dataset.tableId = tableId;\r\n    node.dataset.rowId = rowId;\r\n    node.dataset.colId = colId;\r\n    node.dataset.rowspan = rowspan || 1;\r\n    node.dataset.colspan = colspan || 1;\r\n    node._style = style;\r\n    return node;\r\n  }\r\n\r\n  // 仅 Block 存在 cache, 存在 cache 时不会获取最新 delta, cache 还会保存父级 format(bubbleFormats 函数), 需要清除以获取最新 delta\r\n  clearDeltaCache() {\r\n    // eslint-disable-next-line unicorn/no-array-for-each\r\n    this.children.forEach((child) => {\r\n      child.cache = {};\r\n    });\r\n  }\r\n\r\n  get rowId() {\r\n    return this.domNode.dataset.rowId;\r\n  }\r\n\r\n  set rowId(value) {\r\n    this.parent && (this.parent.rowId = value);\r\n    this.domNode.dataset.rowId = value;\r\n  }\r\n\r\n  get colId() {\r\n    return this.domNode.dataset.colId;\r\n  }\r\n\r\n  set colId(value) {\r\n    this.parent && (this.parent.colId = value);\r\n    this.domNode.dataset.colId = value;\r\n  }\r\n\r\n  get rowspan() {\r\n    return Number(this.domNode.dataset.rowspan);\r\n  }\r\n\r\n  set rowspan(value) {\r\n    this.parent && (this.parent.rowspan = value);\r\n    this.domNode.dataset.rowspan = value;\r\n    this.clearDeltaCache();\r\n  }\r\n\r\n  get colspan() {\r\n    return Number(this.domNode.dataset.colspan);\r\n  }\r\n\r\n  set colspan(value) {\r\n    this.parent && (this.parent.colspan = value);\r\n    this.domNode.dataset.colspan = value;\r\n    this.clearDeltaCache();\r\n  }\r\n\r\n  get style() {\r\n    return this.parent.style;\r\n  }\r\n\r\n  set style(value) {\r\n    this.parent.style = value;\r\n    this.domNode._style = this.parent.style;\r\n    this.clearDeltaCache();\r\n  }\r\n\r\n  getColumnIndex() {\r\n    const table = findParentBlot(this, blotName.table);\r\n    return table.getColIds().indexOf(this.colId);\r\n  }\r\n\r\n  replace(target) {\r\n    if (target.statics.blotName !== this.statics.blotName) {\r\n      const cloneTarget = target.clone();\r\n      target.moveChildren(cloneTarget);\r\n      this.appendChild(cloneTarget);\r\n      target.parent.insertBefore(this, target.next);\r\n      target.remove();\r\n    }\r\n    else {\r\n      super.replace(target);\r\n    }\r\n  }\r\n\r\n  format(name, value) {\r\n    super.format(name, value);\r\n    this.clearDeltaCache();\r\n  }\r\n\r\n  formats() {\r\n    const { tableId, rowId, colId, rowspan, colspan } = this.domNode.dataset;\r\n    return {\r\n      [this.statics.blotName]: {\r\n        tableId,\r\n        rowId,\r\n        colId,\r\n        rowspan,\r\n        colspan,\r\n        style: this.domNode._style,\r\n      },\r\n    };\r\n  }\r\n\r\n  optimize() {\r\n    super.optimize();\r\n\r\n    const parent = this.parent;\r\n    // 父级非表格，则将当前 blot 放入表格中\r\n    const { tableId, colId, rowId, rowspan, colspan } = this.domNode.dataset;\r\n    if (parent != null && parent.statics.blotName !== blotName.tableCell) {\r\n      const mark = Parchment.create('block');\r\n\r\n      this.parent.insertBefore(mark, this.next);\r\n      const tableWrapper = Parchment.create(blotName.tableWrapper, tableId);\r\n      const table = Parchment.create(blotName.table, tableId);\r\n      const tableBody = Parchment.create(blotName.tableBody);\r\n      const tr = Parchment.create(blotName.tableRow, rowId);\r\n      const td = Parchment.create(blotName.tableCell, {\r\n        tableId,\r\n        rowId,\r\n        colId,\r\n        rowspan,\r\n        colspan,\r\n        style: this.domNode._style,\r\n      });\r\n\r\n      td.appendChild(this);\r\n      tr.appendChild(td);\r\n      tableBody.appendChild(tr);\r\n      table.appendChild(tableBody);\r\n      tableWrapper.appendChild(table);\r\n\r\n      tableWrapper.replace(mark);\r\n    }\r\n\r\n    const next = this.next;\r\n    // cell 下有多个 cellInner 全部合并\r\n    if (next != null && next.prev === this && next.statics.blotName === this.statics.blotName) {\r\n      next.moveChildren(this);\r\n      next.remove();\r\n    }\r\n  }\r\n}\r\n\r\nTableCellInnerFormat.blotName = blotName.tableCellInner;\r\nTableCellInnerFormat.tagName = 'p';\r\nTableCellInnerFormat.className = 'ql-table-cell-inner';\r\n\r\nexport { TableCellInnerFormat };\r\n","import Quill from 'quill';\r\nimport { blotName } from '../assets/const';\r\nimport { findParentBlot } from '../utils';\r\nimport { TableCellInnerFormat } from './TableCellInnerFormat';\r\n\r\nconst Container = Quill.import('blots/container');\r\nconst Parchment = Quill.import('parchment');\r\n\r\nclass TableRowFormat extends Container {\r\n  static create(value) {\r\n    const node = super.create();\r\n    node.dataset.rowId = value;\r\n    return node;\r\n  }\r\n\r\n  optimize() {\r\n    super.optimize();\r\n    const next = this.next;\r\n    if (\r\n      next != null\r\n      && next.prev === this\r\n      && next.statics.blotName === this.statics.blotName\r\n      && next.domNode.dataset.rowId === this.domNode.dataset.rowId\r\n    ) {\r\n      next.moveChildren(this);\r\n      next.remove();\r\n    }\r\n  }\r\n\r\n  get rowId() {\r\n    return this.domNode.dataset.rowId;\r\n  }\r\n\r\n  // insert cell at index\r\n  // return the minus skip column number\r\n  // [2, 3]. means next line should skip 2 columns. next next line skip 3 columns\r\n  insertCell(targetIndex, value) {\r\n    const skip = [];\r\n    const next = this.children.iterator();\r\n    let index = 0;\r\n    let cur;\r\n    while ((cur = next())) {\r\n      index += cur.colspan;\r\n      if (index > targetIndex) break;\r\n      if (cur.rowspan !== 1) {\r\n        for (let i = 0; i < cur.rowspan - 1; i++) {\r\n          skip[i] = (skip[i] || 0) + cur.colspan;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (cur && index - cur.colspan < targetIndex) {\r\n      const tableCell = cur.getCellInner();\r\n      tableCell.colspan += 1;\r\n      if (cur.rowspan !== 1) {\r\n        skip.skipRowNum = cur.rowspan - 1;\r\n      }\r\n    }\r\n    else {\r\n      const tableCell = Parchment.create(blotName.tableCell, value);\r\n      const tableCellInner = Parchment.create(blotName.tableCellInner, value);\r\n      const block = Parchment.create('block');\r\n      block.appendChild(Parchment.create('break'));\r\n      tableCellInner.appendChild(block);\r\n      tableCell.appendChild(tableCellInner);\r\n      this.insertBefore(tableCell, cur);\r\n    }\r\n    return skip;\r\n  }\r\n\r\n  getCellByColumIndex(stopIndex) {\r\n    const skip = [];\r\n    let cur;\r\n    let cellEndIndex = 0;\r\n    if (stopIndex < 0) return [cur, cellEndIndex, skip];\r\n    const next = this.children.iterator();\r\n    while ((cur = next())) {\r\n      cellEndIndex += cur.colspan;\r\n      if (cur.rowspan !== 1) {\r\n        for (let i = 0; i < cur.rowspan - 1; i++) {\r\n          skip[i] = (skip[i] || 0) + cur.colspan;\r\n        }\r\n      }\r\n      if (cellEndIndex > stopIndex) break;\r\n    }\r\n    return [cur, cellEndIndex, skip];\r\n  }\r\n\r\n  removeCell(targetIndex) {\r\n    if (targetIndex < 0) return [];\r\n    const [cur, index, skip] = this.getCellByColumIndex(targetIndex);\r\n    if (!cur) return skip;\r\n    if (index - cur.colspan < targetIndex || cur.colspan > 1) {\r\n      const [tableCell] = cur.descendants(TableCellInnerFormat);\r\n\r\n      if (cur.colspan !== 1 && targetIndex === index - cur.colspan) {\r\n        // if delete index is cell start index. update cell colId to next colId\r\n        const tableBlot = findParentBlot(this, blotName.table);\r\n        const colIds = tableBlot.getColIds();\r\n        tableCell.colId = colIds[colIds.indexOf(tableCell.colId) + 1];\r\n      }\r\n      if (cur.rowspan !== 1) {\r\n        skip.skipRowNum = cur.rowspan - 1;\r\n      }\r\n\r\n      tableCell.colspan -= 1;\r\n    }\r\n    else {\r\n      cur.remove();\r\n    }\r\n    return skip;\r\n  }\r\n\r\n  foreachCellInner(func) {\r\n    const next = this.children.iterator();\r\n    let i = 0;\r\n    let cur;\r\n    while ((cur = next())) {\r\n      const [tableCell] = cur.descendants(TableCellInnerFormat);\r\n      if (func(tableCell, i++)) break;\r\n    }\r\n  }\r\n}\r\n\r\nTableRowFormat.blotName = blotName.tableRow;\r\nTableRowFormat.tagName = 'tr';\r\nTableRowFormat.className = 'ql-table-row';\r\nTableRowFormat.scope = Parchment.Scope.BLOCK_BLOT;\r\n\r\nexport { TableRowFormat };\r\n","import Quill from 'quill';\r\nimport { blotName } from '../assets/const';\r\nimport { findParentBlot, randomId } from '../utils';\r\nimport { TableRowFormat } from './TableRowFormat';\r\n\r\nconst Container = Quill.import('blots/container');\r\nconst Parchment = Quill.import('parchment');\r\n\r\nclass TableBodyFormat extends Container {\r\n  optimize() {\r\n    super.optimize();\r\n    const next = this.next;\r\n    if (\r\n      next != null\r\n      && next.prev === this\r\n      && next.statics.blotName === this.statics.blotName\r\n      && next.domNode.tagName === this.domNode.tagName\r\n    ) {\r\n      next.moveChildren(this);\r\n      next.remove();\r\n    }\r\n  }\r\n\r\n  deleteAt(index, length) {\r\n    if (index === 0 && length === this.length()) {\r\n      return this.parent.remove();\r\n    }\r\n    this.children.forEachAt(index, length, (child, offset, length) => {\r\n      child.deleteAt(offset, length);\r\n    });\r\n  }\r\n\r\n  // insert row at index\r\n  insertRow(targetIndex) {\r\n    const tableBlot = findParentBlot(this, blotName.table);\r\n    if (!tableBlot) return;\r\n    // get all column id. exclude the columns of the target index row with rowspan\r\n    const colIds = tableBlot.getColIds();\r\n    const rows = this.descendants(TableRowFormat);\r\n    const insertColIds = new Set(colIds);\r\n    let index = 0;\r\n    for (const row of rows) {\r\n      if (index === targetIndex) break;\r\n      row.foreachCellInner((cell) => {\r\n        if (index + cell.rowspan > targetIndex) {\r\n          cell.rowspan += 1;\r\n          insertColIds.delete(cell.colId);\r\n          // colspan cell need remove all includes colId\r\n          if (cell.colspan !== 1) {\r\n            const colIndex = colIds.indexOf(cell.colId);\r\n            for (let i = 0; i < cell.colspan - 1; i++) {\r\n              insertColIds.delete(colIds[colIndex + i + 1]);\r\n            }\r\n          }\r\n        }\r\n      });\r\n      index += 1;\r\n    }\r\n    // append new row\r\n    const rowId = randomId();\r\n    const tr = Parchment.create(blotName.tableRow, rowId);\r\n    for (const colId of insertColIds) {\r\n      const td = Parchment.create(blotName.tableCell, {\r\n        rowId,\r\n        colId,\r\n        rowspan: 1,\r\n        colspan: 1,\r\n      });\r\n      const tdInner = Parchment.create(blotName.tableCellInner, {\r\n        tableId: tableBlot.tableId,\r\n        rowId,\r\n        colId,\r\n        rowspan: 1,\r\n        colspan: 1,\r\n      });\r\n      const block = Parchment.create('block');\r\n      block.appendChild(Parchment.create('break'));\r\n      tdInner.appendChild(block);\r\n      td.appendChild(tdInner);\r\n      tr.appendChild(td);\r\n    }\r\n    this.insertBefore(tr, rows[targetIndex] || null);\r\n  }\r\n}\r\nTableBodyFormat.blotName = blotName.tableBody;\r\nTableBodyFormat.tagName = 'tbody';\r\nTableBodyFormat.scope = Parchment.Scope.BLOCK_BLOT;\r\n\r\nexport { TableBodyFormat };\r\n","import Quill from 'quill';\r\nimport { blotName } from '../assets/const';\r\nimport { findParentBlot } from '../utils';\r\nimport { TableCellInnerFormat } from './TableCellInnerFormat';\r\n\r\nconst Parchment = Quill.import('parchment');\r\nconst Container = Quill.import('blots/container');\r\n\r\nclass TableCellFormat extends Container {\r\n  static create(value) {\r\n    const { rowId, colId, rowspan, colspan, style } = value;\r\n    const node = super.create();\r\n    node.dataset.rowId = rowId;\r\n    node.dataset.colId = colId;\r\n    node.setAttribute('rowspan', rowspan || 1);\r\n    node.setAttribute('colspan', colspan || 1);\r\n    node.style.cssText = style;\r\n    return node;\r\n  }\r\n\r\n  get rowId() {\r\n    return this.domNode.dataset.rowId;\r\n  }\r\n\r\n  set rowId(value) {\r\n    this.domNode.dataset.rowId = value;\r\n  }\r\n\r\n  get colId() {\r\n    return this.domNode.dataset.colId;\r\n  }\r\n\r\n  set colId(value) {\r\n    this.domNode.dataset.colId = value;\r\n  }\r\n\r\n  get rowspan() {\r\n    return Number(this.domNode.getAttribute('rowspan'));\r\n  }\r\n\r\n  set rowspan(value) {\r\n    this.domNode.setAttribute('rowspan', value);\r\n  }\r\n\r\n  get colspan() {\r\n    return Number(this.domNode.getAttribute('colspan'));\r\n  }\r\n\r\n  set colspan(value) {\r\n    this.domNode.setAttribute('colspan', value);\r\n  }\r\n\r\n  get style() {\r\n    return this.domNode.style.cssText;\r\n  }\r\n\r\n  set style(value) {\r\n    Object.assign(this.domNode.style, value);\r\n  }\r\n\r\n  getCellInner() {\r\n    return this.descendants(TableCellInnerFormat)[0];\r\n  }\r\n\r\n  optimize() {\r\n    super.optimize();\r\n    const { colId, rowId, colspan, rowspan } = this.domNode.dataset;\r\n\r\n    // td need only child tableCellInner. but for MutationObserver. tableCell need allow break\r\n    // make sure tableCellInner is only child\r\n    const tableBlot = findParentBlot(this, blotName.table);\r\n    const cellInner = this.getCellInner();\r\n    if (!cellInner) {\r\n      // eslint-disable-next-line unicorn/no-array-for-each\r\n      this.children.forEach((child) => {\r\n        child.remove();\r\n      });\r\n      const tableCellInner = Parchment.create(blotName.tableCellInner, {\r\n        tableId: tableBlot.tableId,\r\n        rowId,\r\n        colId,\r\n        colspan: colspan || 1,\r\n        rowspan: rowspan || 1,\r\n      });\r\n      const block = Parchment.create('block');\r\n      block.appendChild(Parchment.create('break'));\r\n      tableCellInner.appendChild(block);\r\n      this.appendChild(tableCellInner);\r\n    }\r\n\r\n    const next = this.next;\r\n    if (\r\n      next != null\r\n      && next.prev === this\r\n      && next.statics.blotName === this.statics.blotName\r\n      && next.domNode.dataset.rowId === rowId\r\n      && next.domNode.dataset.colId === colId\r\n    ) {\r\n      next.moveChildren(this);\r\n      next.remove();\r\n    }\r\n  }\r\n\r\n  deleteAt(index, length) {\r\n    if (index === 0 && length === this.length()) {\r\n      const cell = this.next || this.prev;\r\n      const cellInner = cell && cell.getCellInner();\r\n      if (cellInner) {\r\n        cellInner.colspan += this.colspan;\r\n      }\r\n      return this.remove();\r\n    }\r\n    this.children.forEachAt(index, length, (child, offset, length) => {\r\n      child.deleteAt(offset, length);\r\n    });\r\n  }\r\n}\r\n\r\nTableCellFormat.blotName = blotName.tableCell;\r\nTableCellFormat.tagName = 'td';\r\nTableCellFormat.className = 'ql-table-cell';\r\nTableCellFormat.scope = Parchment.Scope.BLOCK_BLOT;\r\n\r\nexport { TableCellFormat };\r\n","import Quill from 'quill';\r\nimport { blotName } from '../assets/const';\r\nimport { ContainerFormat } from './ContainerFormat';\r\n\r\nconst Parchment = Quill.import('parchment');\r\n\r\nclass TableColFormat extends ContainerFormat {\r\n  static create(value) {\r\n    const { width, tableId, colId, full } = value;\r\n    const node = super.create();\r\n    node.setAttribute('width', `${Number.parseFloat(width)}${full ? '%' : 'px'}`);\r\n    full && (node.dataset.full = full);\r\n    node.dataset.tableId = tableId;\r\n    node.dataset.colId = colId;\r\n    node.setAttribute('contenteditable', false);\r\n    return node;\r\n  }\r\n\r\n  get width() {\r\n    const width = this.domNode.getAttribute('width');\r\n    return Number.parseFloat(width);\r\n  }\r\n\r\n  set width(value) {\r\n    const width = Number.parseFloat(value);\r\n    return this.domNode.setAttribute('width', `${width}${this.full ? '%' : 'px'}`);\r\n  }\r\n\r\n  get colId() {\r\n    return this.domNode.dataset.colId;\r\n  }\r\n\r\n  get full() {\r\n    return Object.hasOwn(this.domNode.dataset, 'full');\r\n  }\r\n\r\n  formats() {\r\n    const { tableId, colId } = this.domNode.dataset;\r\n    return {\r\n      [this.statics.blotName]: {\r\n        tableId,\r\n        colId,\r\n        width: this.domNode.getAttribute('width'),\r\n        full: Object.hasOwn(this.domNode.dataset, 'full'),\r\n      },\r\n    };\r\n  }\r\n\r\n  optimize() {\r\n    super.optimize();\r\n\r\n    const parent = this.parent;\r\n    if (parent != null && parent.statics.blotName !== blotName.tableColGroup) {\r\n      const mark = Parchment.create('block');\r\n      this.parent.insertBefore(mark, this.next);\r\n\r\n      const tableWrapper = Parchment.create(blotName.tableWrapper, this.domNode.dataset.tableId);\r\n      const table = Parchment.create(blotName.table, this.domNode.dataset.tableId);\r\n\r\n      this.full && (table.full = true);\r\n\r\n      const tableColgroup = Parchment.create(blotName.tableColGroup);\r\n\r\n      tableColgroup.appendChild(this);\r\n      table.appendChild(tableColgroup);\r\n      tableWrapper.appendChild(table);\r\n\r\n      tableWrapper.replace(mark);\r\n    }\r\n    const next = this.next;\r\n    const { tableId: ttableId, colId: tcolId } = this.domNode.dataset;\r\n    if (\r\n      next != null\r\n      && next.statics.blotName === this.statics.blotName\r\n      && next.domNode.tagName === this.domNode.tagName\r\n      && next.domNode.dataset.tableId === ttableId\r\n      && next.domNode.dataset.colId === tcolId\r\n    ) {\r\n      next.moveChildren(this);\r\n      next.remove();\r\n    }\r\n  }\r\n}\r\nTableColFormat.blotName = blotName.tableCol;\r\nTableColFormat.tagName = 'col';\r\nTableColFormat.scope = Parchment.Scope.BLOCK_BLOT;\r\n\r\nexport { TableColFormat };\r\n","import Quill from 'quill';\r\nimport { blotName } from '../assets/const';\r\nimport { TableRowFormat } from './TableRowFormat';\r\nimport { TableColFormat } from './TableColFormat';\r\n\r\nconst Container = Quill.import('blots/container');\r\nconst Parchment = Quill.import('parchment');\r\n\r\nclass TableFormat extends Container {\r\n  constructor(domNode, value) {\r\n    super(domNode, value);\r\n\r\n    this.formatTableWidth();\r\n  }\r\n\r\n  static create(value) {\r\n    const node = super.create();\r\n\r\n    node.dataset.tableId = value;\r\n    node.classList.add('ql-table');\r\n    node.setAttribute('cellpadding', 0);\r\n    node.setAttribute('cellspacing', 0);\r\n\r\n    return node;\r\n  }\r\n\r\n  colWidthFillTable() {\r\n    if (this.full) return;\r\n    const cols = this.descendants(TableColFormat);\r\n    if (!cols) return;\r\n    const colsWidth = cols.reduce((sum, col) => col.width + sum, 0);\r\n    if (colsWidth === 0 || Number.isNaN(colsWidth) || this.full) return null;\r\n    this.domNode.style.width = `${colsWidth}px`;\r\n    return colsWidth;\r\n  }\r\n\r\n  formatTableWidth() {\r\n    setTimeout(() => {\r\n      this.colWidthFillTable();\r\n    }, 0);\r\n  }\r\n\r\n  get tableId() {\r\n    return this.domNode.dataset.tableId;\r\n  }\r\n\r\n  get full() {\r\n    return Object.hasOwn(this.domNode.dataset, 'full');\r\n  }\r\n\r\n  set full(value) {\r\n    this.domNode[value ? 'setAttribute' : 'removeAttribute']('data-full', '');\r\n  }\r\n\r\n  getRows() {\r\n    return this.descendants(TableRowFormat);\r\n  }\r\n\r\n  getRowIds() {\r\n    return this.getRows().map(d => d.rowId);\r\n  }\r\n\r\n  getCols() {\r\n    return this.descendants(TableColFormat);\r\n  }\r\n\r\n  getColIds() {\r\n    return this.getCols().map(d => d.colId);\r\n  }\r\n\r\n  optimize() {\r\n    super.optimize();\r\n    const next = this.next;\r\n    if (\r\n      next != null\r\n      && next.prev === this\r\n      && next.statics.blotName === this.statics.blotName\r\n      && next.domNode.tagName === this.domNode.tagName\r\n      && next.domNode.dataset.tableId === this.domNode.dataset.tableId\r\n    ) {\r\n      next.moveChildren(this);\r\n      next.remove();\r\n    }\r\n  }\r\n}\r\n\r\nTableFormat.blotName = blotName.table;\r\nTableFormat.tagName = 'table';\r\nTableFormat.scope = Parchment.Scope.BLOCK_BLOT;\r\n\r\nexport { TableFormat };\r\n","import Quill from 'quill';\r\nimport { CELL_MIN_PRE, blotName } from '../assets/const';\r\nimport { TableFormat } from './TableFormat';\r\n\r\nconst Container = Quill.import('blots/container');\r\nconst Parchment = Quill.import('parchment');\r\n\r\nclass TableColgroupFormat extends Container {\r\n  optimize() {\r\n    super.optimize();\r\n    const next = this.next;\r\n    if (\r\n      next != null\r\n      && next.prev === this\r\n      && next.statics.blotName === this.statics.blotName\r\n      && next.domNode.tagName === this.domNode.tagName\r\n    ) {\r\n      next.moveChildren(this);\r\n      next.remove();\r\n    }\r\n  }\r\n\r\n  deleteAt(index, length) {\r\n    if (index === 0 && length === this.length()) {\r\n      return this.parent.remove();\r\n    }\r\n    this.children.forEachAt(index, length, (child, offset, length) => {\r\n      child.deleteAt(offset, length);\r\n    });\r\n  }\r\n\r\n  findCol(index) {\r\n    const next = this.children.iterator();\r\n    let i = 0;\r\n    let cur;\r\n    while ((cur = next())) {\r\n      if (i === index) {\r\n        break;\r\n      }\r\n      i++;\r\n    }\r\n    return cur;\r\n  }\r\n\r\n  insertColByIndex(index, value) {\r\n    const table = this.parent;\r\n    if (!(table instanceof TableFormat)) {\r\n      throw new TypeError('TableColgroupFormat should be child of TableFormat');\r\n    }\r\n    const col = this.findCol(index);\r\n    const tableCellInner = Parchment.create(blotName.tableCol, value);\r\n    if (table.full) {\r\n    // TODO: first minus column should be near by\r\n      const next = this.children.iterator();\r\n      let cur;\r\n      while ((cur = next())) {\r\n        if (cur.width - tableCellInner.width >= CELL_MIN_PRE) {\r\n          cur.width -= tableCellInner.width;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    this.insertBefore(tableCellInner, col);\r\n  }\r\n\r\n  removeColByIndex(index) {\r\n    const table = this.parent;\r\n    if (!(table instanceof TableFormat)) {\r\n      throw new TypeError('TableColgroupFormat should be child of TableFormat');\r\n    }\r\n    const col = this.findCol(index);\r\n    if (col.next) {\r\n      col.next.width += col.width;\r\n    }\r\n    else if (col.prev) {\r\n      col.prev.width += col.width;\r\n    }\r\n    col.remove();\r\n  }\r\n}\r\nTableColgroupFormat.blotName = blotName.tableColGroup;\r\nTableColgroupFormat.tagName = 'colgroup';\r\nTableColgroupFormat.scope = Parchment.Scope.BLOCK_BLOT;\r\n\r\nexport { TableColgroupFormat };\r\n","// col 最小百分比宽度\r\nexport const CELL_MIN_PRE = 3;\r\n// col 最小 px 宽度\r\nexport const CELL_MIN_WIDTH = 26;\r\n","import Quill from 'quill';\r\nimport { blotName } from '../assets/const';\r\n\r\nconst Container = Quill.import('blots/container');\r\nconst Parchment = Quill.import('parchment');\r\n\r\nclass TableWrapperFormat extends Container {\r\n  static create(value) {\r\n    const node = super.create();\r\n\r\n    node.dataset.tableId = value;\r\n\r\n    node.addEventListener(\r\n      'dragstart',\r\n      (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n      },\r\n      true,\r\n    );\r\n    // 不允许拖拽进 table\r\n    node.addEventListener('drop', (e) => {\r\n      e.preventDefault();\r\n    });\r\n    // 修改拖拽进入时的鼠标样式\r\n    node.addEventListener('dragover', (e) => {\r\n      e.preventDefault();\r\n      e.dataTransfer.dropEffect = 'none';\r\n    });\r\n    return node;\r\n  }\r\n\r\n  get tableId() {\r\n    return this.domNode.dataset.tableId;\r\n  }\r\n\r\n  insertBefore(blot, ref) {\r\n    if (blot.statics.blotName === this.statics.blotName) {\r\n      // 合并\r\n      super.insertBefore(blot.children.head, ref);\r\n    }\r\n    else if (this.statics.allowedChildren.some(child => child.blotName === blot.statics.blotName)) {\r\n      // 允许子 blot\r\n      super.insertBefore(blot, ref);\r\n    }\r\n    else {\r\n      // 非允许子 blot, ref 为 null 是插入头, 否则插入尾\r\n      if (ref) {\r\n        this.prev ? this.prev.insertBefore(blot, null) : this.parent.insertBefore(blot, this);\r\n      }\r\n      else {\r\n        this.next ? this.next.insertBefore(blot, ref) : this.parent.appendChild(blot);\r\n      }\r\n    }\r\n  }\r\n\r\n  optimize() {\r\n    super.optimize();\r\n    const next = this.next;\r\n    if (\r\n      next != null\r\n      && next.prev === this\r\n      && next.statics.blotName === this.statics.blotName\r\n      && next.domNode.tagName === this.domNode.tagName\r\n      && next.domNode.dataset.tableId === this.domNode.dataset.tableId\r\n    ) {\r\n      next.moveChildren(this);\r\n      next.remove();\r\n    }\r\n  }\r\n\r\n  deleteAt(index, length) {\r\n    super.deleteAt(index, length);\r\n    // 删除 table 时隐藏当前 table 的 tooltip\r\n    document.querySelector(`.ql-table-tooltip[data-table-id=\"${this.tableId}\"]`)?.classList?.add('ql-hidden');\r\n  }\r\n}\r\nTableWrapperFormat.blotName = blotName.tableWrapper;\r\nTableWrapperFormat.tagName = 'p';\r\nTableWrapperFormat.className = 'ql-table-wrapper';\r\nTableWrapperFormat.scope = Parchment.Scope.BLOCK_BLOT;\r\n\r\nexport { TableWrapperFormat };\r\n","import Quill from 'quill';\r\nimport { blotName } from '../../assets/const';\r\n\r\nconst Parchment = Quill.import('parchment');\r\nconst ListItem = Quill.import('formats/list/item');\r\n\r\nclass ListItemRewrite extends ListItem {\r\n  replaceWith(name, value) {\r\n    this.parent.isolate(this.offset(this.parent), this.length());\r\n    if (name === this.parent.statics.blotName) {\r\n      this.parent.replaceWith(name, value);\r\n      return this;\r\n    }\r\n    else {\r\n      if (name === blotName.tableCellInner) {\r\n        const replacement = typeof name === 'string' ? Parchment.create(name, value) : name;\r\n        replacement.replace(this.parent);\r\n        this.attributes.copy(replacement);\r\n        return replacement;\r\n      }\r\n      return super.replaceWith(name, value);\r\n    }\r\n  }\r\n}\r\nexport { ListItemRewrite };\r\n","// 以 ql-better-table 的 table-selection.js 为修改基础\r\n\r\nimport Quill from 'quill';\r\nimport { TableCellFormat } from '../format';\r\nimport { css, getRelativeRect, isRectanglesIntersect } from '../utils';\r\n\r\nlet PRIMARY_COLOR = '#0589f3';\r\nconst ERROR_LIMIT = 2;\r\n\r\n/*\r\n  options = {\r\n    primaryColor: Hex color code\r\n  }\r\n*/\r\nexport class TableSelection {\r\n  constructor(table, quill, options = {}) {\r\n    this.table = table;\r\n    this.quill = quill;\r\n    this.options = options;\r\n    this.optionsMerge();\r\n    if (!table) return null;\r\n\r\n    this.startScrollX = 0;\r\n    this.boundary = {};\r\n    // 选中的 cell\r\n    this.selectedTds = [];\r\n    this.dragging = false;\r\n    this.selectingHandler = this.mouseDownHandler.bind(this);\r\n    this.cellSelect = null; // selection 显示边框\r\n    this.scrollHandler = [];\r\n    this.helpLinesInitial();\r\n\r\n    const resizeObserver = new ResizeObserver(() => {\r\n      this.hideSelection();\r\n    });\r\n    resizeObserver.observe(this.quill.root);\r\n\r\n    this.quill.root.addEventListener('mousedown', this.selectingHandler, false);\r\n    this.closeHandler = this.hideSelection.bind(this);\r\n    this.quill.on(Quill.events.TEXT_CHANGE, this.closeHandler);\r\n  }\r\n\r\n  optionsMerge() {\r\n    this.options?.primaryColor && (PRIMARY_COLOR = this.options.primaryColor);\r\n  }\r\n\r\n  addScrollEvent(dom, handle) {\r\n    dom.addEventListener('scroll', handle);\r\n    this.scrollHandler.push([dom, handle]);\r\n  }\r\n\r\n  clearScrollEvent() {\r\n    for (let i = 0; i < this.scrollHandler.length; i++) {\r\n      const [dom, handle] = this.scrollHandler[i];\r\n      dom.removeEventListener('scroll', handle);\r\n    }\r\n    this.scrollHandler = [];\r\n  }\r\n\r\n  // 初始化边框 dom\r\n  helpLinesInitial() {\r\n    this.cellSelect = this.quill.addContainer('ql-table-selection_line');\r\n    css(this.cellSelect, {\r\n      'border-color': PRIMARY_COLOR,\r\n    });\r\n  }\r\n\r\n  // TODO: preventDefault select\r\n  mouseDownHandler(mousedownEvent) {\r\n    const { button, target, clientX, clientY } = mousedownEvent;\r\n    const closestTable = target.closest('.ql-table');\r\n    if (button !== 0 || !closestTable) return;\r\n\r\n    const startTableId = closestTable.dataset.tableId;\r\n    const startPoint = { x: clientX, y: clientY };\r\n    this.startScrollX = this.table.parentNode.scrollLeft;\r\n    this.selectedTds = this.computeSelectedTds(startPoint, startPoint);\r\n    this.showSelection();\r\n\r\n    const mouseMoveHandler = (mousemoveEvent) => {\r\n      const { button, target, clientX, clientY } = mousemoveEvent;\r\n      if (this.selectedTds.length > 1) {\r\n        mousemoveEvent.preventDefault();\r\n      }\r\n      const closestTable = target.closest('.ql-table');\r\n      if (\r\n        button !== 0\r\n        || !closestTable\r\n        || closestTable.dataset.tableId !== startTableId\r\n      ) {\r\n        return;\r\n      }\r\n\r\n      this.dragging = true;\r\n      const movePoint = { x: clientX, y: clientY };\r\n      this.selectedTds = this.computeSelectedTds(startPoint, movePoint);\r\n      if (this.selectedTds.length > 1) {\r\n        this.quill.blur();\r\n      }\r\n      this.updateSelection();\r\n    };\r\n    const mouseUpHandler = () => {\r\n      document.body.removeEventListener('mousemove', mouseMoveHandler, false);\r\n      document.body.removeEventListener('mouseup', mouseUpHandler, false);\r\n      this.dragging = false;\r\n    };\r\n\r\n    document.body.addEventListener('mousemove', mouseMoveHandler, false);\r\n    document.body.addEventListener('mouseup', mouseUpHandler, false);\r\n  }\r\n\r\n  computeSelectedTds(startPoint, endPoint) {\r\n    // Use TableCell to calculation selected range, because TableCellInner is scrollable, the width will effect calculate\r\n    const tableContainer = Quill.find(this.table);\r\n    if (!tableContainer) return [];\r\n    const tableCells = new Set(tableContainer.descendants(TableCellFormat));\r\n\r\n    // set boundary to initially mouse move rectangle\r\n    let boundary = {\r\n      x: Math.min(endPoint.x, startPoint.x),\r\n      y: Math.min(endPoint.y, startPoint.y),\r\n      x1: Math.max(endPoint.x, startPoint.x),\r\n      y1: Math.max(endPoint.y, startPoint.y),\r\n    };\r\n    const selectedCells = new Set();\r\n    let findEnd = true;\r\n    // loop all cells to find correct boundary\r\n    while (findEnd) {\r\n      findEnd = false;\r\n      for (const cell of tableCells) {\r\n        if (!cell.__rect) {\r\n          cell.__rect = cell.domNode.getBoundingClientRect();\r\n        }\r\n        // Determine whether the cell intersects with the current boundary\r\n        const { x, y, right, bottom } = cell.__rect;\r\n        if (isRectanglesIntersect(boundary, { x, y, x1: right, y1: bottom }, ERROR_LIMIT)) {\r\n          // add cell to selected\r\n          selectedCells.add(cell);\r\n          tableCells.delete(cell);\r\n          // update boundary\r\n          boundary = {\r\n            x: Math.min(boundary.x, x),\r\n            y: Math.min(boundary.y, y),\r\n            x1: Math.max(boundary.x1, right),\r\n            y1: Math.max(boundary.y1, bottom),\r\n          };\r\n          // recalculate boundary last cells\r\n          findEnd = true;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    for (const cell of [...selectedCells, ...tableCells]) {\r\n      delete cell.__rect;\r\n    }\r\n    // save result boundary relative to the editor\r\n    this.boundary = getRelativeRect({\r\n      ...boundary,\r\n      width: boundary.x1 - boundary.x,\r\n      height: boundary.y1 - boundary.y,\r\n    }, this.quill.root.parentNode);\r\n    return Array.from(selectedCells).map(cell => cell.getCellInner());\r\n  }\r\n\r\n  updateSelection() {\r\n    if (this.selectedTds.length === 0) return;\r\n    const tableViewScrollLeft = this.table.parentNode.scrollLeft;\r\n    const scrollTop = this.quill.root.parentNode.scrollTop;\r\n\r\n    css(this.cellSelect, {\r\n      left: `${this.boundary.x + (this.startScrollX - tableViewScrollLeft) - 1}px`,\r\n      top: `${scrollTop * 2 + this.boundary.y}px`,\r\n      width: `${this.boundary.width + 1}px`,\r\n      height: `${this.boundary.height + 1}px`,\r\n    });\r\n  }\r\n\r\n  showSelection() {\r\n    this.clearScrollEvent();\r\n\r\n    css(this.cellSelect, { display: 'block' });\r\n    this.updateSelection();\r\n\r\n    this.addScrollEvent(this.table.parentNode, () => {\r\n      this.updateSelection();\r\n    });\r\n    const srcollHide = () => {\r\n      this.hideSelection();\r\n      this.quill.root.removeEventListener('scroll', srcollHide);\r\n    };\r\n    this.addScrollEvent(this.quill.root, srcollHide);\r\n  }\r\n\r\n  hideSelection() {\r\n    this.boundary = {};\r\n    this.selectedTds = [];\r\n\r\n    this.cellSelect && css(this.cellSelect, {\r\n      display: 'none',\r\n    });\r\n    this.clearScrollEvent();\r\n  }\r\n\r\n  destroy() {\r\n    this.hideSelection();\r\n    this.cellSelect.remove();\r\n    this.cellSelect = null;\r\n    this.clearScrollEvent();\r\n\r\n    this.quill.root.removeEventListener('mousedown', this.selectingHandler, false);\r\n    this.quill.off(Quill.events.TEXT_CHANGE, this.closeHandler);\r\n    return null;\r\n  }\r\n}\r\n","/* eslint-disable unused-imports/no-unused-vars */\r\nimport Quill from 'quill';\r\nimport { TableWrapperFormat } from '../format';\r\nimport { css } from '../utils';\r\nimport { CELL_MIN_PRE, CELL_MIN_WIDTH, blotName, toolName } from '../assets/const';\r\n\r\nlet TIP_HEIGHT = 12;\r\n/*\r\n  options = {\r\n    tipHeight: 12,  // tooltip height\r\n    disableToolNames: [],   // 表格内禁用项， toolbar 的 name\r\n  }\r\n*/\r\nexport class TableTooltip {\r\n  constructor(quill, options = {}) {\r\n    this.quill = quill;\r\n    this.options = options;\r\n    this.optionsMerge();\r\n\r\n    this.tableDisableToolHandlers = {};\r\n    this.tableWrapper = null;\r\n    this.table = null;\r\n    this.curTableId = '';\r\n    this.focusTableChange = false;\r\n    this.tableCols = [];\r\n    this.scrollHandler = [];\r\n\r\n    this.root = this.quill.addContainer('ql-table-tooltip');\r\n    this.root.style.height = `${TIP_HEIGHT}px`;\r\n\r\n    const resizeObserver = new ResizeObserver((entries) => {\r\n      this.hide();\r\n      this.focusTableChange = true;\r\n      this.curTableId = '';\r\n    });\r\n    resizeObserver.observe(this.quill.root);\r\n\r\n    this.isMobile = 'ontouchstart' in window;\r\n    this.handledEvents = this.isMobile\r\n      ? { down: 'touchstart', move: 'touchmove', up: 'touchend' }\r\n      : { down: 'mousedown', move: 'mousemove', up: 'mouseup' };\r\n\r\n    this.hide();\r\n    this.listen();\r\n  }\r\n\r\n  optionsMerge() {\r\n    this.options?.tipHeight && (TIP_HEIGHT = this.options.tipHeight);\r\n    TableTooltip.disableToolNames = Array.from(\r\n      new Set([...TableTooltip.disableToolNames, ...(this.options?.disableToolNames || [])]),\r\n    );\r\n  }\r\n\r\n  listen() {\r\n    this.quill.on(Quill.events.EDITOR_CHANGE, (eventName) => {\r\n      if (eventName === Quill.events.TEXT_CHANGE) {\r\n        return this.hide();\r\n      }\r\n      const range = this.quill.getSelection();\r\n\r\n      if (range == null) {\r\n        this.hide();\r\n        this.enableFromTable();\r\n        return;\r\n      }\r\n      const [tableWrapper] = this.quill.scroll.descendant(TableWrapperFormat, range.index);\r\n      if (tableWrapper !== null) {\r\n        // 此时在 table 内, 禁用部分功能\r\n        this.disableFromTable();\r\n\r\n        this.tableWrapper = tableWrapper;\r\n        this.table = tableWrapper.children.head;\r\n        // 找到 tbody\r\n        let tbody = tableWrapper.children.tail;\r\n        while (tbody && tbody.statics.blotName !== blotName.tableBody) {\r\n          tbody = tbody.children?.tail;\r\n        }\r\n\r\n        const tableCols = tableWrapper.children.head?.children?.head;\r\n        this.tableCols = tableCols.statics.blotName === blotName.tableColGroup && tableCols.children.length > 0 ? tableCols.children.map(col => col) : [];\r\n\r\n        const curTableId = tableWrapper.children.head.tableId;\r\n        if (this.curTableId !== curTableId) {\r\n          this.clearScrollEvent();\r\n          this.focusTableChange = true;\r\n          // 表格滚动同步事件\r\n          this.addScrollEvent(\r\n            this.tableWrapper.domNode,\r\n            this.scrollSync.bind(this, this.tableWrapper.domNode),\r\n          );\r\n        }\r\n        this.curTableId = curTableId;\r\n\r\n        this.show();\r\n        this.position();\r\n        return;\r\n      }\r\n      else {\r\n        this.enableFromTable();\r\n      }\r\n      this.hide();\r\n    });\r\n  }\r\n\r\n  disableFromTable() {\r\n    this.toggleDisableToolbarTools('add');\r\n\r\n    const toolbar = this.quill.getModule('toolbar');\r\n    // 防止重复触发覆盖保存事件\r\n    if (toolbar.disableByTable) return;\r\n    toolbar.disableByTable = true;\r\n    // 去除 toolbar 对应 module 的 handler 事件, 保存在 tableDisableToolHandlers\r\n    for (const toolName of TableTooltip.disableToolNames) {\r\n      this.tableDisableToolHandlers[toolName] = toolbar.handlers[toolName];\r\n      // 不要设置为 null\r\n      toolbar.handlers[toolName] = () => {};\r\n    }\r\n  }\r\n\r\n  enableFromTable() {\r\n    this.toggleDisableToolbarTools('remove');\r\n\r\n    const toolbar = this.quill.getModule('toolbar');\r\n    // 根据 tableDisableToolHandlers 恢复 handler\r\n    for (const toolName in this.tableDisableToolHandlers) {\r\n      toolbar.handlers[toolName] = this.tableDisableToolHandlers[toolName];\r\n    }\r\n    this.tableDisableToolHandlers = {};\r\n    toolbar.disableByTable = false;\r\n  }\r\n\r\n  /**\r\n     * Toggles the disable state of toolbar tools.\r\n     *\r\n     * @param {'add' | 'remove'} type - The type of toggle action to perform.\r\n     */\r\n  toggleDisableToolbarTools(type) {\r\n    const toolbar = this.quill.getModule('toolbar');\r\n    for (const [name, btn] of toolbar.controls) {\r\n      if (TableTooltip.disableToolNames.includes(name)) {\r\n        if (btn.tagName.toLowerCase() === 'select') {\r\n          toolbar.container\r\n            .querySelector(`.ql-picker.${btn.className}`)\r\n            ?.classList[type]('ql-disabled-table');\r\n        }\r\n        else {\r\n          btn.classList[type]('ql-disabled-table');\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  scrollSync(dom, e) {\r\n    this.root.scrollLeft = dom.scrollLeft;\r\n  }\r\n\r\n  addScrollEvent(dom, handle) {\r\n    dom.addEventListener('scroll', handle);\r\n    this.scrollHandler.push([dom, handle]);\r\n  }\r\n\r\n  clearScrollEvent() {\r\n    for (let i = 0; i < this.scrollHandler.length; i++) {\r\n      const [dom, handle] = this.scrollHandler[i];\r\n      dom.removeEventListener('scroll', handle);\r\n    }\r\n    this.scrollHandler = [];\r\n  }\r\n\r\n  position = () => {\r\n    const tableMainRect = this.table.domNode.getBoundingClientRect();\r\n    const rootRect = this.quill.root.getBoundingClientRect();\r\n\r\n    css(this.root, {\r\n      top: `${tableMainRect.y - rootRect.y - TIP_HEIGHT}px`,\r\n      left: `${tableMainRect.x - rootRect.x + this.tableWrapper.domNode.scrollLeft}px`,\r\n    });\r\n  };\r\n\r\n  show() {\r\n    // 若没有 colgroup col 元素，不显示\r\n    if (this.tableCols.length === 0) {\r\n      return;\r\n    }\r\n\r\n    if (this.focusTableChange) {\r\n      const tableWrapperRect = this.tableWrapper.domNode.getBoundingClientRect();\r\n      // 加 tableId 用于 table 删除时隐藏 tooltip\r\n      this.root.dataset.tableId = this.tableWrapper.tableId;\r\n      this.root.innerHTML = [...this.tableCols]\r\n        .map((col) => {\r\n          let width = col.width + (this.table.full ? '%' : 'px');\r\n          if (!col.width) {\r\n            width = `${col.domNode.getBoundingClientRect().width}px`;\r\n          }\r\n          return `<div class=\"ql-table-col-header\" style=\"width: ${width}\">\r\n            <div class=\"ql-table-col-separator\" style=\"height: ${tableWrapperRect.height + TIP_HEIGHT - 3}px\"></div>\r\n          </div>`; // -3 为 border-width: 2, top: 1\r\n        })\r\n        .join('');\r\n\r\n      this.focusTableChange = false;\r\n      Object.assign(this.root.style, {\r\n        width: `${tableWrapperRect.width}px`,\r\n      });\r\n\r\n      this.bindDrag();\r\n    }\r\n    setTimeout(() => {\r\n      this.scrollSync(this.tableWrapper.domNode);\r\n    }, 0);\r\n    this.root.classList.remove('ql-hidden');\r\n\r\n    const srcollHide = () => {\r\n      this.hide();\r\n      this.quill.root.removeEventListener('scroll', srcollHide);\r\n    };\r\n    this.quill.root.addEventListener('scroll', srcollHide);\r\n  }\r\n\r\n  hide() {\r\n    this.root.classList.add('ql-hidden');\r\n  }\r\n\r\n  bindDrag() {\r\n    let tipColBreak = null;\r\n    let curColIndex = -1;\r\n    const tableColHeads = Array.from(this.root.getElementsByClassName('ql-table-col-header'));\r\n    const tableColHeadSeparators = Array.from(this.root.getElementsByClassName('ql-table-col-separator'));\r\n    const appendTo = document.body;\r\n    // 设置每个 drag 下标对应 col 下标，最右会多一个 drag, 与 better-table 的类似\r\n    // 根据当前的 col left 配合 clientX 计算, 使保证最小宽度\r\n    const handleMousemove = (e) => {\r\n      // getBoundingClientRect 的 top/bottom/left/right, 这是根据视口距离\r\n      const rect = tableColHeads[curColIndex].getBoundingClientRect();\r\n      const tableWidth = this.table.domNode.getBoundingClientRect().width;\r\n      let resX = this.isMobile ? e.changedTouches[0].clientX : e.clientX;\r\n\r\n      if (this.table.full) {\r\n        // 拖拽的最大宽度是当前 col 宽度 + next col 宽度, 最后一个 col 最大宽度是当前宽度\r\n        const minWidth = (CELL_MIN_PRE / 100) * tableWidth;\r\n        const maxRange\r\n                    = resX > rect.right\r\n                      ? tableColHeads[curColIndex + 1]\r\n                        ? tableColHeads[curColIndex + 1].getBoundingClientRect().right - minWidth\r\n                        : rect.right - minWidth\r\n                      : Infinity;\r\n        const minRange = rect.x + minWidth;\r\n\r\n        resX = Math.min(Math.max(resX, minRange), maxRange);\r\n      }\r\n      else {\r\n        if (resX - rect.x < CELL_MIN_WIDTH) {\r\n          resX = rect.x + CELL_MIN_WIDTH;\r\n        }\r\n      }\r\n      tipColBreak.style.left = `${resX}px`;\r\n      tipColBreak.dataset.w = resX - rect.x;\r\n    };\r\n    const handleMouseup = (e) => {\r\n      const w = Number.parseInt(tipColBreak.dataset.w);\r\n      // table full 时处理不同\r\n      if (this.table.full) {\r\n        // 在调整一个后把所有 col 都变成百分比\r\n        let pre = (w / this.table.domNode.getBoundingClientRect().width) * 100;\r\n        const oldWidthPre = this.tableCols[curColIndex].width;\r\n        if (pre < oldWidthPre) {\r\n          // 缩小时若不是最后一个, 则把减少的量加在后面一个\r\n          // 若是最后一个则把减少的量加在前面一个\r\n          pre = Math.max(CELL_MIN_PRE, pre);\r\n          const last = oldWidthPre - pre;\r\n          if (this.tableCols[curColIndex + 1]) {\r\n            this.tableCols[curColIndex + 1].width = `${this.tableCols[curColIndex + 1].width + last}%`;\r\n          }\r\n          else if (this.tableCols[curColIndex - 1]) {\r\n            this.tableCols[curColIndex - 1].width = `${this.tableCols[curColIndex - 1].width + last}%`;\r\n          }\r\n          else {\r\n            pre = 100;\r\n          }\r\n          this.tableCols[curColIndex].width = `${pre}%`;\r\n        }\r\n        else {\r\n          // 增大时若不是最后一个, 则与后面一个的宽度合并, 最大不能超过合并的宽度, 增加的量来自后面一个的减少量\r\n          // 若是最后一个则不处理\r\n          if (this.tableCols[curColIndex + 1]) {\r\n            const totalWidthNextPre = oldWidthPre + this.tableCols[curColIndex + 1].width;\r\n            pre = Math.min(totalWidthNextPre - CELL_MIN_PRE, pre);\r\n            this.tableCols[curColIndex].width = `${pre}%`;\r\n            this.tableCols[curColIndex + 1].width = `${totalWidthNextPre - pre}%`;\r\n          }\r\n        }\r\n      }\r\n      else {\r\n        this.table.domNode.style.width = `${\r\n          Number.parseFloat(this.table.domNode.style.width)\r\n          - Number.parseFloat(tableColHeads[curColIndex].style.width)\r\n          + w\r\n        }px`;\r\n        tableColHeads[curColIndex].style.width = `${w}px`;\r\n        this.tableCols[curColIndex].width = `${w}px`;\r\n      }\r\n      this.table.formatTableWidth();\r\n\r\n      appendTo.removeChild(tipColBreak);\r\n      tipColBreak = null;\r\n      curColIndex = -1;\r\n      document.removeEventListener(this.handledEvents.up, handleMouseup);\r\n      document.removeEventListener(this.handledEvents.move, handleMousemove);\r\n\r\n      const tableModule = this.quill.getModule(toolName.table);\r\n      tableModule.hideTableTools();\r\n    };\r\n    const handleMousedown = (i, e) => {\r\n      document.addEventListener(this.handledEvents.up, handleMouseup);\r\n      document.addEventListener(this.handledEvents.move, handleMousemove);\r\n      curColIndex = i;\r\n\r\n      const divDom = document.createElement('div');\r\n      divDom.classList.add('ql-table-drag-line');\r\n\r\n      // set drag init width\r\n      const fullWidth = this.table.domNode.getBoundingClientRect().width;\r\n      const colWidthAttr = Number.parseFloat(tableColHeads[curColIndex].style.width);\r\n      const width = this.table.full ? colWidthAttr / 100 * fullWidth : colWidthAttr;\r\n      divDom.dataset.w = width;\r\n\r\n      const tableRect = this.tableWrapper.domNode.getBoundingClientRect();\r\n      css(divDom, {\r\n        top: `${tableRect.y - TIP_HEIGHT}px`,\r\n        left: `${this.isMobile ? e.changedTouches[0].clientX : e.clientX}px`,\r\n        height: `${tableRect.height + TIP_HEIGHT}px`,\r\n      });\r\n      appendTo.appendChild(divDom);\r\n\r\n      if (tipColBreak) appendTo.removeChild(tipColBreak);\r\n      tipColBreak = divDom;\r\n    };\r\n    for (const [i, el] of tableColHeadSeparators.entries()) {\r\n      el.addEventListener(this.handledEvents.down, handleMousedown.bind(this, i));\r\n      // 防止拖拽使触发 drag 导致可以使此元素被插入表格\r\n      el.addEventListener('dragstart', (e) => {\r\n        e.preventDefault();\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n// 在 table 内时禁用的 tool 的 name\r\nTableTooltip.disableToolNames = [toolName.table, 'code-block'];\r\n","import Quill from 'quill';\r\nimport { TableOperationMenu, TableSelection, TableTooltip } from './module';\r\nimport {\r\n  ContainerFormat,\r\n  ListItemRewrite,\r\n  TableBodyFormat,\r\n  TableCellFormat,\r\n  TableCellInnerFormat,\r\n  TableColFormat,\r\n  TableColgroupFormat,\r\n  TableFormat,\r\n  TableRowFormat,\r\n  TableWrapperFormat,\r\n} from './format';\r\nimport { debounce, findParentBlot, isFunction, isUndefined, randomId, showTableSelector } from './utils';\r\nimport { CELL_MIN_PRE, CELL_MIN_WIDTH, CREATE_TABLE, blotName, moduleName, toolName } from './assets/const';\r\nimport TableSvg from './assets/icons/table.svg';\r\n\r\nconst Parchment = Quill.import('parchment');\r\nconst Delta = Quill.import('delta');\r\nconst Break = Quill.import('blots/break');\r\nconst BlockEmbed = Quill.import('blots/block/embed');\r\nconst Block = Quill.import('blots/block');\r\nconst Container = Quill.import('blots/container');\r\nconst icons = Quill.import('ui/icons');\r\n\r\nContainerFormat.allowedChildren = [Block, BlockEmbed, Container];\r\n\r\nTableWrapperFormat.allowedChildren = [TableFormat];\r\n\r\nTableFormat.allowedChildren = [TableBodyFormat, TableColgroupFormat];\r\nTableFormat.requiredContainer = TableWrapperFormat;\r\n\r\nTableBodyFormat.allowedChildren = [TableRowFormat];\r\nTableBodyFormat.requiredContainer = TableFormat;\r\n\r\nTableColgroupFormat.allowedChildren = [TableColFormat];\r\nTableColgroupFormat.requiredContainer = TableFormat;\r\n\r\nTableRowFormat.allowedChildren = [TableCellFormat];\r\nTableRowFormat.requiredContainer = TableBodyFormat;\r\n\r\n// Break to handle user select mutiple line cell to delete. MutationObserver will have `a addNodes: [br]` for td\r\nTableCellFormat.allowedChildren = [TableCellInnerFormat, Break];\r\nTableCellFormat.requiredContainer = TableRowFormat;\r\n\r\nTableCellInnerFormat.requiredContainer = TableCellFormat;\r\nTableCellInnerFormat.defaultChild = 'block';\r\n\r\nexport { ListItemRewrite };\r\n\r\nQuill.register(\r\n  {\r\n    [`formats/${ContainerFormat.blotName}`]: ContainerFormat,\r\n\r\n    [`formats/${TableCellInnerFormat.blotName}`]: TableCellInnerFormat,\r\n    [`formats/${TableCellFormat.blotName}`]: TableCellFormat,\r\n    [`formats/${TableRowFormat.blotName}`]: TableRowFormat,\r\n    [`formats/${TableBodyFormat.blotName}`]: TableBodyFormat,\r\n    [`formats/${TableFormat.blotName}`]: TableFormat,\r\n    [`formats/${TableWrapperFormat.blotName}`]: TableWrapperFormat,\r\n\r\n    [`formats/${TableColgroupFormat.blotName}`]: TableColgroupFormat,\r\n    [`formats/${TableColFormat.blotName}`]: TableColFormat,\r\n  },\r\n  true,\r\n);\r\n\r\n// 不可插入至表格的 blot\r\nexport const tableCantInsert = [blotName.tableCell, 'code-block'];\r\nexport function isForbidInTableBlot(blot) {\r\n  return tableCantInsert.includes(blot.statics.blotName);\r\n};\r\n\r\nexport function isForbidInTable(current) {\r\n  return current && current.parent\r\n    ? isForbidInTableBlot(current.parent)\r\n      ? true\r\n      : isForbidInTable(current.parent)\r\n    : false;\r\n};\r\nfunction createCell({ tableId, rowId, colId }) {\r\n  const value = {\r\n    tableId,\r\n    rowId,\r\n    colId,\r\n    colspan: 1,\r\n    rowspan: 1,\r\n  };\r\n  const tableCell = Parchment.create(blotName.tableCell, value);\r\n  const tableCellInner = Parchment.create(blotName.tableCellInner, value);\r\n  const block = Parchment.create('block');\r\n  block.appendChild(Parchment.create('break'));\r\n  tableCellInner.appendChild(block);\r\n  tableCell.appendChild(tableCellInner);\r\n  return tableCell;\r\n};\r\n\r\nclass TableModule {\r\n  constructor(quill, options) {\r\n    this.quill = quill;\r\n    this.options = options;\r\n\r\n    this.controlItem = null;\r\n    this.tableInsertSelectCloseHandler = null;\r\n\r\n    const toolbar = this.quill.getModule('toolbar');\r\n    if (toolbar) {\r\n      const control = toolbar.controls.find(([name]) => name === TableModule.toolName);\r\n      if (control) {\r\n        this.controlItem = control[1].parentNode.querySelector('.ql-table.ql-picker');\r\n        // 使用 button 时会在点击后立刻聚焦输入, 若有横向滚动条会时视口锁定到 focus, 使用 select 就不会\r\n        if (this.controlItem) {\r\n          const label = this.controlItem.getElementsByClassName('ql-picker-label')?.[0];\r\n          label.innerHTML = TableSvg;\r\n        }\r\n        else {\r\n          this.controlItem = control[1];\r\n        }\r\n        this.buildCustomSelect(\r\n          this.options.customSelect,\r\n          control[1].tagName.toLowerCase(),\r\n          this.options.customButton,\r\n        );\r\n        toolbar.addHandler(TableModule.toolName, this.handleSelectDisplay.bind(this));\r\n      }\r\n    }\r\n\r\n    this.pasteTableHandler();\r\n    // 绑定 table 的选择事件\r\n    this.quill.root.addEventListener(\r\n      'click',\r\n      (evt) => {\r\n        const path = evt.path || (evt.composedPath && evt.composedPath());\r\n        if (!path || path.length <= 0) return;\r\n\r\n        const tableNode = path.find((node) => {\r\n          return (\r\n            node.tagName && node.tagName.toUpperCase() === 'TABLE' && node.classList.contains('ql-table')\r\n          );\r\n        });\r\n        // 结束位置位处于表格内不显示\r\n        if (tableNode) {\r\n          if (this.table === tableNode) return;\r\n          if (this.table) this.hideTableTools();\r\n          this.showTableTools(tableNode, quill, this.options.selection);\r\n        }\r\n        else if (this.table) {\r\n          this.hideTableTools();\r\n        }\r\n      },\r\n      false,\r\n    );\r\n    // 绑定 table 的右键插入、删除事件\r\n    this.quill.root.addEventListener('contextmenu', (evt) => {\r\n      if (!this.table) return true;\r\n      evt.preventDefault();\r\n\r\n      const path = evt.path || (evt.composedPath && evt.composedPath());\r\n      if (!path || path.length <= 0) return;\r\n\r\n      const tableNode = path.find(\r\n        node => node.tagName && node.tagName.toUpperCase() === 'TABLE' && node.classList.contains('ql-table'),\r\n      );\r\n      // 如果没有选中任何单元格，不显示右键菜单\r\n      if (tableNode && this.tableSelection?.selectedTds?.length) {\r\n        if (this.tableOperationMenu) this.tableOperationMenu = this.tableOperationMenu.destroy();\r\n\r\n        const rowNode = path.find(\r\n          node => node.tagName && node.tagName.toUpperCase() === 'TR' && node.dataset.rowId,\r\n        );\r\n\r\n        const cellNode = path.find(\r\n          node => node.tagName && node.tagName.toUpperCase() === 'TD' && node.dataset.rowId,\r\n        );\r\n\r\n        this.tableOperationMenu = new TableOperationMenu(\r\n          {\r\n            table: tableNode,\r\n            row: rowNode,\r\n            cell: cellNode,\r\n            left: evt.clientX,\r\n            top: evt.clientY,\r\n          },\r\n          quill,\r\n          this.options.operationMenu,\r\n        );\r\n      }\r\n    });\r\n    if (isUndefined(this.options.dragResize) || this.options.dragResize) {\r\n      this.quill.theme.TableTooltip = new TableTooltip(this.quill, this.options.tableToolTip);\r\n    }\r\n\r\n    this.listenBalanceCells();\r\n  }\r\n\r\n  showTableTools(table, quill, options) {\r\n    if (table) {\r\n      this.table = table;\r\n      this.tableSelection = new TableSelection(table, quill, options);\r\n    }\r\n  }\r\n\r\n  hideTableTools() {\r\n    this.tableSelection && this.tableSelection.destroy();\r\n    this.tableOperationMenu && this.tableOperationMenu.destroy();\r\n    if (this.quill.theme.TableTooltip) {\r\n      this.quill.theme.TableTooltip.curTableId = null;\r\n      this.quill.theme.TableTooltip.hide();\r\n    }\r\n    this.tableSelection = null;\r\n    this.tableOperationMenu = null;\r\n    this.table = null;\r\n  }\r\n\r\n  // 粘贴表格处理\r\n  // 需要带上 col 的 width, 处理 px 和 %\r\n  pasteTableHandler() {\r\n    let tableId = randomId();\r\n    let rowId = randomId();\r\n    let colIds = [];\r\n    let cellCount = 0;\r\n\r\n    // 重新生成 table 里的所有 id, cellFormat 和 colFormat 进行 table 的添加\r\n    // addMatcher 匹配的是标签字符串, 不是 blotName, 只是这些 blotName 设置的是标签字符串\r\n    this.quill.clipboard.addMatcher(blotName.table, (node, delta) => {\r\n      if (delta.ops.length === 0) return delta;\r\n      const hasCol = !!delta.ops[0].attributes?.col;\r\n      let colDelta;\r\n      // 粘贴表格若原本存在 col, 仅改变 id, 否则重新生成\r\n      const { width: originTableWidth } = node.getBoundingClientRect();\r\n      let isFull = this.options.fullWidth;\r\n      if (hasCol) isFull = !!delta.ops[0].insert?.col?.full;\r\n      const defaultColWidth = isFull\r\n        ? `${Math.max(100 / colIds.length, CELL_MIN_PRE)}%`\r\n        : `${Math.max(originTableWidth / colIds.length, CELL_MIN_WIDTH)}px`;\r\n\r\n      if (!hasCol) {\r\n        colDelta = colIds.reduce((colDelta, id) => {\r\n          colDelta.insert('\\n', {\r\n            [blotName.tableCol]: {\r\n              colId: id,\r\n              tableId,\r\n              width: defaultColWidth,\r\n              full: isFull,\r\n            },\r\n          });\r\n          return colDelta;\r\n        }, new Delta());\r\n      }\r\n      else {\r\n        for (let i = 0; i < delta.ops.length; i++) {\r\n          if (!delta.ops[i].attributes[blotName.tableCol]) {\r\n            break;\r\n          }\r\n          Object.assign(delta.ops[i].attributes[blotName.tableCol], {\r\n            tableId,\r\n            colId: colIds[i],\r\n            full: isFull,\r\n            width: !delta.ops[i].attributes[blotName.tableCol].width\r\n              ? defaultColWidth\r\n              : Number.parseFloat(delta.ops[i].attributes[blotName.tableCol].width) + (isFull ? '%' : 'px'),\r\n          });\r\n        }\r\n      }\r\n      tableId = randomId();\r\n      colIds = [];\r\n      cellCount = 0;\r\n      return colDelta ? colDelta.concat(delta) : delta;\r\n    });\r\n\r\n    this.quill.clipboard.addMatcher(blotName.tableRow, (node, delta) => {\r\n      rowId = randomId();\r\n      cellCount = 0;\r\n      return delta;\r\n    });\r\n\r\n    this.quill.clipboard.addMatcher(blotName.tableCell, (node, delta) => {\r\n      const rowspan = node.getAttribute('rowspan') || 1;\r\n      const colspan = node.getAttribute('colspan') || 1;\r\n      const colIndex = +cellCount + +colspan - 1;\r\n      if (!colIds[colIndex]) {\r\n        for (let i = colIndex; i >= 0; i--) {\r\n          if (!colIds[i]) colIds[i] = randomId();\r\n        }\r\n      }\r\n      const colId = colIds[colIndex];\r\n      cellCount += 1;\r\n\r\n      if (delta.slice(delta.length() - 1).ops[0]?.insert !== '\\n') {\r\n        delta.insert('\\n');\r\n      }\r\n\r\n      return delta.compose(\r\n        new Delta().retain(delta.length(), {\r\n          [blotName.tableCellInner]: {\r\n            tableId,\r\n            rowId,\r\n            colId,\r\n            rowspan,\r\n            colspan,\r\n            style: node.getAttribute('style'),\r\n          },\r\n        }),\r\n      );\r\n    });\r\n  }\r\n\r\n  async buildCustomSelect(customSelect, tagName, customButton) {\r\n    const dom = document.createElement('div');\r\n    dom.classList.add('ql-custom-select');\r\n    const selector = customSelect && isFunction(customSelect)\r\n      ? await customSelect()\r\n      : this.createSelect(customButton);\r\n    dom.appendChild(selector);\r\n\r\n    let appendTo = this.controlItem;\r\n    if (tagName === 'select') {\r\n      appendTo = this.controlItem.querySelector('.ql-picker-options');\r\n    }\r\n    if (!appendTo) return;\r\n    selector.addEventListener(CREATE_TABLE, (e) => {\r\n      const { row, col } = e.detail;\r\n      if (!row || !col) return;\r\n      this.insertTable(row, col);\r\n    });\r\n    appendTo.appendChild(dom);\r\n  }\r\n\r\n  async handleSelectDisplay() {\r\n    this.controlItem.classList.add('ql-expanded');\r\n    this.controlItem.dataset.active = true;\r\n    window.removeEventListener('click', this.tableInsertSelectCloseHandler);\r\n    this.tableInsertSelectCloseHandler = (e) => {\r\n      const path = (e.composedPath && e.composedPath()) || e.path;\r\n      const i = path.indexOf(this.controlItem);\r\n      if (i > 2 || i === -1) {\r\n        this.closeSelecte();\r\n      }\r\n    };\r\n    window.addEventListener('click', this.tableInsertSelectCloseHandler);\r\n  }\r\n\r\n  createSelect(customButton) {\r\n    return showTableSelector(customButton);\r\n  }\r\n\r\n  closeSelecte() {\r\n    if (this.controlItem) {\r\n      this.controlItem.classList.remove('ql-expanded');\r\n      this.controlItem.dataset.active = false;\r\n    }\r\n    window.removeEventListener('click', this.tableInsertSelectCloseHandler);\r\n  }\r\n\r\n  // 以上为 toolbar table 按钮的选择生成器相关\r\n  // 以下为 table module 生成表格相关功能函数\r\n\r\n  insertTable(rows, columns) {\r\n    if (rows >= 30 || columns >= 30) {\r\n      throw new Error('Both rows and columns must be less than 30.');\r\n    }\r\n\r\n    this.quill.focus();\r\n    this.range = this.quill.getSelection();\r\n    const range = this.range;\r\n    if (range == null) return;\r\n    const currentBlot = this.quill.getLeaf(range.index)[0];\r\n\r\n    if (isForbidInTable(currentBlot)) {\r\n      throw new Error(`Not supported nesting of ${currentBlot.type} type object within a table.`);\r\n    }\r\n\r\n    let delta = new Delta().retain(range.index);\r\n    delta.insert('\\n');\r\n    const tableId = randomId();\r\n    const colId = new Array(columns).fill(0).map(() => randomId());\r\n\r\n    let { width, paddingLeft, paddingRight } = getComputedStyle(this.quill.root);\r\n    width = Number.parseInt(width);\r\n    paddingLeft = Number.parseInt(paddingLeft);\r\n    paddingRight = Number.parseInt(paddingRight);\r\n    width = width - paddingLeft - paddingRight;\r\n\r\n    delta = new Array(columns).fill('\\n').reduce((memo, text, i) => {\r\n      memo.insert(text, {\r\n        [blotName.tableCol]: {\r\n          width: !this.options.fullWidth ? `${Math.floor(width / columns)}px` : `${(1 / columns) * 100}%`,\r\n          tableId,\r\n          colId: colId[i],\r\n          full: this.options.fullWidth,\r\n        },\r\n      });\r\n      return memo;\r\n    }, delta);\r\n\r\n    // 直接生成 delta 的数据格式并插入\r\n    delta = new Array(rows).fill(0).reduce((memo) => {\r\n      const rowId = randomId();\r\n      return new Array(columns).fill('\\n').reduce((memo, text, i) => {\r\n        memo.insert(text, {\r\n          [blotName.tableCellInner]: {\r\n            tableId,\r\n            rowId,\r\n            colId: colId[i],\r\n            rowspan: 1,\r\n            colspan: 1,\r\n          },\r\n        });\r\n        return memo;\r\n      }, memo);\r\n    }, delta);\r\n    // console.log(columns, rows);\r\n    this.quill.updateContents(delta, Quill.sources.USER);\r\n    this.quill.setSelection(range.index + columns + columns * rows + 1, Quill.sources.API);\r\n    this.quill.focus();\r\n\r\n    this.closeSelecte();\r\n  }\r\n\r\n  removeTable() {\r\n    const selectedTds = this.tableSelection.selectedTds;\r\n    if (selectedTds.length === 0) return;\r\n    const tableBlot = findParentBlot(selectedTds[0], blotName.table);\r\n    tableBlot && tableBlot.remove();\r\n  }\r\n\r\n  setStyle(styles, cells) {\r\n    if (cells.length === 0) return;\r\n    cells.map(cellInner => (cellInner.style = styles));\r\n  }\r\n\r\n  /**\r\n   * after insert or remove cell. handle cell colspan and rowspan merge\r\n   */\r\n  fixTableByRemove(tableBlot) {\r\n    // calculate all cells\r\n    // maybe will get empty tr\r\n    const trBlots = tableBlot.getRows();\r\n    const tableCols = tableBlot.getCols();\r\n    const colIdMap = tableCols.reduce((idMap, col) => {\r\n      idMap[col.colId] = 0;\r\n      return idMap;\r\n    }, {});\r\n    // merge rowspan\r\n    const reverseTrBlots = [...trBlots].reverse();\r\n    const removeTr = [];\r\n    for (const [index, tr] of reverseTrBlots.entries()) {\r\n      const i = trBlots.length - index - 1;\r\n      if (tr.children.length <= 0) {\r\n        removeTr.push(i);\r\n      }\r\n      else {\r\n        // if have td rowspan across empty tr. minus rowspan\r\n        tr.foreachCellInner((td) => {\r\n          const sum = removeTr.reduce((sum, val) => td.rowspan + i > val ? sum + 1 : sum, 0);\r\n          td.rowspan -= sum;\r\n          // count exist col\r\n          colIdMap[td.colId] += 1;\r\n        });\r\n      }\r\n    }\r\n    // merge colspan\r\n    let index = 0;\r\n    for (const count of Object.values(colIdMap)) {\r\n      if (count === 0) {\r\n        const spanCols = [];\r\n        let skipRowNum = 0;\r\n        for (const tr of Object.values(trBlots)) {\r\n          const spanCol = spanCols.shift() || 0;\r\n          let nextSpanCols = [];\r\n          if (skipRowNum > 0) {\r\n            nextSpanCols = tr.getCellByColumIndex(index - spanCol)[2];\r\n            skipRowNum -= 1;\r\n          }\r\n          else {\r\n            nextSpanCols = tr.removeCell(index - spanCol);\r\n            if (nextSpanCols.skipRowNum) {\r\n              skipRowNum += nextSpanCols.skipRowNum;\r\n            }\r\n          }\r\n          for (const [i, n] of nextSpanCols.entries()) {\r\n            spanCols[i] = (spanCols[i] || 0) + n;\r\n          }\r\n        }\r\n      }\r\n      else {\r\n        index += 1;\r\n      }\r\n    }\r\n    // remove col\r\n    for (const col of tableCols) {\r\n      if (colIdMap[col.colId] === 0) {\r\n        if (col.prev) {\r\n          col.prev.width += col.width;\r\n        }\r\n        else if (col.next) {\r\n          col.next.width += col.width;\r\n        }\r\n        col.remove();\r\n      }\r\n    }\r\n  }\r\n\r\n  appendRow(isDown) {\r\n    const selectedTds = this.tableSelection.selectedTds;\r\n    if (selectedTds.length <= 0) return;\r\n    // find baseTd and baseTr\r\n    const baseTd = selectedTds[isDown ? selectedTds.length - 1 : 0];\r\n    const tableBlot = findParentBlot(baseTd, blotName.table);\r\n    const [tableBodyBlot] = tableBlot.descendants(TableBodyFormat);\r\n    if (!tableBodyBlot) return;\r\n\r\n    const baseTdParentTr = findParentBlot(baseTd, blotName.tableRow);\r\n    const tableTrs = tableBlot.getRows();\r\n    const i = tableTrs.indexOf(baseTdParentTr);\r\n    const insertRowIndex = i + (isDown ? baseTd.rowspan : 0);\r\n\r\n    tableBodyBlot.insertRow(insertRowIndex);\r\n  }\r\n\r\n  removeRow() {\r\n    const selectedTds = this.tableSelection.selectedTds;\r\n    if (selectedTds.length <= 0) return;\r\n    const baseTd = selectedTds[0];\r\n    const tableBlot = findParentBlot(baseTd, blotName.table);\r\n    const trs = tableBlot.getRows();\r\n    let endTrIndex = trs.length;\r\n    let nextTrIndex = -1;\r\n    for (const td of selectedTds) {\r\n      const tr = findParentBlot(td, blotName.tableRow);\r\n      const index = trs.indexOf(tr);\r\n      if (index < endTrIndex) {\r\n        endTrIndex = index;\r\n      }\r\n      if (index + td.rowspan > nextTrIndex) {\r\n        nextTrIndex = index + td.rowspan;\r\n      }\r\n    }\r\n\r\n    const patchTds = {};\r\n    for (let i = endTrIndex; i < Math.min(trs.length, nextTrIndex); i++) {\r\n      const tr = trs[i];\r\n      tr.foreachCellInner((td) => {\r\n        // find cells in rowspan that exceed the deletion range\r\n        if (td.rowspan + i > nextTrIndex) {\r\n          patchTds[td.colId] = {\r\n            rowspan: td.rowspan + i - nextTrIndex,\r\n            colspan: td.colspan,\r\n            colIndex: td.getColumnIndex(),\r\n          };\r\n        }\r\n        // only remove td. empty tr to calculate colspan and rowspan\r\n        td.parent.remove();\r\n      });\r\n    }\r\n\r\n    if (trs[nextTrIndex]) {\r\n      const nextTr = trs[nextTrIndex];\r\n      const tableId = tableBlot.tableId;\r\n      // insert cell in nextTr to patch exceed cell\r\n      for (const [colId, { colIndex, colspan, rowspan }] of Object.entries(patchTds)) {\r\n        nextTr.insertCell(colIndex, {\r\n          tableId,\r\n          rowId: nextTr.rowId,\r\n          colId,\r\n          colspan,\r\n          rowspan,\r\n        });\r\n      }\r\n    }\r\n\r\n    this.fixTableByRemove(tableBlot);\r\n  }\r\n\r\n  appendCol(isRight) {\r\n    const selectedTds = this.tableSelection.selectedTds;\r\n    if (selectedTds.length <= 0) return;\r\n\r\n    // find insert column index in row\r\n    const [baseTd] = selectedTds.reduce((pre, cur) => {\r\n      const columnIndex = cur.getColumnIndex();\r\n      if (!isRight && columnIndex <= pre[1]) {\r\n        pre = [cur, columnIndex];\r\n      }\r\n      else if (isRight && columnIndex >= pre[1]) {\r\n        pre = [cur, columnIndex];\r\n      }\r\n      return pre;\r\n    }, [null, isRight ? 0 : Infinity]);\r\n    const columnIndex = baseTd.getColumnIndex() + (isRight ? baseTd.colspan : 0);\r\n\r\n    const tableBlot = findParentBlot(baseTd, blotName.table);\r\n    const tableId = tableBlot.tableId;\r\n    const newColId = randomId();\r\n\r\n    const [colgroup] = tableBlot.descendants(TableColgroupFormat);\r\n    if (colgroup) {\r\n      colgroup.insertColByIndex(columnIndex, {\r\n        tableId,\r\n        colId: newColId,\r\n        width: tableBlot.full ? '6%' : '160px',\r\n        full: tableBlot.full,\r\n      });\r\n    }\r\n\r\n    // loop tr and insert cell at index\r\n    // if index is inner cell, skip next `rowspan` line\r\n    // if there are cells both have column span and row span before index cell, minus `colspan` cell for next line\r\n    const trs = tableBlot.descendants(TableRowFormat);\r\n    const spanCols = [];\r\n    let skipRowNum = 0;\r\n    for (const tr of Object.values(trs)) {\r\n      const spanCol = spanCols.shift() || 0;\r\n      if (skipRowNum > 0) {\r\n        skipRowNum -= 1;\r\n        continue;\r\n      }\r\n      const nextSpanCols = tr.insertCell(columnIndex - spanCol, {\r\n        tableId,\r\n        rowId: tr.rowId,\r\n        colId: newColId,\r\n        rowspan: 1,\r\n        colspan: 1,\r\n      });\r\n      if (nextSpanCols.skipRowNum) {\r\n        skipRowNum += nextSpanCols.skipRowNum;\r\n      }\r\n      for (const [i, n] of nextSpanCols.entries()) {\r\n        spanCols[i] = (spanCols[i] || 0) + n;\r\n      }\r\n    }\r\n  }\r\n\r\n  removeCol() {\r\n    const selectedTds = this.tableSelection.selectedTds;\r\n    if (selectedTds.length <= 0) return;\r\n    const baseTd = selectedTds[0];\r\n    const tableBlot = findParentBlot(baseTd, blotName.table);\r\n    const colspanMap = {};\r\n    for (const td of selectedTds) {\r\n      if (!colspanMap[td.rowId]) colspanMap[td.rowId] = 0;\r\n      colspanMap[td.rowId] += td.colspan;\r\n    }\r\n    const colspanCount = Math.max(...Object.values(colspanMap));\r\n    const columnIndex = baseTd.getColumnIndex();\r\n\r\n    const trs = tableBlot.descendants(TableRowFormat);\r\n    for (let i = 0; i < colspanCount; i++) {\r\n      const spanCols = [];\r\n      let skipRowNum = 0;\r\n      for (const tr of Object.values(trs)) {\r\n        const spanCol = spanCols.shift() || 0;\r\n        if (skipRowNum > 0) {\r\n          skipRowNum -= 1;\r\n          continue;\r\n        }\r\n        const nextSpanCols = tr.removeCell(columnIndex - spanCol);\r\n        if (nextSpanCols.skipRowNum) {\r\n          skipRowNum += nextSpanCols.skipRowNum;\r\n        }\r\n        for (const [i, n] of nextSpanCols.entries()) {\r\n          spanCols[i] = (spanCols[i] || 0) + n;\r\n        }\r\n      }\r\n    }\r\n    // delete col need after remove cell. remove cell need all column id\r\n    // manual delete col. use fixTableByRemove to delete col will delete extra cells\r\n    const [colgroup] = tableBlot.descendants(TableColgroupFormat);\r\n    if (colgroup) {\r\n      for (let i = 0; i < colspanCount; i++) {\r\n        colgroup.removeColByIndex(columnIndex);\r\n      }\r\n    }\r\n\r\n    this.fixTableByRemove(tableBlot);\r\n  }\r\n\r\n  splitCell() {\r\n    const selectedTds = this.tableSelection.selectedTds;\r\n    if (selectedTds.length !== 1) return;\r\n    const baseTd = selectedTds[0];\r\n    if (baseTd.colspan === 1 && baseTd.rowspan === 1) return;\r\n    const baseTr = findParentBlot(baseTd, blotName.tableRow);\r\n    const tableBlot = findParentBlot(baseTd, blotName.table);\r\n    const tableId = tableBlot.tableId;\r\n    const colIndex = baseTd.getColumnIndex();\r\n    const colIds = tableBlot.getColIds().slice(colIndex, colIndex + baseTd.colspan).reverse();\r\n\r\n    let curTr = baseTr;\r\n    let rowspan = baseTd.rowspan;\r\n    // reset span first. insertCell need colspan to judge insert position\r\n    baseTd.colspan = 1;\r\n    baseTd.rowspan = 1;\r\n    while (curTr && rowspan > 0) {\r\n      for (const id of colIds) {\r\n        // keep baseTd. baseTr should insert at baseTd's column index + 1\r\n        if (curTr === baseTr && id === baseTd.colId) continue;\r\n        curTr.insertCell(colIndex + (curTr === baseTr ? 1 : 0), {\r\n          tableId,\r\n          rowId: curTr.rowId,\r\n          colId: id,\r\n          rowspan: 1,\r\n          colspan: 1,\r\n        });\r\n      }\r\n\r\n      rowspan -= 1;\r\n      curTr = curTr.next;\r\n    }\r\n  }\r\n\r\n  mergeCells() {\r\n    const selectedTds = this.tableSelection.selectedTds;\r\n    if (selectedTds.length <= 1) return;\r\n    const counts = selectedTds.reduce(\r\n      (pre, selectTd, index) => {\r\n        // count column span\r\n        const colId = selectTd.colId;\r\n        if (!pre[0][colId]) pre[0][colId] = 0;\r\n        pre[0][colId] += selectTd.rowspan;\r\n        // count row span\r\n        const rowId = selectTd.rowId;\r\n        if (!pre[1][rowId]) pre[1][rowId] = 0;\r\n        pre[1][rowId] += selectTd.colspan;\r\n        // merge select cell\r\n        if (index !== 0) {\r\n          selectTd.moveChildren(pre[2]);\r\n          selectTd.parent.remove();\r\n        }\r\n        return pre;\r\n      },\r\n      [{}, {}, selectedTds[0]],\r\n    );\r\n\r\n    const rowCount = Math.max(...Object.values(counts[0]));\r\n    const colCount = Math.max(...Object.values(counts[1]));\r\n    const baseTd = counts[2];\r\n    baseTd.colspan = colCount;\r\n    baseTd.rowspan = rowCount;\r\n\r\n    const tableBlot = findParentBlot(baseTd, blotName.table);\r\n    this.fixTableByRemove(tableBlot);\r\n  }\r\n\r\n  // handle unusual delete cell\r\n  fixUnusuaDeletelTable(tableBlot) {\r\n    // calculate all cells\r\n    const trBlots = tableBlot.getRows();\r\n    const tableColIds = tableBlot.getColIds();\r\n    if (trBlots.length === 0 || tableColIds.length === 0) {\r\n      return tableBlot.remove();\r\n    }\r\n    // append by col\r\n    const cellSpanMap = new Array(trBlots.length).fill(0).map(() => new Array(tableColIds.length).fill(false));\r\n    const tableId = tableBlot.tableId;\r\n    for (const [indexTr, tr] of trBlots.entries()) {\r\n      let indexTd = 0;\r\n      let indexCol = 0;\r\n      const curCellSpan = cellSpanMap[indexTr];\r\n      const tds = tr.descendants(TableCellFormat);\r\n      // loop every row and column\r\n      while (indexCol < tableColIds.length) {\r\n        // skip when rowspan or colspan\r\n        if (curCellSpan[indexCol]) {\r\n          indexCol += 1;\r\n          continue;\r\n        }\r\n        const curTd = tds[indexTd];\r\n        // if colId does not match. insert a new one\r\n        if (!curTd || curTd.colId !== tableColIds[indexCol]) {\r\n          tr.insertBefore(\r\n            createCell(\r\n              {\r\n                tableId,\r\n                colId: tableColIds[indexCol],\r\n                rowId: tr.rowId,\r\n              },\r\n            ),\r\n            curTd,\r\n          );\r\n        }\r\n        else {\r\n          if (indexTr + curTd.rowspan - 1 >= trBlots.length) {\r\n            curTd.getCellInner().rowspan = trBlots.length - indexTr;\r\n          }\r\n\r\n          const { colspan, rowspan } = curTd;\r\n          // skip next column cell\r\n          if (colspan > 1) {\r\n            for (let c = 1; c < colspan; c++) {\r\n              curCellSpan[indexCol + c] = true;\r\n            }\r\n          }\r\n          // skip next rowspan cell\r\n          if (rowspan > 1) {\r\n            for (let r = indexTr + 1; r < indexTr + rowspan; r++) {\r\n              for (let c = 0; c < colspan; c++) {\r\n                cellSpanMap[r][indexCol + c] = true;\r\n              }\r\n            }\r\n          }\r\n          indexTd += 1;\r\n        }\r\n        indexCol += 1;\r\n      }\r\n\r\n      // if td not match all exist td. Indicates that a cell has been inserted\r\n      if (indexTd < tds.length) {\r\n        for (let i = indexTd; i < tds.length; i++) {\r\n          tds[i].remove();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  balanceTables() {\r\n    for (const tableBlot of this.quill.scroll.descendants(TableFormat)) {\r\n      this.fixUnusuaDeletelTable(tableBlot);\r\n    }\r\n  }\r\n\r\n  listenBalanceCells() {\r\n    this.fixTableByLisenter = debounce(this.balanceTables, 100);\r\n    this.quill.on(\r\n      Quill.events.SCROLL_OPTIMIZE,\r\n      (mutations) => {\r\n        mutations.some((mutation) => {\r\n          if (\r\n            // TODO: if need add ['COL', 'COLGROUP']\r\n            ['TD', 'TR', 'TBODY', 'TABLE'].includes(mutation.target.tagName)\r\n          ) {\r\n            this.fixTableByLisenter();\r\n            return true;\r\n          }\r\n          return false;\r\n        });\r\n      },\r\n    );\r\n  }\r\n}\r\n\r\nTableModule.moduleName = moduleName.table;\r\nTableModule.toolName = toolName.table;\r\n\r\nTableModule.keyboradHandler = {\r\n  'forbid remove table by backspace': {\r\n    key: 'backspace',\r\n    collapsed: true,\r\n    offset: 0,\r\n    handler(range, context) {\r\n      const [blot] = this.quill.getLine(range.index);\r\n      if (blot.prev instanceof TableWrapperFormat) return false;\r\n\r\n      if (context.format[blotName.tableCellInner]) {\r\n        const offset = blot.offset(findParentBlot(blot, blotName.tableCellInner));\r\n        if (offset === 0) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    },\r\n  },\r\n  'forbid remove table by delete': {\r\n    key: 'delete',\r\n    collapsed: true,\r\n    handler(range, context) {\r\n      const [blot, offsetInline] = this.quill.getLine(range.index);\r\n      if (blot.next instanceof TableWrapperFormat && offsetInline === blot.length() - 1) return false;\r\n\r\n      if (context.format[blotName.tableCellInner]) {\r\n        const tableInnerBlot = findParentBlot(blot, blotName.tableCellInner);\r\n        const offsetInTableInner = blot.offset(tableInnerBlot);\r\n        if (offsetInTableInner + offsetInline === tableInnerBlot.length() - 1) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    },\r\n  },\r\n};\r\nTableModule.createEventName = CREATE_TABLE;\r\nicons[TableModule.toolName] = TableSvg;\r\n\r\nexport const rewirteFormats = () =>\r\n  Quill.register(\r\n    {\r\n      [`formats/list/item`]: ListItemRewrite,\r\n    },\r\n    true,\r\n  );\r\n\r\nexport default TableModule;\r\nexport {\r\n  TableOperationMenu,\r\n  TableSelection,\r\n  TableTooltip,\r\n};\r\n\r\n// TODO: redo and undo\r\n// TODO: maybe col need change to EmbedBlock\r\n// TODO: BlockEmbed can not setContents to insert table\r\n// TODO: don't allow index at col\r\n"],"names":["CREATE_TABLE","blotName","moduleName","toolName","randomId","Math","random","toString","slice","zindex","dialog","_ref","arguments","length","undefined","child","_ref$target","target","document","body","_ref$beforeClose","beforeClose","appendTo","createElement","classList","add","style","zIndex","overlay","appendChild","content","addEventListener","e","stopPropagation","originOverflow","getComputedStyle","overflow","close","error","console","message","remove","createInputItem","label","options","type","value","inputItem","inputLabel","textContent","inputInput","input","key","setAttribute","max","min","errorTip","msg","contains","querySelector","removeError","item","showTableCreator","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","row","col","box","inputContent","_createInputItem","rowItem","rowInput","rowErrorTip","_createInputItem2","colItem","colInput","colErrorTip","control","confirmBtn","cancelBtn","_args2","wrap","_context2","prev","next","abrupt","Promise","resolve","reject","Error","_callee","_context","Number","isNaN","stop","apply","this","css","domNode","rules","prop","isRectanglesIntersect","a","b","tolerance","minAx","x","minAy","y","maxAx","x1","maxAy","y1","minBx","minBy","maxBx","maxBy","findParentBlot","blot","targetBlotName","parent","statics","scroll","concat","isFunction","val","MENU_ITEMS_DEFAULT","insertColumnLeft","text","handler","tableModule","quill","getModule","appendCol","hideTableTools","insertColumnRight","insertRowTop","appendRow","insertRowBottom","groupEnd","removeCol","removeRow","removeTable","mergeCell","mergeCells","splitCell","setBackgroundColor","isColorChoose","color","setStyle","backgroundColor","selectedTds","clearBackgroundColor","setBorderColor","borderColor","clearBorderColor","TableOperationMenu","constructor","params","table","tableSelection","menuItems","mergeMenuItems","boundary","destroyHandler","destroy","bind","menuInitial","_this$options","_this$options3","_this$options$items","_this$options2","replaceItems","items","modifyItems","_this$options$items2","_this$options4","modifyMenuItems","_this$options5","newOptionsItems","_objectSpread","_i","_Object$entries","Object","entries","_this$options6","_Object$entries$_i","_slicedToArray","itemNewOptions","assign","setMenuPosition","_ref6","left","top","containerRect","container","getBoundingClientRect","menuRect","resLeft","resTop","width","height","_ref7","_table","_row","_cell","position","_i2","_Object$entries2","_Object$entries2$_i","name","subTitle","subTitleCreator","menuItemCreator","dividingCreator","dividing","title","removeEventListener","_ref8","iconSrc","node","iconSpan","innerHTML","textSpan","nodes","call","Array","isArray","map","sub","padding","border","Container","Quill","import","Parchment","ContainerFormat","create","super","insertBefore","ref","children","head","format","tail","replace","defaultChild","moveChildren","tagName","scope","Scope","BLOCK_BLOT","TableCellInnerFormat","tableId","rowId","colId","rowspan","colspan","dataset","_style","clearDeltaCache","forEach","cache","getColumnIndex","getColIds","indexOf","cloneTarget","clone","formats","_this$domNode$dataset","optimize","_this$domNode$dataset2","tableWrapper","tableBody","tr","td","className","TableRowFormat","insertCell","targetIndex","cur","skip","iterator","index","i","getCellInner","skipRowNum","tableCell","tableCellInner","block","getCellByColumIndex","stopIndex","cellEndIndex","removeCell","_this$getCellByColumI2","descendants","colIds","foreachCellInner","func","TableBodyFormat","deleteAt","forEachAt","offset","insertRow","tableBlot","_step","rows","insertColIds","Set","_iterator","_createForOfIteratorHelper","s","n","done","cell","delete","colIndex","err","f","_step2","_iterator2","tdInner","TableCellFormat","cssText","getAttribute","_this$domNode$dataset3","cellInner","TableColFormat","full","parseFloat","hasOwn","_this$domNode$dataset4","tableColgroup","_this$domNode$dataset5","ttableId","tcolId","TableFormat","formatTableWidth","colWidthFillTable","cols","colsWidth","reduce","sum","setTimeout","getRows","getRowIds","d","getCols","TableColgroupFormat","findCol","insertColByIndex","TypeError","removeColByIndex","TableWrapperFormat","preventDefault","dataTransfer","dropEffect","allowedChildren","some","_document$querySelect","ListItem","ListItemRewrite","replaceWith","isolate","replacement","attributes","copy","PRIMARY_COLOR","TableSelection","optionsMerge","startScrollX","dragging","selectingHandler","mouseDownHandler","cellSelect","scrollHandler","helpLinesInitial","ResizeObserver","hideSelection","observe","root","closeHandler","on","events","TEXT_CHANGE","_this$options7","primaryColor","addScrollEvent","dom","handle","push","clearScrollEvent","_this$scrollHandler$i","addContainer","mousedownEvent","button","clientX","clientY","closestTable","closest","startTableId","startPoint","parentNode","scrollLeft","computeSelectedTds","showSelection","mouseMoveHandler","mousemoveEvent","movePoint","blur","updateSelection","mouseUpHandler","endPoint","tableContainer","find","targetRect","tableCells","selectedCells","findEnd","_step3","_iterator3","__rect","_cell$__rect","right","bottom","_i3","_arr","scrollTop","from","tableViewScrollLeft","display","srcollHide","off","TIP_HEIGHT","TableTooltip","_defineProperty","tableMainRect","rootRect","tableDisableToolHandlers","curTableId","focusTableChange","tableCols","hide","isMobile","window","handledEvents","down","move","up","listen","_this$options8","_this$options9","tipHeight","disableToolNames","EDITOR_CHANGE","eventName","range","getSelection","enableFromTable","descendant","_tableWrapper$childre","disableFromTable","tbody","_tbody$children","scrollSync","show","toggleDisableToolbarTools","toolbar","disableByTable","_step4","_iterator4","handlers","_step5","_iterator5","controls","_toolbar$container$qu","_step5$value","btn","includes","toLowerCase","_this$scrollHandler$i2","tableWrapperRect","join","bindDrag","_step6","tipColBreak","curColIndex","tableColHeads","getElementsByClassName","tableColHeadSeparators","handleMousemove","rect","tableWidth","resX","changedTouches","minWidth","CELL_MIN_PRE","maxRange","Infinity","minRange","w","handleMouseup","parseInt","pre","oldWidthPre","last","totalWidthNextPre","removeChild","handleMousedown","divDom","fullWidth","colWidthAttr","tableRect","_iterator6","_step6$value","el","Delta","Break","BlockEmbed","Block","icons","requiredContainer","register","tableCantInsert","isForbidInTableBlot","isForbidInTable","current","TableModule","controlItem","tableInsertSelectCloseHandler","_ref10","_this$controlItem$get","TableSvg","buildCustomSelect","customSelect","customButton","addHandler","handleSelectDisplay","pasteTableHandler","evt","path","composedPath","tableNode","toUpperCase","showTableTools","selection","_this$tableSelection","tableOperationMenu","rowNode","cellNode","operationMenu","dragResize","theme","tableToolTip","listenBalanceCells","cellCount","clipboard","addMatcher","delta","_delta$ops$0$attribut","_delta$ops$0$insert","ops","colDelta","hasCol","originTableWidth","isFull","insert","defaultColWidth","id","blotName_tableCol","_delta$slice$ops$","compose","retain","blotName_tableCellInner","_this","_callee3","selector","_context3","t0","sent","createSelect","_e$detail","detail","insertTable","_this2","_callee4","_context4","active","closeSelecte","selectDom","selectBlock","r","c","selectItem","selectCustom","sendTableData","_ref4","dispatchEvent","CustomEvent","updateSelectBlockItems","_selectDom$dataset","prototype","querySelectorAll","childs","_e$target$dataset","_selectDom$dataset2","then","_ref5","catch","log","showTableSelector","columns","focus","currentBlot","getLeaf","fill","_getComputedStyle","paddingLeft","paddingRight","memo","floor","updateContents","sources","USER","setSelection","API","styles","cells","fixTableByRemove","_step7","trBlots","colIdMap","idMap","reverseTrBlots","reverse","removeTr","_iterator7","_loop","_step7$value","_i4","_Object$values","values","spanCols","_i5","_Object$values2","spanCol","shift","nextSpanCols","_step8","_iterator8","_step8$value","_step9","_iterator9","isDown","baseTd","tableBodyBlot","baseTdParentTr","insertRowIndex","_step10","trs","endTrIndex","nextTrIndex","_iterator10","patchTds","_loop2","nextTr","_i6","_Object$entries3","_Object$entries3$_i","_Object$entries3$_i$","isRight","_selectedTds$reduce","columnIndex","newColId","colgroup","_i7","_Object$values3","_step11","_iterator11","_step11$value","_step12","colspanMap","_iterator12","colspanCount","_i8","_Object$values4","_step13","_iterator13","_step13$value","baseTr","curTr","_step14","_iterator14","counts","selectTd","rowCount","colCount","fixUnusuaDeletelTable","tableColIds","_step15","_ref9","cellSpanMap","_iterator15","_step15$value","indexTr","indexTd","indexCol","curCellSpan","tds","curTd","balanceTables","_step16","_iterator16","wait","timeout","fixTableByLisenter","_len","args","_key","clearTimeout","SCROLL_OPTIMIZE","mutations","mutation","keyboradHandler","collapsed","context","getLine","_this$quill$getLine4","offsetInline","tableInnerBlot","createEventName","rewirteFormats"],"mappings":"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"}